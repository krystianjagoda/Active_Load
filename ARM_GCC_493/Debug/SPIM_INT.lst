ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccyL8Ohn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SPIM_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SPIM_TX_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	SPIM_TX_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	SPIM_TX_ISR, %function
  24              	SPIM_TX_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\SPIM_INT.c"
   1:Generated_Source\PSoC5/SPIM_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPIM_INT.c **** * File Name: SPIM_INT.c
   3:Generated_Source\PSoC5/SPIM_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPIM_INT.c **** *
   5:Generated_Source\PSoC5/SPIM_INT.c **** * Description:
   6:Generated_Source\PSoC5/SPIM_INT.c **** *  This file provides all Interrupt Service Routine (ISR) for the SPI Master
   7:Generated_Source\PSoC5/SPIM_INT.c **** *  component.
   8:Generated_Source\PSoC5/SPIM_INT.c **** *
   9:Generated_Source\PSoC5/SPIM_INT.c **** * Note:
  10:Generated_Source\PSoC5/SPIM_INT.c **** *  None.
  11:Generated_Source\PSoC5/SPIM_INT.c **** *
  12:Generated_Source\PSoC5/SPIM_INT.c **** ********************************************************************************
  13:Generated_Source\PSoC5/SPIM_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/SPIM_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC5/SPIM_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC5/SPIM_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/SPIM_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/SPIM_INT.c **** 
  19:Generated_Source\PSoC5/SPIM_INT.c **** #include "SPIM_PVT.h"
  20:Generated_Source\PSoC5/SPIM_INT.c **** #include "cyapicallbacks.h"
  21:Generated_Source\PSoC5/SPIM_INT.c **** 
  22:Generated_Source\PSoC5/SPIM_INT.c **** /* User code required at start of ISR */
  23:Generated_Source\PSoC5/SPIM_INT.c **** /* `#START SPIM_ISR_START_DEF` */
  24:Generated_Source\PSoC5/SPIM_INT.c **** 
  25:Generated_Source\PSoC5/SPIM_INT.c **** /* `#END` */
  26:Generated_Source\PSoC5/SPIM_INT.c **** 
  27:Generated_Source\PSoC5/SPIM_INT.c **** 
  28:Generated_Source\PSoC5/SPIM_INT.c **** /*******************************************************************************
  29:Generated_Source\PSoC5/SPIM_INT.c **** * Function Name: SPIM_TX_ISR
  30:Generated_Source\PSoC5/SPIM_INT.c **** ********************************************************************************
  31:Generated_Source\PSoC5/SPIM_INT.c **** *
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccyL8Ohn.s 			page 2


  32:Generated_Source\PSoC5/SPIM_INT.c **** * Summary:
  33:Generated_Source\PSoC5/SPIM_INT.c **** *  Interrupt Service Routine for TX portion of the SPI Master.
  34:Generated_Source\PSoC5/SPIM_INT.c **** *
  35:Generated_Source\PSoC5/SPIM_INT.c **** * Parameters:
  36:Generated_Source\PSoC5/SPIM_INT.c **** *  None.
  37:Generated_Source\PSoC5/SPIM_INT.c **** *
  38:Generated_Source\PSoC5/SPIM_INT.c **** * Return:
  39:Generated_Source\PSoC5/SPIM_INT.c **** *  None.
  40:Generated_Source\PSoC5/SPIM_INT.c **** *
  41:Generated_Source\PSoC5/SPIM_INT.c **** * Global variables:
  42:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
  43:Generated_Source\PSoC5/SPIM_INT.c **** *  have been written down in the TX software buffer.
  44:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_txBufferRead - used for the account of the bytes which
  45:Generated_Source\PSoC5/SPIM_INT.c **** *  have been read from the TX software buffer, modified when exist data to
  46:Generated_Source\PSoC5/SPIM_INT.c **** *  sending and FIFO Not Full.
  47:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
  48:Generated_Source\PSoC5/SPIM_INT.c **** *  data to sending.
  49:Generated_Source\PSoC5/SPIM_INT.c **** *  All described above Global variables are used when Software Buffer is used.
  50:Generated_Source\PSoC5/SPIM_INT.c **** *
  51:Generated_Source\PSoC5/SPIM_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC5/SPIM_INT.c **** CY_ISR(SPIM_TX_ISR)
  53:Generated_Source\PSoC5/SPIM_INT.c **** {
  27              		.loc 1 53 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  54:Generated_Source\PSoC5/SPIM_INT.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  55:Generated_Source\PSoC5/SPIM_INT.c ****         uint8 tmpStatus;
  56:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  57:Generated_Source\PSoC5/SPIM_INT.c **** 
  58:Generated_Source\PSoC5/SPIM_INT.c ****     #ifdef SPIM_TX_ISR_ENTRY_CALLBACK
  59:Generated_Source\PSoC5/SPIM_INT.c ****         SPIM_TX_ISR_EntryCallback();
  60:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* SPIM_TX_ISR_ENTRY_CALLBACK */
  61:Generated_Source\PSoC5/SPIM_INT.c **** 
  62:Generated_Source\PSoC5/SPIM_INT.c ****     /* User code required at start of ISR */
  63:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#START SPIM_TX_ISR_START` */
  64:Generated_Source\PSoC5/SPIM_INT.c **** 
  65:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#END` */
  66:Generated_Source\PSoC5/SPIM_INT.c ****     
  67:Generated_Source\PSoC5/SPIM_INT.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  68:Generated_Source\PSoC5/SPIM_INT.c ****         /* Check if TX data buffer is not empty and there is space in TX FIFO */
  69:Generated_Source\PSoC5/SPIM_INT.c ****         while(SPIM_txBufferRead != SPIM_txBufferWrite)
  70:Generated_Source\PSoC5/SPIM_INT.c ****         {
  71:Generated_Source\PSoC5/SPIM_INT.c ****             tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
  72:Generated_Source\PSoC5/SPIM_INT.c ****             SPIM_swStatusTx = tmpStatus;
  73:Generated_Source\PSoC5/SPIM_INT.c **** 
  74:Generated_Source\PSoC5/SPIM_INT.c ****             if(0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL))
  75:Generated_Source\PSoC5/SPIM_INT.c ****             {
  76:Generated_Source\PSoC5/SPIM_INT.c ****                 if(0u == SPIM_txBufferFull)
  77:Generated_Source\PSoC5/SPIM_INT.c ****                 {
  78:Generated_Source\PSoC5/SPIM_INT.c ****                    SPIM_txBufferRead++;
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccyL8Ohn.s 			page 3


  79:Generated_Source\PSoC5/SPIM_INT.c **** 
  80:Generated_Source\PSoC5/SPIM_INT.c ****                     if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
  81:Generated_Source\PSoC5/SPIM_INT.c ****                     {
  82:Generated_Source\PSoC5/SPIM_INT.c ****                         SPIM_txBufferRead = 0u;
  83:Generated_Source\PSoC5/SPIM_INT.c ****                     }
  84:Generated_Source\PSoC5/SPIM_INT.c ****                 }
  85:Generated_Source\PSoC5/SPIM_INT.c ****                 else
  86:Generated_Source\PSoC5/SPIM_INT.c ****                 {
  87:Generated_Source\PSoC5/SPIM_INT.c ****                     SPIM_txBufferFull = 0u;
  88:Generated_Source\PSoC5/SPIM_INT.c ****                 }
  89:Generated_Source\PSoC5/SPIM_INT.c **** 
  90:Generated_Source\PSoC5/SPIM_INT.c ****                 /* Put data element into the TX FIFO */
  91:Generated_Source\PSoC5/SPIM_INT.c ****                 CY_SET_REG8(SPIM_TXDATA_PTR, 
  92:Generated_Source\PSoC5/SPIM_INT.c ****                                              SPIM_txBuffer[SPIM_txBufferRead]);
  93:Generated_Source\PSoC5/SPIM_INT.c ****             }
  94:Generated_Source\PSoC5/SPIM_INT.c ****             else
  95:Generated_Source\PSoC5/SPIM_INT.c ****             {
  96:Generated_Source\PSoC5/SPIM_INT.c ****                 break;
  97:Generated_Source\PSoC5/SPIM_INT.c ****             }
  98:Generated_Source\PSoC5/SPIM_INT.c ****         }
  99:Generated_Source\PSoC5/SPIM_INT.c **** 
 100:Generated_Source\PSoC5/SPIM_INT.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 101:Generated_Source\PSoC5/SPIM_INT.c ****         {
 102:Generated_Source\PSoC5/SPIM_INT.c ****             /* TX Buffer is EMPTY: disable interrupt on TX NOT FULL */
 103:Generated_Source\PSoC5/SPIM_INT.c ****             SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 104:Generated_Source\PSoC5/SPIM_INT.c ****         }
 105:Generated_Source\PSoC5/SPIM_INT.c **** 
 106:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 107:Generated_Source\PSoC5/SPIM_INT.c **** 
 108:Generated_Source\PSoC5/SPIM_INT.c ****     /* User code required at end of ISR (Optional) */
 109:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#START SPIM_TX_ISR_END` */
 110:Generated_Source\PSoC5/SPIM_INT.c **** 
 111:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#END` */
 112:Generated_Source\PSoC5/SPIM_INT.c ****     
 113:Generated_Source\PSoC5/SPIM_INT.c ****     #ifdef SPIM_TX_ISR_EXIT_CALLBACK
 114:Generated_Source\PSoC5/SPIM_INT.c ****         SPIM_TX_ISR_ExitCallback();
 115:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* SPIM_TX_ISR_EXIT_CALLBACK */
 116:Generated_Source\PSoC5/SPIM_INT.c **** }
  37              		.loc 1 116 0
  38 0004 BD46     		mov	sp, r7
  39              		.cfi_def_cfa_register 13
  40              		@ sp needed
  41 0006 5DF8047B 		ldr	r7, [sp], #4
  42              		.cfi_restore 7
  43              		.cfi_def_cfa_offset 0
  44 000a 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE0:
  47              		.size	SPIM_TX_ISR, .-SPIM_TX_ISR
  48              		.section	.text.SPIM_RX_ISR,"ax",%progbits
  49              		.align	2
  50              		.global	SPIM_RX_ISR
  51              		.thumb
  52              		.thumb_func
  53              		.type	SPIM_RX_ISR, %function
  54              	SPIM_RX_ISR:
  55              	.LFB1:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccyL8Ohn.s 			page 4


 117:Generated_Source\PSoC5/SPIM_INT.c **** 
 118:Generated_Source\PSoC5/SPIM_INT.c **** 
 119:Generated_Source\PSoC5/SPIM_INT.c **** /*******************************************************************************
 120:Generated_Source\PSoC5/SPIM_INT.c **** * Function Name: SPIM_RX_ISR
 121:Generated_Source\PSoC5/SPIM_INT.c **** ********************************************************************************
 122:Generated_Source\PSoC5/SPIM_INT.c **** *
 123:Generated_Source\PSoC5/SPIM_INT.c **** * Summary:
 124:Generated_Source\PSoC5/SPIM_INT.c **** *  Interrupt Service Routine for RX portion of the SPI Master.
 125:Generated_Source\PSoC5/SPIM_INT.c **** *
 126:Generated_Source\PSoC5/SPIM_INT.c **** * Parameters:
 127:Generated_Source\PSoC5/SPIM_INT.c **** *  None.
 128:Generated_Source\PSoC5/SPIM_INT.c **** *
 129:Generated_Source\PSoC5/SPIM_INT.c **** * Return:
 130:Generated_Source\PSoC5/SPIM_INT.c **** *  None.
 131:Generated_Source\PSoC5/SPIM_INT.c **** *
 132:Generated_Source\PSoC5/SPIM_INT.c **** * Global variables:
 133:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 134:Generated_Source\PSoC5/SPIM_INT.c **** *  have been written down in the RX software buffer modified when FIFO contains
 135:Generated_Source\PSoC5/SPIM_INT.c **** *  new data.
 136:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 137:Generated_Source\PSoC5/SPIM_INT.c **** *  have been read from the RX software buffer, modified when overflow occurred.
 138:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 139:Generated_Source\PSoC5/SPIM_INT.c **** *  received data, modified when FIFO contains new data.
 140:Generated_Source\PSoC5/SPIM_INT.c **** *  All described above Global variables are used when Software Buffer is used.
 141:Generated_Source\PSoC5/SPIM_INT.c **** *
 142:Generated_Source\PSoC5/SPIM_INT.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/SPIM_INT.c **** CY_ISR(SPIM_RX_ISR)
 144:Generated_Source\PSoC5/SPIM_INT.c **** {
  56              		.loc 1 144 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61 0000 80B4     		push	{r7}
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 7, -4
  64 0002 00AF     		add	r7, sp, #0
  65              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/SPIM_INT.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 146:Generated_Source\PSoC5/SPIM_INT.c ****         uint8 tmpStatus;
 147:Generated_Source\PSoC5/SPIM_INT.c ****         uint8 rxData;
 148:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 149:Generated_Source\PSoC5/SPIM_INT.c **** 
 150:Generated_Source\PSoC5/SPIM_INT.c ****     #ifdef SPIM_RX_ISR_ENTRY_CALLBACK
 151:Generated_Source\PSoC5/SPIM_INT.c ****         SPIM_RX_ISR_EntryCallback();
 152:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* SPIM_RX_ISR_ENTRY_CALLBACK */
 153:Generated_Source\PSoC5/SPIM_INT.c **** 
 154:Generated_Source\PSoC5/SPIM_INT.c ****     /* User code required at start of ISR */
 155:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#START SPIM_RX_ISR_START` */
 156:Generated_Source\PSoC5/SPIM_INT.c **** 
 157:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#END` */
 158:Generated_Source\PSoC5/SPIM_INT.c ****     
 159:Generated_Source\PSoC5/SPIM_INT.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 160:Generated_Source\PSoC5/SPIM_INT.c **** 
 161:Generated_Source\PSoC5/SPIM_INT.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 162:Generated_Source\PSoC5/SPIM_INT.c ****         SPIM_swStatusRx = tmpStatus;
 163:Generated_Source\PSoC5/SPIM_INT.c **** 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccyL8Ohn.s 			page 5


 164:Generated_Source\PSoC5/SPIM_INT.c ****         /* Check if RX data FIFO has some data to be moved into the RX Buffer */
 165:Generated_Source\PSoC5/SPIM_INT.c ****         while(0u != (SPIM_swStatusRx & SPIM_STS_RX_FIFO_NOT_EMPTY))
 166:Generated_Source\PSoC5/SPIM_INT.c ****         {
 167:Generated_Source\PSoC5/SPIM_INT.c ****             rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 168:Generated_Source\PSoC5/SPIM_INT.c **** 
 169:Generated_Source\PSoC5/SPIM_INT.c ****             /* Set next pointer. */
 170:Generated_Source\PSoC5/SPIM_INT.c ****             SPIM_rxBufferWrite++;
 171:Generated_Source\PSoC5/SPIM_INT.c ****             if(SPIM_rxBufferWrite >= SPIM_RX_BUFFER_SIZE)
 172:Generated_Source\PSoC5/SPIM_INT.c ****             {
 173:Generated_Source\PSoC5/SPIM_INT.c ****                 SPIM_rxBufferWrite = 0u;
 174:Generated_Source\PSoC5/SPIM_INT.c ****             }
 175:Generated_Source\PSoC5/SPIM_INT.c **** 
 176:Generated_Source\PSoC5/SPIM_INT.c ****             if(SPIM_rxBufferWrite == SPIM_rxBufferRead)
 177:Generated_Source\PSoC5/SPIM_INT.c ****             {
 178:Generated_Source\PSoC5/SPIM_INT.c ****                 SPIM_rxBufferRead++;
 179:Generated_Source\PSoC5/SPIM_INT.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 180:Generated_Source\PSoC5/SPIM_INT.c ****                 {
 181:Generated_Source\PSoC5/SPIM_INT.c ****                     SPIM_rxBufferRead = 0u;
 182:Generated_Source\PSoC5/SPIM_INT.c ****                 }
 183:Generated_Source\PSoC5/SPIM_INT.c **** 
 184:Generated_Source\PSoC5/SPIM_INT.c ****                 SPIM_rxBufferFull = 1u;
 185:Generated_Source\PSoC5/SPIM_INT.c ****             }
 186:Generated_Source\PSoC5/SPIM_INT.c **** 
 187:Generated_Source\PSoC5/SPIM_INT.c ****             /* Move data from the FIFO to the Buffer */
 188:Generated_Source\PSoC5/SPIM_INT.c ****             SPIM_rxBuffer[SPIM_rxBufferWrite] = rxData;
 189:Generated_Source\PSoC5/SPIM_INT.c **** 
 190:Generated_Source\PSoC5/SPIM_INT.c ****             tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 191:Generated_Source\PSoC5/SPIM_INT.c ****             SPIM_swStatusRx = tmpStatus;
 192:Generated_Source\PSoC5/SPIM_INT.c ****         }
 193:Generated_Source\PSoC5/SPIM_INT.c **** 
 194:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 195:Generated_Source\PSoC5/SPIM_INT.c **** 
 196:Generated_Source\PSoC5/SPIM_INT.c ****     /* User code required at end of ISR (Optional) */
 197:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#START SPIM_RX_ISR_END` */
 198:Generated_Source\PSoC5/SPIM_INT.c **** 
 199:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#END` */
 200:Generated_Source\PSoC5/SPIM_INT.c ****     
 201:Generated_Source\PSoC5/SPIM_INT.c ****     #ifdef SPIM_RX_ISR_EXIT_CALLBACK
 202:Generated_Source\PSoC5/SPIM_INT.c ****         SPIM_RX_ISR_ExitCallback();
 203:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* SPIM_RX_ISR_EXIT_CALLBACK */
 204:Generated_Source\PSoC5/SPIM_INT.c **** }
  66              		.loc 1 204 0
  67 0004 BD46     		mov	sp, r7
  68              		.cfi_def_cfa_register 13
  69              		@ sp needed
  70 0006 5DF8047B 		ldr	r7, [sp], #4
  71              		.cfi_restore 7
  72              		.cfi_def_cfa_offset 0
  73 000a 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE1:
  76              		.size	SPIM_RX_ISR, .-SPIM_RX_ISR
  77              		.text
  78              	.Letext0:
  79              		.section	.debug_info,"",%progbits
  80              	.Ldebug_info0:
  81 0000 A6000000 		.4byte	0xa6
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccyL8Ohn.s 			page 6


  82 0004 0400     		.2byte	0x4
  83 0006 00000000 		.4byte	.Ldebug_abbrev0
  84 000a 04       		.byte	0x4
  85 000b 01       		.uleb128 0x1
  86 000c 9A000000 		.4byte	.LASF15
  87 0010 01       		.byte	0x1
  88 0011 1B000000 		.4byte	.LASF16
  89 0015 5E010000 		.4byte	.LASF17
  90 0019 00000000 		.4byte	.Ldebug_ranges0+0
  91 001d 00000000 		.4byte	0
  92 0021 00000000 		.4byte	.Ldebug_line0
  93 0025 02       		.uleb128 0x2
  94 0026 01       		.byte	0x1
  95 0027 06       		.byte	0x6
  96 0028 42010000 		.4byte	.LASF0
  97 002c 02       		.uleb128 0x2
  98 002d 01       		.byte	0x1
  99 002e 08       		.byte	0x8
 100 002f 7E000000 		.4byte	.LASF1
 101 0033 02       		.uleb128 0x2
 102 0034 02       		.byte	0x2
 103 0035 05       		.byte	0x5
 104 0036 54010000 		.4byte	.LASF2
 105 003a 02       		.uleb128 0x2
 106 003b 02       		.byte	0x2
 107 003c 07       		.byte	0x7
 108 003d 2F010000 		.4byte	.LASF3
 109 0041 02       		.uleb128 0x2
 110 0042 04       		.byte	0x4
 111 0043 05       		.byte	0x5
 112 0044 91000000 		.4byte	.LASF4
 113 0048 02       		.uleb128 0x2
 114 0049 04       		.byte	0x4
 115 004a 07       		.byte	0x7
 116 004b 55000000 		.4byte	.LASF5
 117 004f 02       		.uleb128 0x2
 118 0050 08       		.byte	0x8
 119 0051 05       		.byte	0x5
 120 0052 00000000 		.4byte	.LASF6
 121 0056 02       		.uleb128 0x2
 122 0057 08       		.byte	0x8
 123 0058 07       		.byte	0x7
 124 0059 67000000 		.4byte	.LASF7
 125 005d 03       		.uleb128 0x3
 126 005e 04       		.byte	0x4
 127 005f 05       		.byte	0x5
 128 0060 696E7400 		.ascii	"int\000"
 129 0064 02       		.uleb128 0x2
 130 0065 04       		.byte	0x4
 131 0066 07       		.byte	0x7
 132 0067 0E000000 		.4byte	.LASF8
 133 006b 02       		.uleb128 0x2
 134 006c 04       		.byte	0x4
 135 006d 04       		.byte	0x4
 136 006e 4E010000 		.4byte	.LASF9
 137 0072 02       		.uleb128 0x2
 138 0073 08       		.byte	0x8
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccyL8Ohn.s 			page 7


 139 0074 04       		.byte	0x4
 140 0075 28010000 		.4byte	.LASF10
 141 0079 02       		.uleb128 0x2
 142 007a 01       		.byte	0x1
 143 007b 08       		.byte	0x8
 144 007c 8C000000 		.4byte	.LASF11
 145 0080 02       		.uleb128 0x2
 146 0081 04       		.byte	0x4
 147 0082 07       		.byte	0x7
 148 0083 99010000 		.4byte	.LASF12
 149 0087 04       		.uleb128 0x4
 150 0088 3D000000 		.4byte	.LASF13
 151 008c 01       		.byte	0x1
 152 008d 34       		.byte	0x34
 153 008e 00000000 		.4byte	.LFB0
 154 0092 0C000000 		.4byte	.LFE0-.LFB0
 155 0096 01       		.uleb128 0x1
 156 0097 9C       		.byte	0x9c
 157 0098 04       		.uleb128 0x4
 158 0099 49000000 		.4byte	.LASF14
 159 009d 01       		.byte	0x1
 160 009e 8F       		.byte	0x8f
 161 009f 00000000 		.4byte	.LFB1
 162 00a3 0C000000 		.4byte	.LFE1-.LFB1
 163 00a7 01       		.uleb128 0x1
 164 00a8 9C       		.byte	0x9c
 165 00a9 00       		.byte	0
 166              		.section	.debug_abbrev,"",%progbits
 167              	.Ldebug_abbrev0:
 168 0000 01       		.uleb128 0x1
 169 0001 11       		.uleb128 0x11
 170 0002 01       		.byte	0x1
 171 0003 25       		.uleb128 0x25
 172 0004 0E       		.uleb128 0xe
 173 0005 13       		.uleb128 0x13
 174 0006 0B       		.uleb128 0xb
 175 0007 03       		.uleb128 0x3
 176 0008 0E       		.uleb128 0xe
 177 0009 1B       		.uleb128 0x1b
 178 000a 0E       		.uleb128 0xe
 179 000b 55       		.uleb128 0x55
 180 000c 17       		.uleb128 0x17
 181 000d 11       		.uleb128 0x11
 182 000e 01       		.uleb128 0x1
 183 000f 10       		.uleb128 0x10
 184 0010 17       		.uleb128 0x17
 185 0011 00       		.byte	0
 186 0012 00       		.byte	0
 187 0013 02       		.uleb128 0x2
 188 0014 24       		.uleb128 0x24
 189 0015 00       		.byte	0
 190 0016 0B       		.uleb128 0xb
 191 0017 0B       		.uleb128 0xb
 192 0018 3E       		.uleb128 0x3e
 193 0019 0B       		.uleb128 0xb
 194 001a 03       		.uleb128 0x3
 195 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccyL8Ohn.s 			page 8


 196 001c 00       		.byte	0
 197 001d 00       		.byte	0
 198 001e 03       		.uleb128 0x3
 199 001f 24       		.uleb128 0x24
 200 0020 00       		.byte	0
 201 0021 0B       		.uleb128 0xb
 202 0022 0B       		.uleb128 0xb
 203 0023 3E       		.uleb128 0x3e
 204 0024 0B       		.uleb128 0xb
 205 0025 03       		.uleb128 0x3
 206 0026 08       		.uleb128 0x8
 207 0027 00       		.byte	0
 208 0028 00       		.byte	0
 209 0029 04       		.uleb128 0x4
 210 002a 2E       		.uleb128 0x2e
 211 002b 00       		.byte	0
 212 002c 3F       		.uleb128 0x3f
 213 002d 19       		.uleb128 0x19
 214 002e 03       		.uleb128 0x3
 215 002f 0E       		.uleb128 0xe
 216 0030 3A       		.uleb128 0x3a
 217 0031 0B       		.uleb128 0xb
 218 0032 3B       		.uleb128 0x3b
 219 0033 0B       		.uleb128 0xb
 220 0034 27       		.uleb128 0x27
 221 0035 19       		.uleb128 0x19
 222 0036 11       		.uleb128 0x11
 223 0037 01       		.uleb128 0x1
 224 0038 12       		.uleb128 0x12
 225 0039 06       		.uleb128 0x6
 226 003a 40       		.uleb128 0x40
 227 003b 18       		.uleb128 0x18
 228 003c 9742     		.uleb128 0x2117
 229 003e 19       		.uleb128 0x19
 230 003f 00       		.byte	0
 231 0040 00       		.byte	0
 232 0041 00       		.byte	0
 233              		.section	.debug_aranges,"",%progbits
 234 0000 24000000 		.4byte	0x24
 235 0004 0200     		.2byte	0x2
 236 0006 00000000 		.4byte	.Ldebug_info0
 237 000a 04       		.byte	0x4
 238 000b 00       		.byte	0
 239 000c 0000     		.2byte	0
 240 000e 0000     		.2byte	0
 241 0010 00000000 		.4byte	.LFB0
 242 0014 0C000000 		.4byte	.LFE0-.LFB0
 243 0018 00000000 		.4byte	.LFB1
 244 001c 0C000000 		.4byte	.LFE1-.LFB1
 245 0020 00000000 		.4byte	0
 246 0024 00000000 		.4byte	0
 247              		.section	.debug_ranges,"",%progbits
 248              	.Ldebug_ranges0:
 249 0000 00000000 		.4byte	.LFB0
 250 0004 0C000000 		.4byte	.LFE0
 251 0008 00000000 		.4byte	.LFB1
 252 000c 0C000000 		.4byte	.LFE1
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccyL8Ohn.s 			page 9


 253 0010 00000000 		.4byte	0
 254 0014 00000000 		.4byte	0
 255              		.section	.debug_line,"",%progbits
 256              	.Ldebug_line0:
 257 0000 63000000 		.section	.debug_str,"MS",%progbits,1
 257      02003800 
 257      00000201 
 257      FB0E0D00 
 257      01010101 
 258              	.LASF6:
 259 0000 6C6F6E67 		.ascii	"long long int\000"
 259      206C6F6E 
 259      6720696E 
 259      7400
 260              	.LASF8:
 261 000e 756E7369 		.ascii	"unsigned int\000"
 261      676E6564 
 261      20696E74 
 261      00
 262              	.LASF16:
 263 001b 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPIM_INT.c\000"
 263      72617465 
 263      645F536F 
 263      75726365 
 263      5C50536F 
 264              	.LASF13:
 265 003d 5350494D 		.ascii	"SPIM_TX_ISR\000"
 265      5F54585F 
 265      49535200 
 266              	.LASF14:
 267 0049 5350494D 		.ascii	"SPIM_RX_ISR\000"
 267      5F52585F 
 267      49535200 
 268              	.LASF5:
 269 0055 6C6F6E67 		.ascii	"long unsigned int\000"
 269      20756E73 
 269      69676E65 
 269      6420696E 
 269      7400
 270              	.LASF7:
 271 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 271      206C6F6E 
 271      6720756E 
 271      7369676E 
 271      65642069 
 272              	.LASF1:
 273 007e 756E7369 		.ascii	"unsigned char\000"
 273      676E6564 
 273      20636861 
 273      7200
 274              	.LASF11:
 275 008c 63686172 		.ascii	"char\000"
 275      00
 276              	.LASF4:
 277 0091 6C6F6E67 		.ascii	"long int\000"
 277      20696E74 
 277      00
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccyL8Ohn.s 			page 10


 278              	.LASF15:
 279 009a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 279      4320342E 
 279      392E3320 
 279      32303135 
 279      30333033 
 280 00cd 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 280      20726576 
 280      6973696F 
 280      6E203232 
 280      31323230 
 281 0100 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 281      66756E63 
 281      74696F6E 
 281      2D736563 
 281      74696F6E 
 282              	.LASF10:
 283 0128 646F7562 		.ascii	"double\000"
 283      6C6500
 284              	.LASF3:
 285 012f 73686F72 		.ascii	"short unsigned int\000"
 285      7420756E 
 285      7369676E 
 285      65642069 
 285      6E7400
 286              	.LASF0:
 287 0142 7369676E 		.ascii	"signed char\000"
 287      65642063 
 287      68617200 
 288              	.LASF9:
 289 014e 666C6F61 		.ascii	"float\000"
 289      7400
 290              	.LASF2:
 291 0154 73686F72 		.ascii	"short int\000"
 291      7420696E 
 291      7400
 292              	.LASF17:
 293 015e 443A5C57 		.ascii	"D:\\Workspace\\PSoC_Creator\\Active_Load\\Active_Lo"
 293      6F726B73 
 293      70616365 
 293      5C50536F 
 293      435F4372 
 294 018d 61645F76 		.ascii	"ad_v9.cydsn\000"
 294      392E6379 
 294      64736E00 
 295              	.LASF12:
 296 0199 73697A65 		.ascii	"sizetype\000"
 296      74797065 
 296      00
 297              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
