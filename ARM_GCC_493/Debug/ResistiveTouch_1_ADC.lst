ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ResistiveTouch_1_ADC.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ResistiveTouch_1_ADC_convDone
  19              		.bss
  20              		.type	ResistiveTouch_1_ADC_convDone, %object
  21              		.size	ResistiveTouch_1_ADC_convDone, 1
  22              	ResistiveTouch_1_ADC_convDone:
  23 0000 00       		.space	1
  24              		.global	ResistiveTouch_1_ADC_stopConversion
  25              		.type	ResistiveTouch_1_ADC_stopConversion, %object
  26              		.size	ResistiveTouch_1_ADC_stopConversion, 1
  27              	ResistiveTouch_1_ADC_stopConversion:
  28 0001 00       		.space	1
  29              		.global	ResistiveTouch_1_ADC_initVar
  30              		.type	ResistiveTouch_1_ADC_initVar, %object
  31              		.size	ResistiveTouch_1_ADC_initVar, 1
  32              	ResistiveTouch_1_ADC_initVar:
  33 0002 00       		.space	1
  34              		.global	ResistiveTouch_1_ADC_started
  35              		.type	ResistiveTouch_1_ADC_started, %object
  36              		.size	ResistiveTouch_1_ADC_started, 1
  37              	ResistiveTouch_1_ADC_started:
  38 0003 00       		.space	1
  39              		.global	ResistiveTouch_1_ADC_Config
  40              		.data
  41              		.type	ResistiveTouch_1_ADC_Config, %object
  42              		.size	ResistiveTouch_1_ADC_Config, 1
  43              	ResistiveTouch_1_ADC_Config:
  44 0000 01       		.byte	1
  45              		.comm	ResistiveTouch_1_ADC_Offset,4,4
  46              		.comm	ResistiveTouch_1_ADC_CountsPerVolt,4,4
  47              		.bss
  48              		.align	2
  49              	ResistiveTouch_1_ADC_gcor:
  50 0004 00000000 		.space	4
  51              		.section	.text.ResistiveTouch_1_ADC_Init,"ax",%progbits
  52              		.align	2
  53              		.global	ResistiveTouch_1_ADC_Init
  54              		.thumb
  55              		.thumb_func
  56              		.type	ResistiveTouch_1_ADC_Init, %function
  57              	ResistiveTouch_1_ADC_Init:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 2


  58              	.LFB0:
  59              		.file 1 "Generated_Source\\PSoC5\\ResistiveTouch_1_ADC.c"
   1:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * File Name: ResistiveTouch_1_ADC.c
   3:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Version 3.20
   4:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
   5:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Description:
   6:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Component.
   8:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
   9:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Note:
  10:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
  11:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  18:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** #include "ResistiveTouch_1_ADC.h"
  19:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  20:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** #if(ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK)
  21:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #include "ResistiveTouch_1_ADC_theACLK.h"
  22:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** #endif /* ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK */
  23:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  24:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** #include "ResistiveTouch_1_ADC_Ext_CP_Clk.h"
  25:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  26:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** #if(ResistiveTouch_1_ADC_DEFAULT_INPUT_MODE)
  27:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #include "ResistiveTouch_1_ADC_AMux.h"
  28:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** #endif /* ResistiveTouch_1_ADC_DEFAULT_INPUT_MODE */
  29:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  30:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  31:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /***************************************
  32:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global data allocation
  33:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ***************************************/
  34:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  35:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /* Software flag for checking conversion completed or not */
  36:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** volatile uint8 ResistiveTouch_1_ADC_convDone = 0u;
  37:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  38:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /* Software flag to stop conversion for single sample conversion mode
  39:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   with resolution above 16 bits 
  40:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** */
  41:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** volatile uint8 ResistiveTouch_1_ADC_stopConversion = 0u;
  42:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  43:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /* To run the initialization block only at the start up */
  44:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** uint8 ResistiveTouch_1_ADC_initVar = 0u;
  45:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  46:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /* To check whether ADC started or not before switching the configuration */
  47:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** volatile uint8 ResistiveTouch_1_ADC_started = 0u;
  48:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  49:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /* Flag to hold ADC config number. By default active config is 1. */
  50:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** volatile uint8 ResistiveTouch_1_ADC_Config = 1u;
  51:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  52:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** volatile int32 ResistiveTouch_1_ADC_Offset;
  53:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** volatile int32 ResistiveTouch_1_ADC_CountsPerVolt;
  54:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  55:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 3


  56:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /***************************************
  57:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Local data allocation
  58:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ***************************************/
  59:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  60:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /* The array with precalculated gain compensation coefficients */
  61:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** static ResistiveTouch_1_ADC_GCOR_STRUCT ResistiveTouch_1_ADC_gcor[ResistiveTouch_1_ADC_DEFAULT_NUM_
  62:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  63:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  64:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  65:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /***************************************
  66:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Forward function references
  67:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ***************************************/
  68:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** static void ResistiveTouch_1_ADC_InitConfig(uint8 config) ;
  69:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** static void ResistiveTouch_1_ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 ide
  70:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                             uint8 resolution, uint8 config) ;
  71:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** static void ResistiveTouch_1_ADC_SetDSMRef0Reg(uint8 value) ;
  72:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  73:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  74:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /******************************************************************************
  75:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_Init
  76:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************
  77:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
  78:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
  79:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  80:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  81:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * ResistiveTouch_1_ADC_Start().
  82:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
  83:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
  84:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
  85:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
  86:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
  87:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
  88:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
  89:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
  90:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
  91:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_Init(void) 
  92:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
  60              		.loc 1 92 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 80B5     		push	{r7, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 7, -8
  67              		.cfi_offset 14, -4
  68 0002 82B0     		sub	sp, sp, #8
  69              		.cfi_def_cfa_offset 16
  70 0004 02AF     		add	r7, sp, #8
  71              		.cfi_def_cfa 7, 8
  93:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  94:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_Config = 1u;
  72              		.loc 1 94 0
  73 0006 324B     		ldr	r3, .L2
  74 0008 0122     		movs	r2, #1
  75 000a 1A70     		strb	r2, [r3]
  95:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_convDone = 0u;
  76              		.loc 1 95 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 4


  77 000c 314B     		ldr	r3, .L2+4
  78 000e 0022     		movs	r2, #0
  79 0010 1A70     		strb	r2, [r3]
  96:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  97:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  80              		.loc 1 97 0
  81 0012 1020     		movs	r0, #16
  82 0014 FFF7FEFF 		bl	ResistiveTouch_1_ADC_Ext_CP_Clk_SetModeRegister
  98:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
  99:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* This is only valid if there is an internal clock */
 100:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK)
 101:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_theACLK_SetMode(CYCLK_DUTY);
  83              		.loc 1 101 0
  84 0018 1020     		movs	r0, #16
  85 001a FFF7FEFF 		bl	ResistiveTouch_1_ADC_theACLK_SetModeRegister
 102:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK */
 103:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 104:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_IRQ_REMOVE == 0u)
 105:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Set interrupt priority */
 106:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         CyIntSetPriority(ResistiveTouch_1_ADC_INTC_NUMBER, ResistiveTouch_1_ADC_INTC_PRIOR_NUMBER);
  86              		.loc 1 106 0
  87 001e 1D20     		movs	r0, #29
  88 0020 0721     		movs	r1, #7
  89 0022 FFF7FEFF 		bl	CyIntSetPriority
 107:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif   /* End ResistiveTouch_1_ADC_IRQ_REMOVE */
 108:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 109:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Init static registers with common configuration */
 110:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_DEM0_REG    = ResistiveTouch_1_ADC_CFG1_DSM_DEM0;
  90              		.loc 1 110 0
  91 0026 2C4B     		ldr	r3, .L2+8
  92 0028 0422     		movs	r2, #4
  93 002a 1A70     		strb	r2, [r3]
 111:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_DEM1_REG    = ResistiveTouch_1_ADC_CFG1_DSM_DEM1;
  94              		.loc 1 111 0
  95 002c 2B4B     		ldr	r3, .L2+12
  96 002e 0022     		movs	r2, #0
  97 0030 1A70     		strb	r2, [r3]
 112:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_MISC_REG    = ResistiveTouch_1_ADC_CFG1_DSM_MISC;
  98              		.loc 1 112 0
  99 0032 2B4B     		ldr	r3, .L2+16
 100 0034 0022     		movs	r2, #0
 101 0036 1A70     		strb	r2, [r3]
 113:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CLK_REG    |= ResistiveTouch_1_ADC_CFG1_DSM_CLK;
 102              		.loc 1 113 0
 103 0038 2A4A     		ldr	r2, .L2+20
 104 003a 2A4B     		ldr	r3, .L2+20
 105 003c 1B78     		ldrb	r3, [r3]
 106 003e DBB2     		uxtb	r3, r3
 107 0040 43F01803 		orr	r3, r3, #24
 108 0044 DBB2     		uxtb	r3, r3
 109 0046 1370     		strb	r3, [r2]
 114:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_REF1_REG    = ResistiveTouch_1_ADC_CFG1_DSM_REF1;
 110              		.loc 1 114 0
 111 0048 274B     		ldr	r3, .L2+24
 112 004a 0022     		movs	r2, #0
 113 004c 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 5


 116:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_OUT0_REG    = ResistiveTouch_1_ADC_CFG1_DSM_OUT0;
 114              		.loc 1 116 0
 115 004e 274B     		ldr	r3, .L2+28
 116 0050 0022     		movs	r2, #0
 117 0052 1A70     		strb	r2, [r3]
 117:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_OUT1_REG    = ResistiveTouch_1_ADC_CFG1_DSM_OUT1;
 118              		.loc 1 117 0
 119 0054 264B     		ldr	r3, .L2+32
 120 0056 0022     		movs	r2, #0
 121 0058 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 119:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR0_REG     = ResistiveTouch_1_ADC_CFG1_DSM_CR0;
 122              		.loc 1 119 0
 123 005a 264B     		ldr	r3, .L2+36
 124 005c 0A22     		movs	r2, #10
 125 005e 1A70     		strb	r2, [r3]
 120:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR1_REG     = ResistiveTouch_1_ADC_CFG1_DSM_CR1;
 126              		.loc 1 120 0
 127 0060 254B     		ldr	r3, .L2+40
 128 0062 0022     		movs	r2, #0
 129 0064 1A70     		strb	r2, [r3]
 121:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** #if(ResistiveTouch_1_ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR3_REG     |= ResistiveTouch_1_ADC_DSM_MODBIT_EN;
 123:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** #else
 124:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR3_REG     = ResistiveTouch_1_ADC_CFG1_DSM_CR3;
 130              		.loc 1 124 0
 131 0066 254B     		ldr	r3, .L2+44
 132 0068 0022     		movs	r2, #0
 133 006a 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** #endif /* ResistiveTouch_1_ADC_MI_ENABLE != 0u*/    
 126:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR8_REG     = ResistiveTouch_1_ADC_CFG1_DSM_CR8;
 134              		.loc 1 126 0
 135 006c 244B     		ldr	r3, .L2+48
 136 006e 1222     		movs	r2, #18
 137 0070 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR9_REG     = ResistiveTouch_1_ADC_CFG1_DSM_CR9;
 138              		.loc 1 127 0
 139 0072 244B     		ldr	r3, .L2+52
 140 0074 1322     		movs	r2, #19
 141 0076 1A70     		strb	r2, [r3]
 128:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR13_REG    = ResistiveTouch_1_ADC_CFG1_DSM_CR13;
 142              		.loc 1 128 0
 143 0078 234B     		ldr	r3, .L2+56
 144 007a 0022     		movs	r2, #0
 145 007c 1A70     		strb	r2, [r3]
 129:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 130:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DEC_SR_REG      = ResistiveTouch_1_ADC_CFG1_DEC_SR;
 146              		.loc 1 130 0
 147 007e 234B     		ldr	r3, .L2+60
 148 0080 1422     		movs	r2, #20
 149 0082 1A70     		strb	r2, [r3]
 131:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 132:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_GainCompensation(ResistiveTouch_1_ADC_CFG1_INPUT_RANGE,
 150              		.loc 1 133 0
 151 0084 0123     		movs	r3, #1
 152 0086 0093     		str	r3, [sp]
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 6


 153 0088 0220     		movs	r0, #2
 154 008a 48F66B51 		movw	r1, #36203
 155 008e 4FF40042 		mov	r2, #32768
 156 0092 0C23     		movs	r3, #12
 157 0094 FFF7FEFF 		bl	ResistiveTouch_1_ADC_GainCompensation
 134:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                       ResistiveTouch_1_ADC_CFG1_IDEAL_DEC_GAIN,
 135:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                       ResistiveTouch_1_ADC_CFG1_IDEAL_ODDDEC_GAIN,
 136:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                       ResistiveTouch_1_ADC_CFG1_RESOLUTION,
 137:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                       ResistiveTouch_1_ADC_CFG1);
 138:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 1)
 139:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_GainCompensation(ResistiveTouch_1_ADC_CFG2_INPUT_RANGE,
 140:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG2_IDEAL_DEC_GAIN,
 141:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG2_IDEAL_ODDDEC_GAIN,
 142:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG2_RESOLUTION,
 143:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG2);
 144:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 1 */
 145:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 2)
 146:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_GainCompensation(ResistiveTouch_1_ADC_CFG3_INPUT_RANGE,
 147:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG3_IDEAL_DEC_GAIN,
 148:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG3_IDEAL_ODDDEC_GAIN,
 149:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG3_RESOLUTION,
 150:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG3);
 151:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 2 */
 152:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 3)
 153:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_GainCompensation(ResistiveTouch_1_ADC_CFG4_INPUT_RANGE,
 154:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG4_IDEAL_DEC_GAIN,
 155:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG4_IDEAL_ODDDEC_GAIN,
 156:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG4_RESOLUTION,
 157:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                           ResistiveTouch_1_ADC_CFG4);
 158:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 3 */
 159:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 160:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Set GCOR register for config1 */
 161:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DEC_GVAL_REG = ResistiveTouch_1_ADC_gcor[ResistiveTouch_1_ADC_Config - 1u]
 158              		.loc 1 161 0
 159 0098 1D4A     		ldr	r2, .L2+64
 160 009a 0D4B     		ldr	r3, .L2
 161 009c 1B78     		ldrb	r3, [r3]
 162 009e DBB2     		uxtb	r3, r3
 163 00a0 013B     		subs	r3, r3, #1
 164 00a2 1C49     		ldr	r1, .L2+68
 165 00a4 9B00     		lsls	r3, r3, #2
 166 00a6 0B44     		add	r3, r3, r1
 167 00a8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 168 00aa 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     CY_SET_REG16(ResistiveTouch_1_ADC_DEC_GCOR_16B_PTR, ResistiveTouch_1_ADC_gcor[ResistiveTouch_1_
 169              		.loc 1 162 0
 170 00ac 1A4A     		ldr	r2, .L2+72
 171 00ae 084B     		ldr	r3, .L2
 172 00b0 1B78     		ldrb	r3, [r3]
 173 00b2 DBB2     		uxtb	r3, r3
 174 00b4 013B     		subs	r3, r3, #1
 175 00b6 1749     		ldr	r1, .L2+68
 176 00b8 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 177 00bc 1380     		strh	r3, [r2]	@ movhi
 163:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 164:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_InitConfig(ResistiveTouch_1_ADC_Config);
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 7


 178              		.loc 1 165 0
 179 00be 044B     		ldr	r3, .L2
 180 00c0 1B78     		ldrb	r3, [r3]
 181 00c2 DBB2     		uxtb	r3, r3
 182 00c4 1846     		mov	r0, r3
 183 00c6 FFF7FEFF 		bl	ResistiveTouch_1_ADC_InitConfig
 166:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 184              		.loc 1 166 0
 185 00ca BD46     		mov	sp, r7
 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 00cc 80BD     		pop	{r7, pc}
 189              	.L3:
 190 00ce 00BF     		.align	2
 191              	.L2:
 192 00d0 00000000 		.word	ResistiveTouch_1_ADC_Config
 193 00d4 00000000 		.word	ResistiveTouch_1_ADC_convDone
 194 00d8 96580040 		.word	1073764502
 195 00dc 97580040 		.word	1073764503
 196 00e0 9E580040 		.word	1073764510
 197 00e4 075B0040 		.word	1073765127
 198 00e8 93580040 		.word	1073764499
 199 00ec 885B0040 		.word	1073765256
 200 00f0 895B0040 		.word	1073765257
 201 00f4 80580040 		.word	1073764480
 202 00f8 81580040 		.word	1073764481
 203 00fc 83580040 		.word	1073764483
 204 0100 88580040 		.word	1073764488
 205 0104 89580040 		.word	1073764489
 206 0108 8D580040 		.word	1073764493
 207 010c 014E0040 		.word	1073761793
 208 0110 0E4E0040 		.word	1073761806
 209 0114 04000000 		.word	ResistiveTouch_1_ADC_gcor
 210 0118 0C4E0040 		.word	1073761804
 211              		.cfi_endproc
 212              	.LFE0:
 213              		.size	ResistiveTouch_1_ADC_Init, .-ResistiveTouch_1_ADC_Init
 214              		.section	.text.ResistiveTouch_1_ADC_Enable,"ax",%progbits
 215              		.align	2
 216              		.global	ResistiveTouch_1_ADC_Enable
 217              		.thumb
 218              		.thumb_func
 219              		.type	ResistiveTouch_1_ADC_Enable, %function
 220              	ResistiveTouch_1_ADC_Enable:
 221              	.LFB1:
 167:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 168:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 169:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /******************************************************************************
 170:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_Enable
 171:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************
 172:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 173:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 174:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Enables the ADC DelSig block operation.
 175:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 176:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 177:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 178:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 8


 179:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 180:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 181:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 182:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 183:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 184:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_Enable(void) 
 185:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 222              		.loc 1 185 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 0000 80B5     		push	{r7, lr}
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 0002 82B0     		sub	sp, sp, #8
 231              		.cfi_def_cfa_offset 16
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
 186:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 	uint8 config;
 187:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 enableInterrupts;
 188:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 234              		.loc 1 188 0
 235 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 236 000a 0346     		mov	r3, r0
 237 000c FB71     		strb	r3, [r7, #7]
 189:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 190:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Read volatile variable to the local variable */
 191:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     config = ResistiveTouch_1_ADC_Config;
 238              		.loc 1 191 0
 239 000e 444B     		ldr	r3, .L5
 240 0010 1B78     		ldrb	r3, [r3]
 241 0012 BB71     		strb	r3, [r7, #6]
 192:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     
 193:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Enable active mode power for ADC */
 194:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_PWRMGR_DEC_REG |= ResistiveTouch_1_ADC_ACT_PWR_DEC_EN;
 242              		.loc 1 194 0
 243 0014 434A     		ldr	r2, .L5+4
 244 0016 434B     		ldr	r3, .L5+4
 245 0018 1B78     		ldrb	r3, [r3]
 246 001a DBB2     		uxtb	r3, r3
 247 001c 43F00103 		orr	r3, r3, #1
 248 0020 DBB2     		uxtb	r3, r3
 249 0022 1370     		strb	r3, [r2]
 195:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_PWRMGR_DSM_REG |= ResistiveTouch_1_ADC_ACT_PWR_DSM_EN;
 250              		.loc 1 195 0
 251 0024 3F4A     		ldr	r2, .L5+4
 252 0026 3F4B     		ldr	r3, .L5+4
 253 0028 1B78     		ldrb	r3, [r3]
 254 002a DBB2     		uxtb	r3, r3
 255 002c 43F01003 		orr	r3, r3, #16
 256 0030 DBB2     		uxtb	r3, r3
 257 0032 1370     		strb	r3, [r2]
 196:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 197:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****      /* Enable alternative active mode power for ADC */
 198:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_STBY_PWRMGR_DEC_REG |= ResistiveTouch_1_ADC_STBY_PWR_DEC_EN;
 258              		.loc 1 198 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 9


 259 0034 3C4A     		ldr	r2, .L5+8
 260 0036 3C4B     		ldr	r3, .L5+8
 261 0038 1B78     		ldrb	r3, [r3]
 262 003a DBB2     		uxtb	r3, r3
 263 003c 43F00103 		orr	r3, r3, #1
 264 0040 DBB2     		uxtb	r3, r3
 265 0042 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_STBY_PWRMGR_DSM_REG |= ResistiveTouch_1_ADC_STBY_PWR_DSM_EN;
 266              		.loc 1 199 0
 267 0044 384A     		ldr	r2, .L5+8
 268 0046 384B     		ldr	r3, .L5+8
 269 0048 1B78     		ldrb	r3, [r3]
 270 004a DBB2     		uxtb	r3, r3
 271 004c 43F01003 		orr	r3, r3, #16
 272 0050 DBB2     		uxtb	r3, r3
 273 0052 1370     		strb	r3, [r2]
 200:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 201:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 202:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR4_REG |= ResistiveTouch_1_ADC_IGNORE_PRESA1;
 274              		.loc 1 202 0
 275 0054 354A     		ldr	r2, .L5+12
 276 0056 354B     		ldr	r3, .L5+12
 277 0058 1B78     		ldrb	r3, [r3]
 278 005a DBB2     		uxtb	r3, r3
 279 005c 43F00203 		orr	r3, r3, #2
 280 0060 DBB2     		uxtb	r3, r3
 281 0062 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR5_REG |= ResistiveTouch_1_ADC_IGNORE_PRESA2;
 282              		.loc 1 203 0
 283 0064 324A     		ldr	r2, .L5+16
 284 0066 324B     		ldr	r3, .L5+16
 285 0068 1B78     		ldrb	r3, [r3]
 286 006a DBB2     		uxtb	r3, r3
 287 006c 43F00203 		orr	r3, r3, #2
 288 0070 DBB2     		uxtb	r3, r3
 289 0072 1370     		strb	r3, [r2]
 204:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 205:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR17_REG |= (ResistiveTouch_1_ADC_DSM_EN_BUF_VREF | ResistiveTouch_1_A
 290              		.loc 1 205 0
 291 0074 2F4A     		ldr	r2, .L5+20
 292 0076 2F4B     		ldr	r3, .L5+20
 293 0078 1B78     		ldrb	r3, [r3]
 294 007a DBB2     		uxtb	r3, r3
 295 007c 43F00303 		orr	r3, r3, #3
 296 0080 DBB2     		uxtb	r3, r3
 297 0082 1370     		strb	r3, [r2]
 206:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 207:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
 208:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if (((ResistiveTouch_1_ADC_CFG1_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P03) || \
 209:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****           (ResistiveTouch_1_ADC_CFG1_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P32)) || \
 210:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****          ((ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 1) && \
 211:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****           ((ResistiveTouch_1_ADC_CFG2_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P03) ||  \
 212:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****            (ResistiveTouch_1_ADC_CFG2_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P32))) || \
 213:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****          ((ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 2) && \
 214:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****           ((ResistiveTouch_1_ADC_CFG3_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P03) ||  \
 215:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****            (ResistiveTouch_1_ADC_CFG3_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P32))) || \
 216:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****          ((ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 3) && \
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 10


 217:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****           ((ResistiveTouch_1_ADC_CFG4_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P03) || \
 218:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****            (ResistiveTouch_1_ADC_CFG4_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P32))))
 219:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if (((config == 1u) &&
 220:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ((ResistiveTouch_1_ADC_CFG1_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P03) ||
 221:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG1_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P32))) ||
 222:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ((config == 2u) &&
 223:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ((ResistiveTouch_1_ADC_CFG2_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P03) ||
 224:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P32))) ||
 225:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ((config == 3u) &&
 226:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ((ResistiveTouch_1_ADC_CFG3_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P03) ||
 227:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P32))) ||
 228:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ((config == 4u) &&
 229:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ((ResistiveTouch_1_ADC_CFG4_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P03) ||
 230:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_REFERENCE == ResistiveTouch_1_ADC_EXT_REF_ON_P32))))
 231:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
 232:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Disable the REFBUF0 */
 233:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR17_REG &= (uint8)~ResistiveTouch_1_ADC_DSM_EN_BUF_VREF;
 234:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
 235:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* External ref */
 236:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 237:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if (((ResistiveTouch_1_ADC_CFG1_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF) || \
 238:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****          ((ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 1) && \
 239:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****           (ResistiveTouch_1_ADC_CFG2_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF)) || \
 240:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****          ((ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 2) && \
 241:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****           (ResistiveTouch_1_ADC_CFG3_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF)) || \
 242:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****          ((ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 3) && \
 243:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****           (ResistiveTouch_1_ADC_CFG4_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF))))
 244:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(((config == 1u) &&
 245:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             (ResistiveTouch_1_ADC_CFG1_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF) &&
 246:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ((ResistiveTouch_1_ADC_CFG1_REFERENCE != ResistiveTouch_1_ADC_EXT_REF_ON_P03) &&
 247:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG1_REFERENCE != ResistiveTouch_1_ADC_EXT_REF_ON_P32))) ||
 248:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              ((config == 2u) &&
 249:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****               (ResistiveTouch_1_ADC_CFG2_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF) &&
 250:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              ((ResistiveTouch_1_ADC_CFG2_REFERENCE != ResistiveTouch_1_ADC_EXT_REF_ON_P03) &&
 251:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_REFERENCE != ResistiveTouch_1_ADC_EXT_REF_ON_P32))) ||
 252:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              ((config == 3u) &&
 253:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****               (ResistiveTouch_1_ADC_CFG3_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF) &&
 254:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              ((ResistiveTouch_1_ADC_CFG3_REFERENCE != ResistiveTouch_1_ADC_EXT_REF_ON_P03) &&
 255:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_REFERENCE != ResistiveTouch_1_ADC_EXT_REF_ON_P32))) ||
 256:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              ((config == 4u) &&
 257:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****               (ResistiveTouch_1_ADC_CFG4_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF) &&
 258:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              ((ResistiveTouch_1_ADC_CFG4_REFERENCE != ResistiveTouch_1_ADC_EXT_REF_ON_P03) &&
 259:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_REFERENCE != ResistiveTouch_1_ADC_EXT_REF_ON_P32))))
 260:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
 261:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Enable the REFBUF1 */
 262:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_REF0_REG |= ResistiveTouch_1_ADC_DSM_EN_BUF_VREF_INN;
 263:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
 264:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* VSSA_TO_2VREF */
 265:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if(config != 0u)
 266:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 267:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Suppress compiler warning */
 268:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 269:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 270:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Wait for 3 microseconds */
 271:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     CyDelayUs(ResistiveTouch_1_ADC_PRES_DELAY_TIME);
 298              		.loc 1 271 0
 299 0084 0320     		movs	r0, #3
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 11


 300 0086 FFF7FEFF 		bl	CyDelayUs
 272:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 273:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Enable the press circuit */
 274:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR4_REG &= (uint8)~ResistiveTouch_1_ADC_IGNORE_PRESA1;
 301              		.loc 1 274 0
 302 008a 284A     		ldr	r2, .L5+12
 303 008c 274B     		ldr	r3, .L5+12
 304 008e 1B78     		ldrb	r3, [r3]
 305 0090 DBB2     		uxtb	r3, r3
 306 0092 23F00203 		bic	r3, r3, #2
 307 0096 DBB2     		uxtb	r3, r3
 308 0098 1370     		strb	r3, [r2]
 275:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR5_REG &= (uint8)~ResistiveTouch_1_ADC_IGNORE_PRESA2;
 309              		.loc 1 275 0
 310 009a 254A     		ldr	r2, .L5+16
 311 009c 244B     		ldr	r3, .L5+16
 312 009e 1B78     		ldrb	r3, [r3]
 313 00a0 DBB2     		uxtb	r3, r3
 314 00a2 23F00203 		bic	r3, r3, #2
 315 00a6 DBB2     		uxtb	r3, r3
 316 00a8 1370     		strb	r3, [r2]
 276:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 277:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Enable negative pumps for DSM  */
 278:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_PUMP_CR1_REG  |= ( ResistiveTouch_1_ADC_PUMP_CR1_CLKSEL | ResistiveTouch_1
 317              		.loc 1 278 0
 318 00aa 234A     		ldr	r2, .L5+24
 319 00ac 224B     		ldr	r3, .L5+24
 320 00ae 1B78     		ldrb	r3, [r3]
 321 00b0 DBB2     		uxtb	r3, r3
 322 00b2 43F00603 		orr	r3, r3, #6
 323 00b6 DBB2     		uxtb	r3, r3
 324 00b8 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 280:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Enable Modulator Chopping if required */
 281:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR2_REG = ResistiveTouch_1_ADC_CFG1_DSM_CR2;
 325              		.loc 1 281 0
 326 00ba 204B     		ldr	r3, .L5+28
 327 00bc 7A22     		movs	r2, #122
 328 00be 1A70     		strb	r2, [r3]
 282:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 283:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* This is only valid if there is an internal clock */
 284:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK)
 285:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_PWRMGR_CLK_REG |= ResistiveTouch_1_ADC_ACT_PWR_CLK_EN;
 329              		.loc 1 285 0
 330 00c0 1F4A     		ldr	r2, .L5+32
 331 00c2 1F4B     		ldr	r3, .L5+32
 332 00c4 1B78     		ldrb	r3, [r3]
 333 00c6 DBB2     		uxtb	r3, r3
 334 00c8 43F00103 		orr	r3, r3, #1
 335 00cc DBB2     		uxtb	r3, r3
 336 00ce 1370     		strb	r3, [r2]
 286:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_STBY_PWRMGR_CLK_REG |= ResistiveTouch_1_ADC_STBY_PWR_CLK_EN;
 337              		.loc 1 286 0
 338 00d0 1C4A     		ldr	r2, .L5+36
 339 00d2 1C4B     		ldr	r3, .L5+36
 340 00d4 1B78     		ldrb	r3, [r3]
 341 00d6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 12


 342 00d8 43F00103 		orr	r3, r3, #1
 343 00dc DBB2     		uxtb	r3, r3
 344 00de 1370     		strb	r3, [r2]
 287:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK */
 288:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 289:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Enable the active and alternate active power for charge pump clock */
 290:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= ResistiveTouch_1_ADC_ACT_PWR_CHARGE_PUMP_CLK
 345              		.loc 1 290 0
 346 00e0 194A     		ldr	r2, .L5+40
 347 00e2 194B     		ldr	r3, .L5+40
 348 00e4 1B78     		ldrb	r3, [r3]
 349 00e6 DBB2     		uxtb	r3, r3
 350 00e8 43F00103 		orr	r3, r3, #1
 351 00ec DBB2     		uxtb	r3, r3
 352 00ee 1370     		strb	r3, [r2]
 291:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ResistiveTouch_1_ADC_STBY_PWR_CHARGE_PU
 353              		.loc 1 291 0
 354 00f0 164A     		ldr	r2, .L5+44
 355 00f2 164B     		ldr	r3, .L5+44
 356 00f4 1B78     		ldrb	r3, [r3]
 357 00f6 DBB2     		uxtb	r3, r3
 358 00f8 43F00103 		orr	r3, r3, #1
 359 00fc DBB2     		uxtb	r3, r3
 360 00fe 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 293:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_IRQ_REMOVE == 0u)
 294:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Clear a pending interrupt */
 295:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         CyIntClearPending(ResistiveTouch_1_ADC_INTC_NUMBER);
 361              		.loc 1 295 0
 362 0100 134B     		ldr	r3, .L5+48
 363 0102 4FF00052 		mov	r2, #536870912
 364 0106 1A60     		str	r2, [r3]
 296:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Enable interrupt */
 297:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         CyIntEnable(ResistiveTouch_1_ADC_INTC_NUMBER);
 365              		.loc 1 297 0
 366 0108 124B     		ldr	r3, .L5+52
 367 010a 4FF00052 		mov	r2, #536870912
 368 010e 1A60     		str	r2, [r3]
 298:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif   /* End ResistiveTouch_1_ADC_IRQ_REMOVE */
 299:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 300:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 369              		.loc 1 300 0
 370 0110 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 371 0112 1846     		mov	r0, r3
 372 0114 FFF7FEFF 		bl	CyExitCriticalSection
 301:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 302:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 373              		.loc 1 302 0
 374 0118 0837     		adds	r7, r7, #8
 375              		.cfi_def_cfa_offset 8
 376 011a BD46     		mov	sp, r7
 377              		.cfi_def_cfa_register 13
 378              		@ sp needed
 379 011c 80BD     		pop	{r7, pc}
 380              	.L6:
 381 011e 00BF     		.align	2
 382              	.L5:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 13


 383 0120 00000000 		.word	ResistiveTouch_1_ADC_Config
 384 0124 AA430040 		.word	1073759146
 385 0128 BA430040 		.word	1073759162
 386 012c F8460040 		.word	1073759992
 387 0130 F9460040 		.word	1073759993
 388 0134 91580040 		.word	1073764497
 389 0138 77580040 		.word	1073764471
 390 013c 82580040 		.word	1073764482
 391 0140 A1430040 		.word	1073759137
 392 0144 B1430040 		.word	1073759153
 393 0148 A2430040 		.word	1073759138
 394 014c B2430040 		.word	1073759154
 395 0150 80E200E0 		.word	-536812928
 396 0154 00E100E0 		.word	-536813312
 397              		.cfi_endproc
 398              	.LFE1:
 399              		.size	ResistiveTouch_1_ADC_Enable, .-ResistiveTouch_1_ADC_Enable
 400              		.section	.text.ResistiveTouch_1_ADC_Start,"ax",%progbits
 401              		.align	2
 402              		.global	ResistiveTouch_1_ADC_Start
 403              		.thumb
 404              		.thumb_func
 405              		.type	ResistiveTouch_1_ADC_Start, %function
 406              	ResistiveTouch_1_ADC_Start:
 407              	.LFB2:
 303:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 304:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 305:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_Start
 307:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 308:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 309:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 310:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Performs all required initialization for this component and enables
 311:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  the power. It configure all the register the first time it is called.
 312:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 313:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  on the power. If multiple configurations are selected, it will
 314:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  configure the ADC for configuration 1 by default, unless the
 315:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_SelectConfiguration( ) function has been called to change
 316:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  the default setting.
 317:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 318:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 319:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 320:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 321:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 322:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 323:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 324:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
 325:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_initVar:  Used to check the initial configuration,
 326:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  modified when this function is called for the first time.
 327:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 328:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 329:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_Start(void) 
 330:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 408              		.loc 1 330 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 14


 412 0000 80B5     		push	{r7, lr}
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 00AF     		add	r7, sp, #0
 417              		.cfi_def_cfa_register 7
 331:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if(ResistiveTouch_1_ADC_initVar == 0u)
 418              		.loc 1 331 0
 419 0004 084B     		ldr	r3, .L10
 420 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 421 0008 002B     		cmp	r3, #0
 422 000a 09D1     		bne	.L8
 332:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 333:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_started == 0u)
 423              		.loc 1 333 0
 424 000c 074B     		ldr	r3, .L10+4
 425 000e 1B78     		ldrb	r3, [r3]
 426 0010 DBB2     		uxtb	r3, r3
 427 0012 002B     		cmp	r3, #0
 428 0014 01D1     		bne	.L9
 334:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
 335:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_Init();
 429              		.loc 1 335 0
 430 0016 FFF7FEFF 		bl	ResistiveTouch_1_ADC_Init
 431              	.L9:
 336:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
 337:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_initVar = 1u;
 432              		.loc 1 337 0
 433 001a 034B     		ldr	r3, .L10
 434 001c 0122     		movs	r2, #1
 435 001e 1A70     		strb	r2, [r3]
 436              	.L8:
 338:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 339:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 340:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Enable the ADC */
 341:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_Enable();
 437              		.loc 1 341 0
 438 0020 FFF7FEFF 		bl	ResistiveTouch_1_ADC_Enable
 342:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 439              		.loc 1 342 0
 440 0024 80BD     		pop	{r7, pc}
 441              	.L11:
 442 0026 00BF     		.align	2
 443              	.L10:
 444 0028 00000000 		.word	ResistiveTouch_1_ADC_initVar
 445 002c 00000000 		.word	ResistiveTouch_1_ADC_started
 446              		.cfi_endproc
 447              	.LFE2:
 448              		.size	ResistiveTouch_1_ADC_Start, .-ResistiveTouch_1_ADC_Start
 449              		.section	.text.ResistiveTouch_1_ADC_Stop,"ax",%progbits
 450              		.align	2
 451              		.global	ResistiveTouch_1_ADC_Stop
 452              		.thumb
 453              		.thumb_func
 454              		.type	ResistiveTouch_1_ADC_Stop, %function
 455              	ResistiveTouch_1_ADC_Stop:
 456              	.LFB3:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 15


 343:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 344:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 345:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 346:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_Stop
 347:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 348:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 349:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 350:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This function stops and powers down the ADC component and the internal
 351:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  clock if the external clock is not selected. If an external clock is
 352:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  used, it is up to the designer to power down the external clock it
 353:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  required.
 354:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 355:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 356:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 357:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 358:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 359:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 360:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 361:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 362:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_Stop(void) 
 363:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 457              		.loc 1 363 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 8
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461 0000 80B5     		push	{r7, lr}
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 82B0     		sub	sp, sp, #8
 466              		.cfi_def_cfa_offset 16
 467 0004 00AF     		add	r7, sp, #0
 468              		.cfi_def_cfa_register 7
 364:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 enableInterrupts;
 365:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 469              		.loc 1 365 0
 470 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 471 000a 0346     		mov	r3, r0
 472 000c FB71     		strb	r3, [r7, #7]
 366:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 367:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Stop conversions */
 368:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DEC_CR_REG &= (uint8)~ResistiveTouch_1_ADC_DEC_START_CONV;
 473              		.loc 1 368 0
 474 000e 4D4A     		ldr	r2, .L13
 475 0010 4C4B     		ldr	r3, .L13
 476 0012 1B78     		ldrb	r3, [r3]
 477 0014 DBB2     		uxtb	r3, r3
 478 0016 23F00103 		bic	r3, r3, #1
 479 001a DBB2     		uxtb	r3, r3
 480 001c 1370     		strb	r3, [r2]
 369:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DEC_SR_REG |=  ResistiveTouch_1_ADC_DEC_INTR_CLEAR;
 481              		.loc 1 369 0
 482 001e 4A4A     		ldr	r2, .L13+4
 483 0020 494B     		ldr	r3, .L13+4
 484 0022 1B78     		ldrb	r3, [r3]
 485 0024 DBB2     		uxtb	r3, r3
 486 0026 43F00403 		orr	r3, r3, #4
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 16


 487 002a DBB2     		uxtb	r3, r3
 488 002c 1370     		strb	r3, [r2]
 370:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 371:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 372:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****        enable PRES */
 373:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR4_REG |= ResistiveTouch_1_ADC_IGNORE_PRESA1;
 489              		.loc 1 373 0
 490 002e 474A     		ldr	r2, .L13+8
 491 0030 464B     		ldr	r3, .L13+8
 492 0032 1B78     		ldrb	r3, [r3]
 493 0034 DBB2     		uxtb	r3, r3
 494 0036 43F00203 		orr	r3, r3, #2
 495 003a DBB2     		uxtb	r3, r3
 496 003c 1370     		strb	r3, [r2]
 374:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR5_REG |= ResistiveTouch_1_ADC_IGNORE_PRESA2;
 497              		.loc 1 374 0
 498 003e 444A     		ldr	r2, .L13+12
 499 0040 434B     		ldr	r3, .L13+12
 500 0042 1B78     		ldrb	r3, [r3]
 501 0044 DBB2     		uxtb	r3, r3
 502 0046 43F00203 		orr	r3, r3, #2
 503 004a DBB2     		uxtb	r3, r3
 504 004c 1370     		strb	r3, [r2]
 375:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 376:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR17_REG &= (uint8)~(ResistiveTouch_1_ADC_DSM_EN_BUF_VREF | ResistiveT
 505              		.loc 1 376 0
 506 004e 414A     		ldr	r2, .L13+16
 507 0050 404B     		ldr	r3, .L13+16
 508 0052 1B78     		ldrb	r3, [r3]
 509 0054 DBB2     		uxtb	r3, r3
 510 0056 23F00303 		bic	r3, r3, #3
 511 005a DBB2     		uxtb	r3, r3
 512 005c 1370     		strb	r3, [r2]
 377:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_REF0_REG &= (uint8)~ResistiveTouch_1_ADC_DSM_EN_BUF_VREF_INN;
 513              		.loc 1 377 0
 514 005e 3E4A     		ldr	r2, .L13+20
 515 0060 3D4B     		ldr	r3, .L13+20
 516 0062 1B78     		ldrb	r3, [r3]
 517 0064 DBB2     		uxtb	r3, r3
 518 0066 23F00803 		bic	r3, r3, #8
 519 006a DBB2     		uxtb	r3, r3
 520 006c 1370     		strb	r3, [r2]
 378:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 379:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Wait for 3 microseconds. */
 380:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     CyDelayUs(ResistiveTouch_1_ADC_PRES_DELAY_TIME);
 521              		.loc 1 380 0
 522 006e 0320     		movs	r0, #3
 523 0070 FFF7FEFF 		bl	CyDelayUs
 381:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 382:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Enable the press circuit */
 383:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR4_REG &= (uint8)~ResistiveTouch_1_ADC_IGNORE_PRESA1;
 524              		.loc 1 383 0
 525 0074 354A     		ldr	r2, .L13+8
 526 0076 354B     		ldr	r3, .L13+8
 527 0078 1B78     		ldrb	r3, [r3]
 528 007a DBB2     		uxtb	r3, r3
 529 007c 23F00203 		bic	r3, r3, #2
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 17


 530 0080 DBB2     		uxtb	r3, r3
 531 0082 1370     		strb	r3, [r2]
 384:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR5_REG &= (uint8)~ResistiveTouch_1_ADC_IGNORE_PRESA2;
 532              		.loc 1 384 0
 533 0084 324A     		ldr	r2, .L13+12
 534 0086 324B     		ldr	r3, .L13+12
 535 0088 1B78     		ldrb	r3, [r3]
 536 008a DBB2     		uxtb	r3, r3
 537 008c 23F00203 		bic	r3, r3, #2
 538 0090 DBB2     		uxtb	r3, r3
 539 0092 1370     		strb	r3, [r2]
 385:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 386:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Disable power to the ADC */
 387:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_PWRMGR_DSM_REG &= (uint8)~ResistiveTouch_1_ADC_ACT_PWR_DSM_EN;
 540              		.loc 1 387 0
 541 0094 314A     		ldr	r2, .L13+24
 542 0096 314B     		ldr	r3, .L13+24
 543 0098 1B78     		ldrb	r3, [r3]
 544 009a DBB2     		uxtb	r3, r3
 545 009c 23F01003 		bic	r3, r3, #16
 546 00a0 DBB2     		uxtb	r3, r3
 547 00a2 1370     		strb	r3, [r2]
 388:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 389:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Disable power to Decimator block */
 390:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_PWRMGR_DEC_REG &= (uint8)~ResistiveTouch_1_ADC_ACT_PWR_DEC_EN;
 548              		.loc 1 390 0
 549 00a4 2D4A     		ldr	r2, .L13+24
 550 00a6 2D4B     		ldr	r3, .L13+24
 551 00a8 1B78     		ldrb	r3, [r3]
 552 00aa DBB2     		uxtb	r3, r3
 553 00ac 23F00103 		bic	r3, r3, #1
 554 00b0 DBB2     		uxtb	r3, r3
 555 00b2 1370     		strb	r3, [r2]
 391:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 392:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Disable alternative active power to the ADC */
 393:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_STBY_PWRMGR_DEC_REG &= (uint8)~ResistiveTouch_1_ADC_STBY_PWR_DEC_EN;
 556              		.loc 1 393 0
 557 00b4 2A4A     		ldr	r2, .L13+28
 558 00b6 2A4B     		ldr	r3, .L13+28
 559 00b8 1B78     		ldrb	r3, [r3]
 560 00ba DBB2     		uxtb	r3, r3
 561 00bc 23F00103 		bic	r3, r3, #1
 562 00c0 DBB2     		uxtb	r3, r3
 563 00c2 1370     		strb	r3, [r2]
 394:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ResistiveTouch_1_ADC_STBY_PWR_DSM_EN;
 564              		.loc 1 394 0
 565 00c4 264A     		ldr	r2, .L13+28
 566 00c6 264B     		ldr	r3, .L13+28
 567 00c8 1B78     		ldrb	r3, [r3]
 568 00ca DBB2     		uxtb	r3, r3
 569 00cc 23F01003 		bic	r3, r3, #16
 570 00d0 DBB2     		uxtb	r3, r3
 571 00d2 1370     		strb	r3, [r2]
 395:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 396:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****    /* Disable negative pumps for DSM  */
 397:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_PUMP_CR1_REG &= (uint8)~(ResistiveTouch_1_ADC_PUMP_CR1_CLKSEL | ResistiveT
 572              		.loc 1 397 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 18


 573 00d4 234A     		ldr	r2, .L13+32
 574 00d6 234B     		ldr	r3, .L13+32
 575 00d8 1B78     		ldrb	r3, [r3]
 576 00da DBB2     		uxtb	r3, r3
 577 00dc 23F00603 		bic	r3, r3, #6
 578 00e0 DBB2     		uxtb	r3, r3
 579 00e2 1370     		strb	r3, [r2]
 398:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 399:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* This is only valid if there is an internal clock */
 400:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK)
 401:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_PWRMGR_CLK_REG &= (uint8)~ResistiveTouch_1_ADC_ACT_PWR_CLK_EN;
 580              		.loc 1 401 0
 581 00e4 204A     		ldr	r2, .L13+36
 582 00e6 204B     		ldr	r3, .L13+36
 583 00e8 1B78     		ldrb	r3, [r3]
 584 00ea DBB2     		uxtb	r3, r3
 585 00ec 23F00103 		bic	r3, r3, #1
 586 00f0 DBB2     		uxtb	r3, r3
 587 00f2 1370     		strb	r3, [r2]
 402:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ResistiveTouch_1_ADC_STBY_PWR_CLK_EN;
 588              		.loc 1 402 0
 589 00f4 1D4A     		ldr	r2, .L13+40
 590 00f6 1D4B     		ldr	r3, .L13+40
 591 00f8 1B78     		ldrb	r3, [r3]
 592 00fa DBB2     		uxtb	r3, r3
 593 00fc 23F00103 		bic	r3, r3, #1
 594 0100 DBB2     		uxtb	r3, r3
 595 0102 1370     		strb	r3, [r2]
 403:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK */
 404:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 405:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Disable Modulator Chopping */
 406:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_CR2_REG &= (uint8)~ResistiveTouch_1_ADC_DSM_MOD_CHOP_EN;
 596              		.loc 1 406 0
 597 0104 1A4A     		ldr	r2, .L13+44
 598 0106 1A4B     		ldr	r3, .L13+44
 599 0108 1B78     		ldrb	r3, [r3]
 600 010a DBB2     		uxtb	r3, r3
 601 010c 23F00803 		bic	r3, r3, #8
 602 0110 DBB2     		uxtb	r3, r3
 603 0112 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Disable power to charge pump clock */
 408:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ResistiveTouch_1_ADC_ACT_PWR_CHARGE_
 604              		.loc 1 408 0
 605 0114 174A     		ldr	r2, .L13+48
 606 0116 174B     		ldr	r3, .L13+48
 607 0118 1B78     		ldrb	r3, [r3]
 608 011a DBB2     		uxtb	r3, r3
 609 011c 23F00103 		bic	r3, r3, #1
 610 0120 DBB2     		uxtb	r3, r3
 611 0122 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ResistiveTouch_1_ADC_STBY_PWR_C
 612              		.loc 1 409 0
 613 0124 144A     		ldr	r2, .L13+52
 614 0126 144B     		ldr	r3, .L13+52
 615 0128 1B78     		ldrb	r3, [r3]
 616 012a DBB2     		uxtb	r3, r3
 617 012c 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 19


 618 0130 DBB2     		uxtb	r3, r3
 619 0132 1370     		strb	r3, [r2]
 410:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     
 411:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 620              		.loc 1 411 0
 621 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 622 0136 1846     		mov	r0, r3
 623 0138 FFF7FEFF 		bl	CyExitCriticalSection
 412:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 624              		.loc 1 412 0
 625 013c 0837     		adds	r7, r7, #8
 626              		.cfi_def_cfa_offset 8
 627 013e BD46     		mov	sp, r7
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 0140 80BD     		pop	{r7, pc}
 631              	.L14:
 632 0142 00BF     		.align	2
 633              	.L13:
 634 0144 004E0040 		.word	1073761792
 635 0148 014E0040 		.word	1073761793
 636 014c F8460040 		.word	1073759992
 637 0150 F9460040 		.word	1073759993
 638 0154 91580040 		.word	1073764497
 639 0158 92580040 		.word	1073764498
 640 015c AA430040 		.word	1073759146
 641 0160 BA430040 		.word	1073759162
 642 0164 77580040 		.word	1073764471
 643 0168 A1430040 		.word	1073759137
 644 016c B1430040 		.word	1073759153
 645 0170 82580040 		.word	1073764482
 646 0174 A2430040 		.word	1073759138
 647 0178 B2430040 		.word	1073759154
 648              		.cfi_endproc
 649              	.LFE3:
 650              		.size	ResistiveTouch_1_ADC_Stop, .-ResistiveTouch_1_ADC_Stop
 651              		.section	.text.ResistiveTouch_1_ADC_SetBufferGain,"ax",%progbits
 652              		.align	2
 653              		.global	ResistiveTouch_1_ADC_SetBufferGain
 654              		.thumb
 655              		.thumb_func
 656              		.type	ResistiveTouch_1_ADC_SetBufferGain, %function
 657              	ResistiveTouch_1_ADC_SetBufferGain:
 658              	.LFB4:
 413:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 414:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 415:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_SetBufferGain
 417:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 418:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 419:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 420:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Sets input buffer gain.
 421:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 422:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 423:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 424:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 425:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 20


 426:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 427:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 428:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 429:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_SetBufferGain(uint8 gain) 
 430:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 659              		.loc 1 430 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 16
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664 0000 80B4     		push	{r7}
 665              		.cfi_def_cfa_offset 4
 666              		.cfi_offset 7, -4
 667 0002 85B0     		sub	sp, sp, #20
 668              		.cfi_def_cfa_offset 24
 669 0004 00AF     		add	r7, sp, #0
 670              		.cfi_def_cfa_register 7
 671 0006 0346     		mov	r3, r0
 672 0008 FB71     		strb	r3, [r7, #7]
 431:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 tmpReg;
 432:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     tmpReg = ResistiveTouch_1_ADC_DSM_BUF1_REG & (uint8)~ResistiveTouch_1_ADC_DSM_GAIN_MASK;
 673              		.loc 1 432 0
 674 000a 0B4B     		ldr	r3, .L16
 675 000c 1B78     		ldrb	r3, [r3]
 676 000e DBB2     		uxtb	r3, r3
 677 0010 23F00C03 		bic	r3, r3, #12
 678 0014 FB73     		strb	r3, [r7, #15]
 433:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     tmpReg |= (uint8)(gain << ResistiveTouch_1_ADC_DSM_GAIN_SHIFT) & ResistiveTouch_1_ADC_DSM_GAIN_
 679              		.loc 1 433 0
 680 0016 FB79     		ldrb	r3, [r7, #7]
 681 0018 9B00     		lsls	r3, r3, #2
 682 001a DBB2     		uxtb	r3, r3
 683 001c 03F00C03 		and	r3, r3, #12
 684 0020 DAB2     		uxtb	r2, r3
 685 0022 FB7B     		ldrb	r3, [r7, #15]
 686 0024 1343     		orrs	r3, r3, r2
 687 0026 FB73     		strb	r3, [r7, #15]
 434:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_BUF1_REG = tmpReg;
 688              		.loc 1 434 0
 689 0028 034A     		ldr	r2, .L16
 690 002a FB7B     		ldrb	r3, [r7, #15]
 691 002c 1370     		strb	r3, [r2]
 435:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 692              		.loc 1 435 0
 693 002e 1437     		adds	r7, r7, #20
 694              		.cfi_def_cfa_offset 4
 695 0030 BD46     		mov	sp, r7
 696              		.cfi_def_cfa_register 13
 697              		@ sp needed
 698 0032 5DF8047B 		ldr	r7, [sp], #4
 699              		.cfi_restore 7
 700              		.cfi_def_cfa_offset 0
 701 0036 7047     		bx	lr
 702              	.L17:
 703              		.align	2
 704              	.L16:
 705 0038 9B580040 		.word	1073764507
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 21


 706              		.cfi_endproc
 707              	.LFE4:
 708              		.size	ResistiveTouch_1_ADC_SetBufferGain, .-ResistiveTouch_1_ADC_SetBufferGain
 709              		.section	.text.ResistiveTouch_1_ADC_SetCoherency,"ax",%progbits
 710              		.align	2
 711              		.global	ResistiveTouch_1_ADC_SetCoherency
 712              		.thumb
 713              		.thumb_func
 714              		.type	ResistiveTouch_1_ADC_SetCoherency, %function
 715              	ResistiveTouch_1_ADC_SetCoherency:
 716              	.LFB5:
 436:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 437:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 438:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 439:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_SetCoherency
 440:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 441:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 442:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 443:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This function allows the user to change which of the ADC's 3 word
 444:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 445:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  updated until the set byte is read either by the ADC or DMA. 
 446:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 447:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  The middle or high byte is set automatically depend on left alignment 
 448:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  configuration for DMA data transfer.
 449:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  If DMA or if a custom API requires different byte to be read the last,
 450:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 451:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 452:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  coherency can be set to any byte in the last word read.
 453:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 454:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 455:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  coherency:  Two bit value to set the coherency bit.
 456:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *           00-Coherency checking off
 457:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *           01-low byte is key byte
 458:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *           02-middle byte is the key byte
 459:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *           03-high byte is the key byte
 460:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 461:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 462:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 463:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 464:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_SetCoherency(uint8 coherency) 
 466:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 717              		.loc 1 466 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 16
 720              		@ frame_needed = 1, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722 0000 80B4     		push	{r7}
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 0002 85B0     		sub	sp, sp, #20
 726              		.cfi_def_cfa_offset 24
 727 0004 00AF     		add	r7, sp, #0
 728              		.cfi_def_cfa_register 7
 729 0006 0346     		mov	r3, r0
 730 0008 FB71     		strb	r3, [r7, #7]
 467:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 tmpReg;
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 22


 468:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 469:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     tmpReg = ResistiveTouch_1_ADC_DEC_COHER_REG & (uint8)~ResistiveTouch_1_ADC_DEC_SAMP_KEY_MASK;
 731              		.loc 1 469 0
 732 000a 0A4B     		ldr	r3, .L19
 733 000c 1B78     		ldrb	r3, [r3]
 734 000e DBB2     		uxtb	r3, r3
 735 0010 23F00303 		bic	r3, r3, #3
 736 0014 FB73     		strb	r3, [r7, #15]
 470:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     tmpReg |= coherency & ResistiveTouch_1_ADC_DEC_SAMP_KEY_MASK;
 737              		.loc 1 470 0
 738 0016 FB79     		ldrb	r3, [r7, #7]
 739 0018 03F00303 		and	r3, r3, #3
 740 001c DAB2     		uxtb	r2, r3
 741 001e FB7B     		ldrb	r3, [r7, #15]
 742 0020 1343     		orrs	r3, r3, r2
 743 0022 FB73     		strb	r3, [r7, #15]
 471:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DEC_COHER_REG = tmpReg;
 744              		.loc 1 471 0
 745 0024 034A     		ldr	r2, .L19
 746 0026 FB7B     		ldrb	r3, [r7, #15]
 747 0028 1370     		strb	r3, [r2]
 472:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 748              		.loc 1 472 0
 749 002a 1437     		adds	r7, r7, #20
 750              		.cfi_def_cfa_offset 4
 751 002c BD46     		mov	sp, r7
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 002e 5DF8047B 		ldr	r7, [sp], #4
 755              		.cfi_restore 7
 756              		.cfi_def_cfa_offset 0
 757 0032 7047     		bx	lr
 758              	.L20:
 759              		.align	2
 760              	.L19:
 761 0034 144E0040 		.word	1073761812
 762              		.cfi_endproc
 763              	.LFE5:
 764              		.size	ResistiveTouch_1_ADC_SetCoherency, .-ResistiveTouch_1_ADC_SetCoherency
 765              		.global	__aeabi_ui2f
 766              		.global	__aeabi_fdiv
 767              		.global	__aeabi_fmul
 768              		.global	__aeabi_f2d
 769              		.global	__aeabi_dcmpgt
 770              		.global	__aeabi_f2uiz
 771              		.section	.text.ResistiveTouch_1_ADC_SetGCOR,"ax",%progbits
 772              		.align	2
 773              		.global	ResistiveTouch_1_ADC_SetGCOR
 774              		.thumb
 775              		.thumb_func
 776              		.type	ResistiveTouch_1_ADC_SetGCOR, %function
 777              	ResistiveTouch_1_ADC_SetGCOR:
 778              	.LFB6:
 473:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 474:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 475:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 476:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_SetGCOR
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 23


 477:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 478:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 479:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 480:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 481:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 482:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 483:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  output registers. The numerical format for the GCOR value is:
 484:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  0x0000 -> 0.000
 485:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  0x8000 -> 1.000
 486:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  0xFFFF -> 1.99997
 487:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  When executing the function, the old GCOR value is multiplied by
 488:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  gainAdjust and reloaded into the GCOR register.
 489:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 490:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 491:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  gainAdjust:  floating point value to set GCOR registers.
 492:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 493:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 494:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  uint8: 0 - if GCOR value is within the expected range.
 495:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *         1 - the correction value is outside GCOR value range of
 496:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *             0.00 to 1.9999.
 497:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 498:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 499:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 500:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                of the GCOR registers will be valid. If for example GVAL is
 501:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 502:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 503:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 504:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ******************************************************************************/
 505:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** uint8 ResistiveTouch_1_ADC_SetGCOR(float32 gainAdjust) 
 506:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 779              		.loc 1 506 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 16
 782              		@ frame_needed = 1, uses_anonymous_args = 0
 783 0000 80B5     		push	{r7, lr}
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0002 84B0     		sub	sp, sp, #16
 788              		.cfi_def_cfa_offset 24
 789 0004 00AF     		add	r7, sp, #0
 790              		.cfi_def_cfa_register 7
 791 0006 7860     		str	r0, [r7, #4]	@ float
 507:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint16 tmpReg;
 508:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 status;
 509:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     float32 tmpValue;
 510:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 511:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     tmpReg = ResistiveTouch_1_ADC_gcor[ResistiveTouch_1_ADC_Config - 1u].gcor;
 792              		.loc 1 511 0
 793 0008 274B     		ldr	r3, .L28+8
 794 000a 1B78     		ldrb	r3, [r3]
 795 000c DBB2     		uxtb	r3, r3
 796 000e 013B     		subs	r3, r3, #1
 797 0010 264A     		ldr	r2, .L28+12
 798 0012 32F82330 		ldrh	r3, [r2, r3, lsl #2]	@ movhi
 799 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 512:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ResistiveTouch_1_ADC_IDEAL_GAIN_CONST);
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 24


 800              		.loc 1 512 0
 801 0018 BB89     		ldrh	r3, [r7, #12]
 802 001a 1846     		mov	r0, r3
 803 001c FFF7FEFF 		bl	__aeabi_ui2f
 804 0020 0346     		mov	r3, r0
 805 0022 1846     		mov	r0, r3
 806 0024 4FF08E41 		mov	r1, #1191182336
 807 0028 FFF7FEFF 		bl	__aeabi_fdiv
 808 002c 0346     		mov	r3, r0
 809 002e BB60     		str	r3, [r7, #8]	@ float
 513:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     tmpValue = tmpValue * gainAdjust;
 810              		.loc 1 513 0
 811 0030 B868     		ldr	r0, [r7, #8]	@ float
 812 0032 7968     		ldr	r1, [r7, #4]	@ float
 813 0034 FFF7FEFF 		bl	__aeabi_fmul
 814 0038 0346     		mov	r3, r0
 815 003a BB60     		str	r3, [r7, #8]	@ float
 514:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 515:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if (tmpValue > 1.9999)
 816              		.loc 1 515 0
 817 003c B868     		ldr	r0, [r7, #8]	@ float
 818 003e FFF7FEFF 		bl	__aeabi_f2d
 819 0042 0246     		mov	r2, r0
 820 0044 0B46     		mov	r3, r1
 821 0046 1046     		mov	r0, r2
 822 0048 1946     		mov	r1, r3
 823 004a 15A3     		adr	r3, .L28
 824 004c D3E90023 		ldrd	r2, [r3]
 825 0050 FFF7FEFF 		bl	__aeabi_dcmpgt
 826 0054 0346     		mov	r3, r0
 827 0056 002B     		cmp	r3, #0
 828 0058 02D0     		beq	.L27
 516:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 517:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         status = 1u;
 829              		.loc 1 517 0
 830 005a 0123     		movs	r3, #1
 831 005c FB73     		strb	r3, [r7, #15]
 832 005e 18E0     		b	.L24
 833              	.L27:
 518:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 519:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else
 520:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 521:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         tmpValue *= (float32)ResistiveTouch_1_ADC_IDEAL_GAIN_CONST;
 834              		.loc 1 521 0
 835 0060 B868     		ldr	r0, [r7, #8]	@ float
 836 0062 4FF08E41 		mov	r1, #1191182336
 837 0066 FFF7FEFF 		bl	__aeabi_fmul
 838 006a 0346     		mov	r3, r0
 839 006c BB60     		str	r3, [r7, #8]	@ float
 522:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 		tmpReg = (uint16)tmpValue;
 840              		.loc 1 522 0
 841 006e B868     		ldr	r0, [r7, #8]	@ float
 842 0070 FFF7FEFF 		bl	__aeabi_f2uiz
 843 0074 0346     		mov	r3, r0
 844 0076 BB81     		strh	r3, [r7, #12]	@ movhi
 523:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         CY_SET_REG16(ResistiveTouch_1_ADC_DEC_GCOR_16B_PTR, tmpReg);
 845              		.loc 1 523 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 25


 846 0078 0D4A     		ldr	r2, .L28+16
 847 007a BB89     		ldrh	r3, [r7, #12]	@ movhi
 848 007c 1380     		strh	r3, [r2]	@ movhi
 524:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 525:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****        ResistiveTouch_1_ADC_gcor[ResistiveTouch_1_ADC_Config - 1u].gcor = tmpReg;
 849              		.loc 1 525 0
 850 007e 0A4B     		ldr	r3, .L28+8
 851 0080 1B78     		ldrb	r3, [r3]
 852 0082 DBB2     		uxtb	r3, r3
 853 0084 013B     		subs	r3, r3, #1
 854 0086 0949     		ldr	r1, .L28+12
 855 0088 BA89     		ldrh	r2, [r7, #12]	@ movhi
 856 008a 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 526:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 527:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         status = 0u;
 857              		.loc 1 527 0
 858 008e 0023     		movs	r3, #0
 859 0090 FB73     		strb	r3, [r7, #15]
 860              	.L24:
 528:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 529:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 530:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     return(status);
 861              		.loc 1 530 0
 862 0092 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 531:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 863              		.loc 1 531 0
 864 0094 1846     		mov	r0, r3
 865 0096 1037     		adds	r7, r7, #16
 866              		.cfi_def_cfa_offset 8
 867 0098 BD46     		mov	sp, r7
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 009a 80BD     		pop	{r7, pc}
 871              	.L29:
 872 009c AFF30080 		.align	3
 873              	.L28:
 874 00a0 8F537424 		.word	611603343
 875 00a4 97FFFF3F 		.word	1073741719
 876 00a8 00000000 		.word	ResistiveTouch_1_ADC_Config
 877 00ac 04000000 		.word	ResistiveTouch_1_ADC_gcor
 878 00b0 0C4E0040 		.word	1073761804
 879              		.cfi_endproc
 880              	.LFE6:
 881              		.size	ResistiveTouch_1_ADC_SetGCOR, .-ResistiveTouch_1_ADC_SetGCOR
 882 00b4 AFF30080 		.section	.text.ResistiveTouch_1_ADC_ReadGCOR,"ax",%progbits
 883              		.align	2
 884              		.global	ResistiveTouch_1_ADC_ReadGCOR
 885              		.thumb
 886              		.thumb_func
 887              		.type	ResistiveTouch_1_ADC_ReadGCOR, %function
 888              	ResistiveTouch_1_ADC_ReadGCOR:
 889              	.LFB7:
 532:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 533:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 534:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /******************************************************************************
 535:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_ReadGCOR
 536:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 26


 537:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 538:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 539:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This API returns the current GCOR register value, normalized based on the
 540:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  GVAL register settings.
 541:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 542:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 543:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 544:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 545:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 546:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 547:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 548:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 549:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  uint16:  Normalized GCOR value.
 550:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 551:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 552:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** uint16 ResistiveTouch_1_ADC_ReadGCOR(void) 
 553:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 890              		.loc 1 553 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 8
 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894              		@ link register save eliminated.
 895 0000 80B4     		push	{r7}
 896              		.cfi_def_cfa_offset 4
 897              		.cfi_offset 7, -4
 898 0002 83B0     		sub	sp, sp, #12
 899              		.cfi_def_cfa_offset 16
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 554:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 gValue;
 555:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint16 gcorValue;
 556:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 557:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     gValue = ResistiveTouch_1_ADC_DEC_GVAL_REG;
 902              		.loc 1 557 0
 903 0006 0B4B     		ldr	r3, .L33
 904 0008 1B78     		ldrb	r3, [r3]
 905 000a 7B71     		strb	r3, [r7, #5]
 558:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     gcorValue = CY_GET_REG16(ResistiveTouch_1_ADC_DEC_GCOR_16B_PTR);
 906              		.loc 1 558 0
 907 000c 0A4B     		ldr	r3, .L33+4
 908 000e 1B88     		ldrh	r3, [r3]	@ movhi
 909 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 559:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 560:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if (gValue < ResistiveTouch_1_ADC_MAX_GVAL)
 910              		.loc 1 560 0
 911 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 912 0014 0E2B     		cmp	r3, #14
 913 0016 05D8     		bhi	.L31
 561:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 562:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         gcorValue <<= ResistiveTouch_1_ADC_MAX_GVAL - gValue;
 914              		.loc 1 562 0
 915 0018 FB88     		ldrh	r3, [r7, #6]
 916 001a 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 917 001c C2F10F02 		rsb	r2, r2, #15
 918 0020 9340     		lsls	r3, r3, r2
 919 0022 FB80     		strh	r3, [r7, #6]	@ movhi
 920              	.L31:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 27


 563:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 564:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 565:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     return gcorValue;
 921              		.loc 1 565 0
 922 0024 FB88     		ldrh	r3, [r7, #6]
 566:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 923              		.loc 1 566 0
 924 0026 1846     		mov	r0, r3
 925 0028 0C37     		adds	r7, r7, #12
 926              		.cfi_def_cfa_offset 4
 927 002a BD46     		mov	sp, r7
 928              		.cfi_def_cfa_register 13
 929              		@ sp needed
 930 002c 5DF8047B 		ldr	r7, [sp], #4
 931              		.cfi_restore 7
 932              		.cfi_def_cfa_offset 0
 933 0030 7047     		bx	lr
 934              	.L34:
 935 0032 00BF     		.align	2
 936              	.L33:
 937 0034 0E4E0040 		.word	1073761806
 938 0038 0C4E0040 		.word	1073761804
 939              		.cfi_endproc
 940              	.LFE7:
 941              		.size	ResistiveTouch_1_ADC_ReadGCOR, .-ResistiveTouch_1_ADC_ReadGCOR
 942              		.section	.text.ResistiveTouch_1_ADC_StartConvert,"ax",%progbits
 943              		.align	2
 944              		.global	ResistiveTouch_1_ADC_StartConvert
 945              		.thumb
 946              		.thumb_func
 947              		.type	ResistiveTouch_1_ADC_StartConvert, %function
 948              	ResistiveTouch_1_ADC_StartConvert:
 949              	.LFB8:
 567:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 568:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 569:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 570:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_StartConvert
 571:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 572:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 573:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 574:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 575:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 576:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  one of the other three conversion modes, the ADC will run
 577:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
 578:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 579:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 580:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 581:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 582:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 583:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 584:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 585:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 586:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_StartConvert(void) 
 587:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 950              		.loc 1 587 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 28


 953              		@ frame_needed = 1, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955 0000 80B4     		push	{r7}
 956              		.cfi_def_cfa_offset 4
 957              		.cfi_offset 7, -4
 958 0002 00AF     		add	r7, sp, #0
 959              		.cfi_def_cfa_register 7
 588:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Start the conversion */
 589:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DEC_CR_REG |= ResistiveTouch_1_ADC_DEC_START_CONV;
 960              		.loc 1 589 0
 961 0004 054A     		ldr	r2, .L36
 962 0006 054B     		ldr	r3, .L36
 963 0008 1B78     		ldrb	r3, [r3]
 964 000a DBB2     		uxtb	r3, r3
 965 000c 43F00103 		orr	r3, r3, #1
 966 0010 DBB2     		uxtb	r3, r3
 967 0012 1370     		strb	r3, [r2]
 590:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 968              		.loc 1 590 0
 969 0014 BD46     		mov	sp, r7
 970              		.cfi_def_cfa_register 13
 971              		@ sp needed
 972 0016 5DF8047B 		ldr	r7, [sp], #4
 973              		.cfi_restore 7
 974              		.cfi_def_cfa_offset 0
 975 001a 7047     		bx	lr
 976              	.L37:
 977              		.align	2
 978              	.L36:
 979 001c 004E0040 		.word	1073761792
 980              		.cfi_endproc
 981              	.LFE8:
 982              		.size	ResistiveTouch_1_ADC_StartConvert, .-ResistiveTouch_1_ADC_StartConvert
 983              		.section	.text.ResistiveTouch_1_ADC_StopConvert,"ax",%progbits
 984              		.align	2
 985              		.global	ResistiveTouch_1_ADC_StopConvert
 986              		.thumb
 987              		.thumb_func
 988              		.type	ResistiveTouch_1_ADC_StopConvert, %function
 989              	ResistiveTouch_1_ADC_StopConvert:
 990              	.LFB9:
 591:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 592:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 593:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 594:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_StopConvert
 595:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 596:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 597:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 598:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 599:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 600:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  conversion.
 601:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 602:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 603:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 604:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 605:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 606:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 29


 607:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 608:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 609:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_StopConvert(void) 
 610:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 991              		.loc 1 610 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995              		@ link register save eliminated.
 996 0000 80B4     		push	{r7}
 997              		.cfi_def_cfa_offset 4
 998              		.cfi_offset 7, -4
 999 0002 00AF     		add	r7, sp, #0
 1000              		.cfi_def_cfa_register 7
 611:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Stop all conversions */
 612:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DEC_CR_REG &= (uint8)~ResistiveTouch_1_ADC_DEC_START_CONV;
 1001              		.loc 1 612 0
 1002 0004 054A     		ldr	r2, .L39
 1003 0006 054B     		ldr	r3, .L39
 1004 0008 1B78     		ldrb	r3, [r3]
 1005 000a DBB2     		uxtb	r3, r3
 1006 000c 23F00103 		bic	r3, r3, #1
 1007 0010 DBB2     		uxtb	r3, r3
 1008 0012 1370     		strb	r3, [r2]
 613:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1009              		.loc 1 613 0
 1010 0014 BD46     		mov	sp, r7
 1011              		.cfi_def_cfa_register 13
 1012              		@ sp needed
 1013 0016 5DF8047B 		ldr	r7, [sp], #4
 1014              		.cfi_restore 7
 1015              		.cfi_def_cfa_offset 0
 1016 001a 7047     		bx	lr
 1017              	.L40:
 1018              		.align	2
 1019              	.L39:
 1020 001c 004E0040 		.word	1073761792
 1021              		.cfi_endproc
 1022              	.LFE9:
 1023              		.size	ResistiveTouch_1_ADC_StopConvert, .-ResistiveTouch_1_ADC_StopConvert
 1024              		.section	.text.ResistiveTouch_1_ADC_IsEndConversion,"ax",%progbits
 1025              		.align	2
 1026              		.global	ResistiveTouch_1_ADC_IsEndConversion
 1027              		.thumb
 1028              		.thumb_func
 1029              		.type	ResistiveTouch_1_ADC_IsEndConversion, %function
 1030              	ResistiveTouch_1_ADC_IsEndConversion:
 1031              	.LFB10:
 614:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 615:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 616:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 617:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_IsEndConversion
 618:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 619:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 620:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 621:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Checks the status that the most recently started conversion has completed.
 622:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 30


 623:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ADC_GetResult32() API.
 624:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This function provides the programmer with two options. In one mode this 
 625:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  function immediately returns with the conversion status. In the other mode,
 626:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  the function does not return (blocking) until the conversion has completed.
 627:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 628:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 629:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  retMode: Check conversion return mode. See the following table for options.
 630:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   ResistiveTouch_1_ADC_RETURN_STATUS -   Immediately returns conversion result
 631:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                                      status.
 632:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   ResistiveTouch_1_ADC_WAIT_FOR_RESULT - Does not return until ADC conversion
 633:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                                      is complete.
 634:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 635:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 636:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  If a nonzero value is returned, the last conversion has completed.
 637:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 638:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 639:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
 640:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_convDone:  Used to check whether conversion is complete
 641:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  or not for single sample mode with resolution is above 16
 642:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 643:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 644:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** uint8 ResistiveTouch_1_ADC_IsEndConversion(uint8 retMode) 
 645:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1032              		.loc 1 645 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 16
 1035              		@ frame_needed = 1, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
 1037 0000 80B4     		push	{r7}
 1038              		.cfi_def_cfa_offset 4
 1039              		.cfi_offset 7, -4
 1040 0002 85B0     		sub	sp, sp, #20
 1041              		.cfi_def_cfa_offset 24
 1042 0004 00AF     		add	r7, sp, #0
 1043              		.cfi_def_cfa_register 7
 1044 0006 0346     		mov	r3, r0
 1045 0008 FB71     		strb	r3, [r7, #7]
 1046              	.L45:
 646:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 status;
 647:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 648:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     do
 649:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 650:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Check for stop convert if conversion mode is Single Sample with
 651:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         *   resolution above 16 bit
 652:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         */
 653:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_stopConversion != 0u)
 1047              		.loc 1 653 0
 1048 000a 0E4B     		ldr	r3, .L47
 1049 000c 1B78     		ldrb	r3, [r3]
 1050 000e DBB2     		uxtb	r3, r3
 1051 0010 002B     		cmp	r3, #0
 1052 0012 03D0     		beq	.L42
 654:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
 655:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             status = ResistiveTouch_1_ADC_convDone;
 1053              		.loc 1 655 0
 1054 0014 0C4B     		ldr	r3, .L47+4
 1055 0016 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 31


 1056 0018 FB73     		strb	r3, [r7, #15]
 1057 001a 05E0     		b	.L43
 1058              	.L42:
 656:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
 657:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         else
 658:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
 659:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             status = ResistiveTouch_1_ADC_DEC_SR_REG & ResistiveTouch_1_ADC_DEC_CONV_DONE;
 1059              		.loc 1 659 0
 1060 001c 0B4B     		ldr	r3, .L47+8
 1061 001e 1B78     		ldrb	r3, [r3]
 1062 0020 DBB2     		uxtb	r3, r3
 1063 0022 03F00103 		and	r3, r3, #1
 1064 0026 FB73     		strb	r3, [r7, #15]
 1065              	.L43:
 660:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
 661:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }while((status != ResistiveTouch_1_ADC_DEC_CONV_DONE) && (retMode == ResistiveTouch_1_ADC_WAIT_
 1066              		.loc 1 661 0
 1067 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1068 002a 012B     		cmp	r3, #1
 1069 002c 02D0     		beq	.L44
 1070              		.loc 1 661 0 is_stmt 0 discriminator 1
 1071 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1072 0030 002B     		cmp	r3, #0
 1073 0032 EAD0     		beq	.L45
 1074              	.L44:
 662:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 663:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     return(status);
 1075              		.loc 1 663 0 is_stmt 1
 1076 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 664:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1077              		.loc 1 664 0
 1078 0036 1846     		mov	r0, r3
 1079 0038 1437     		adds	r7, r7, #20
 1080              		.cfi_def_cfa_offset 4
 1081 003a BD46     		mov	sp, r7
 1082              		.cfi_def_cfa_register 13
 1083              		@ sp needed
 1084 003c 5DF8047B 		ldr	r7, [sp], #4
 1085              		.cfi_restore 7
 1086              		.cfi_def_cfa_offset 0
 1087 0040 7047     		bx	lr
 1088              	.L48:
 1089 0042 00BF     		.align	2
 1090              	.L47:
 1091 0044 00000000 		.word	ResistiveTouch_1_ADC_stopConversion
 1092 0048 00000000 		.word	ResistiveTouch_1_ADC_convDone
 1093 004c 014E0040 		.word	1073761793
 1094              		.cfi_endproc
 1095              	.LFE10:
 1096              		.size	ResistiveTouch_1_ADC_IsEndConversion, .-ResistiveTouch_1_ADC_IsEndConversion
 1097              		.section	.text.ResistiveTouch_1_ADC_GetResult8,"ax",%progbits
 1098              		.align	2
 1099              		.global	ResistiveTouch_1_ADC_GetResult8
 1100              		.thumb
 1101              		.thumb_func
 1102              		.type	ResistiveTouch_1_ADC_GetResult8, %function
 1103              	ResistiveTouch_1_ADC_GetResult8:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 32


 1104              	.LFB11:
 665:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 666:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 667:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_GetResult8
 669:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 671:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 672:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This function returns the result of an 8-bit conversion. If the
 673:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 674:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 675:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  the ADC_GetResult16() function should be used instead. This
 676:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  function returns only signed 8-bit values. The maximum positive
 677:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 678:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  maximum positive value is 255.
 679:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 680:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 681:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 682:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 683:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 684:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int8: The LSB of the last ADC conversion.
 685:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 686:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
 687:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_convDone:  Cleared in single sample mode with resolution
 688:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                              above 16 bits
 689:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 690:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 691:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** int8 ResistiveTouch_1_ADC_GetResult8( void ) 
 692:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1105              		.loc 1 692 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 8
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
 1110 0000 80B4     		push	{r7}
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 7, -4
 1113 0002 83B0     		sub	sp, sp, #12
 1114              		.cfi_def_cfa_offset 16
 1115 0004 00AF     		add	r7, sp, #0
 1116              		.cfi_def_cfa_register 7
 693:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     int8 result;
 694:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 coherency;
 695:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 696:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Read active coherency configuration */
 697:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     coherency = ResistiveTouch_1_ADC_DEC_COHER_REG & ResistiveTouch_1_ADC_DEC_SAMP_KEY_MASK;
 1117              		.loc 1 697 0
 1118 0006 124B     		ldr	r3, .L54
 1119 0008 1B78     		ldrb	r3, [r3]
 1120 000a DBB2     		uxtb	r3, r3
 1121 000c 03F00303 		and	r3, r3, #3
 1122 0010 FB71     		strb	r3, [r7, #7]
 698:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 699:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     result = (int8)ResistiveTouch_1_ADC_DEC_SAMP_REG;
 1123              		.loc 1 699 0
 1124 0012 104B     		ldr	r3, .L54+4
 1125 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 33


 1126 0016 DBB2     		uxtb	r3, r3
 1127 0018 BB71     		strb	r3, [r7, #6]
 700:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 701:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if(coherency == ResistiveTouch_1_ADC_DEC_SAMP_KEY_MID)
 1128              		.loc 1 701 0
 1129 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1130 001c 022B     		cmp	r3, #2
 1131 001e 02D1     		bne	.L50
 702:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 703:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         (void)ResistiveTouch_1_ADC_DEC_SAMPM_REG;
 1132              		.loc 1 703 0
 1133 0020 0D4B     		ldr	r3, .L54+8
 1134 0022 1B78     		ldrb	r3, [r3]
 1135 0024 04E0     		b	.L51
 1136              	.L50:
 704:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 705:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else  if(coherency == ResistiveTouch_1_ADC_DEC_SAMP_KEY_HIGH)
 1137              		.loc 1 705 0
 1138 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1139 0028 032B     		cmp	r3, #3
 1140 002a 01D1     		bne	.L51
 706:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 707:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         (void)ResistiveTouch_1_ADC_DEC_SAMPH_REG;
 1141              		.loc 1 707 0
 1142 002c 0B4B     		ldr	r3, .L54+12
 1143 002e 1B78     		ldrb	r3, [r3]
 1144              	.L51:
 708:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 709:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else /*No action required for other coherency */
 710:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 711:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 712:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 713:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if(ResistiveTouch_1_ADC_stopConversion != 0u)
 1145              		.loc 1 713 0
 1146 0030 0B4B     		ldr	r3, .L54+16
 1147 0032 1B78     		ldrb	r3, [r3]
 1148 0034 DBB2     		uxtb	r3, r3
 1149 0036 002B     		cmp	r3, #0
 1150 0038 02D0     		beq	.L52
 714:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 715:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_convDone = 0u;
 1151              		.loc 1 715 0
 1152 003a 0A4B     		ldr	r3, .L54+20
 1153 003c 0022     		movs	r2, #0
 1154 003e 1A70     		strb	r2, [r3]
 1155              	.L52:
 716:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 717:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     return (result);
 1156              		.loc 1 717 0
 1157 0040 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1158 0042 5BB2     		sxtb	r3, r3
 718:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1159              		.loc 1 718 0
 1160 0044 1846     		mov	r0, r3
 1161 0046 0C37     		adds	r7, r7, #12
 1162              		.cfi_def_cfa_offset 4
 1163 0048 BD46     		mov	sp, r7
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 34


 1164              		.cfi_def_cfa_register 13
 1165              		@ sp needed
 1166 004a 5DF8047B 		ldr	r7, [sp], #4
 1167              		.cfi_restore 7
 1168              		.cfi_def_cfa_offset 0
 1169 004e 7047     		bx	lr
 1170              	.L55:
 1171              		.align	2
 1172              	.L54:
 1173 0050 144E0040 		.word	1073761812
 1174 0054 104E0040 		.word	1073761808
 1175 0058 114E0040 		.word	1073761809
 1176 005c 124E0040 		.word	1073761810
 1177 0060 00000000 		.word	ResistiveTouch_1_ADC_stopConversion
 1178 0064 00000000 		.word	ResistiveTouch_1_ADC_convDone
 1179              		.cfi_endproc
 1180              	.LFE11:
 1181              		.size	ResistiveTouch_1_ADC_GetResult8, .-ResistiveTouch_1_ADC_GetResult8
 1182              		.section	.text.ResistiveTouch_1_ADC_GetResult16,"ax",%progbits
 1183              		.align	2
 1184              		.global	ResistiveTouch_1_ADC_GetResult16
 1185              		.thumb
 1186              		.thumb_func
 1187              		.type	ResistiveTouch_1_ADC_GetResult16, %function
 1188              	ResistiveTouch_1_ADC_GetResult16:
 1189              	.LFB12:
 719:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 720:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 721:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 722:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_GetResult16
 723:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 724:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 725:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 726:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a
 727:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 728:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  it will return the 16 least significant bits of the result. When the ADC
 729:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 730:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  function should be used instead. This function returns only signed
 731:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 732:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This function supports different coherency settings.
 733:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 734:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 735:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   void
 736:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 737:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 738:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int16:  ADC result.
 739:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 740:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
 741:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_convDone:  Cleared in single sample mode with resolution
 742:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                              above 16 bits
 743:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 744:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 745:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** int16 ResistiveTouch_1_ADC_GetResult16(void) 
 746:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1190              		.loc 1 746 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 35


 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194              		@ link register save eliminated.
 1195 0000 80B4     		push	{r7}
 1196              		.cfi_def_cfa_offset 4
 1197              		.cfi_offset 7, -4
 1198 0002 83B0     		sub	sp, sp, #12
 1199              		.cfi_def_cfa_offset 16
 1200 0004 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 747:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint16 result;
 748:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 coherency;
 749:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 750:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Read active coherency configuration */
 751:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     coherency = ResistiveTouch_1_ADC_DEC_COHER_REG & ResistiveTouch_1_ADC_DEC_SAMP_KEY_MASK;
 1202              		.loc 1 751 0
 1203 0006 174B     		ldr	r3, .L61
 1204 0008 1B78     		ldrb	r3, [r3]
 1205 000a DBB2     		uxtb	r3, r3
 1206 000c 03F00303 		and	r3, r3, #3
 1207 0010 7B71     		strb	r3, [r7, #5]
 752:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 753:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if(coherency <= ResistiveTouch_1_ADC_DEC_SAMP_KEY_LOW)
 1208              		.loc 1 753 0
 1209 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1210 0014 012B     		cmp	r3, #1
 1211 0016 03D8     		bhi	.L57
 754:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 755:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if (CY_PSOC3)
 756:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = ResistiveTouch_1_ADC_DEC_SAMPM_REG;
 757:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = (result << 8u) | ResistiveTouch_1_ADC_DEC_SAMP_REG;
 758:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #else
 759:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = (CY_GET_REG16(ResistiveTouch_1_ADC_DEC_SAMP_16B_PTR));
 1212              		.loc 1 759 0
 1213 0018 134B     		ldr	r3, .L61+4
 1214 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1215 001c FB80     		strh	r3, [r7, #6]	@ movhi
 1216 001e 11E0     		b	.L58
 1217              	.L57:
 760:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* CY_PSOC3 */
 761:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 762:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else /* MID or HIGH */
 763:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {   /* Read middle byte at the end */
 764:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if (CY_PSOC3)
 765:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = (CY_GET_REG16(ResistiveTouch_1_ADC_DEC_SAMP_16B_PTR));
 766:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #else
 767:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = ResistiveTouch_1_ADC_DEC_SAMP_REG;
 1218              		.loc 1 767 0
 1219 0020 114B     		ldr	r3, .L61+4
 1220 0022 1B78     		ldrb	r3, [r3]
 1221 0024 DBB2     		uxtb	r3, r3
 1222 0026 FB80     		strh	r3, [r7, #6]	@ movhi
 768:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result |=  (uint16)((uint16)ResistiveTouch_1_ADC_DEC_SAMPM_REG << 8u);
 1223              		.loc 1 768 0
 1224 0028 104B     		ldr	r3, .L61+8
 1225 002a 1B78     		ldrb	r3, [r3]
 1226 002c DBB2     		uxtb	r3, r3
 1227 002e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 36


 1228 0030 1B02     		lsls	r3, r3, #8
 1229 0032 9AB2     		uxth	r2, r3
 1230 0034 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1231 0036 1343     		orrs	r3, r3, r2
 1232 0038 FB80     		strh	r3, [r7, #6]	@ movhi
 769:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* CY_PSOC3 */
 770:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(coherency == ResistiveTouch_1_ADC_DEC_SAMP_KEY_HIGH)
 1233              		.loc 1 770 0
 1234 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1235 003c 032B     		cmp	r3, #3
 1236 003e 01D1     		bne	.L58
 771:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 772:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             (void)ResistiveTouch_1_ADC_DEC_SAMPH_REG;
 1237              		.loc 1 772 0
 1238 0040 0B4B     		ldr	r3, .L61+12
 1239 0042 1B78     		ldrb	r3, [r3]
 1240              	.L58:
 773:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
 774:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 775:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 776:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if(ResistiveTouch_1_ADC_stopConversion != 0u)
 1241              		.loc 1 776 0
 1242 0044 0B4B     		ldr	r3, .L61+16
 1243 0046 1B78     		ldrb	r3, [r3]
 1244 0048 DBB2     		uxtb	r3, r3
 1245 004a 002B     		cmp	r3, #0
 1246 004c 02D0     		beq	.L59
 777:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 778:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_convDone = 0u;
 1247              		.loc 1 778 0
 1248 004e 0A4B     		ldr	r3, .L61+20
 1249 0050 0022     		movs	r2, #0
 1250 0052 1A70     		strb	r2, [r3]
 1251              	.L59:
 779:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 780:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 781:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     return ((int16)result);
 1252              		.loc 1 781 0
 1253 0054 FB88     		ldrh	r3, [r7, #6]
 1254 0056 1BB2     		sxth	r3, r3
 782:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1255              		.loc 1 782 0
 1256 0058 1846     		mov	r0, r3
 1257 005a 0C37     		adds	r7, r7, #12
 1258              		.cfi_def_cfa_offset 4
 1259 005c BD46     		mov	sp, r7
 1260              		.cfi_def_cfa_register 13
 1261              		@ sp needed
 1262 005e 5DF8047B 		ldr	r7, [sp], #4
 1263              		.cfi_restore 7
 1264              		.cfi_def_cfa_offset 0
 1265 0062 7047     		bx	lr
 1266              	.L62:
 1267              		.align	2
 1268              	.L61:
 1269 0064 144E0040 		.word	1073761812
 1270 0068 104E0040 		.word	1073761808
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 37


 1271 006c 114E0040 		.word	1073761809
 1272 0070 124E0040 		.word	1073761810
 1273 0074 00000000 		.word	ResistiveTouch_1_ADC_stopConversion
 1274 0078 00000000 		.word	ResistiveTouch_1_ADC_convDone
 1275              		.cfi_endproc
 1276              	.LFE12:
 1277              		.size	ResistiveTouch_1_ADC_GetResult16, .-ResistiveTouch_1_ADC_GetResult16
 1278              		.section	.text.ResistiveTouch_1_ADC_GetResult32,"ax",%progbits
 1279              		.align	2
 1280              		.global	ResistiveTouch_1_ADC_GetResult32
 1281              		.thumb
 1282              		.thumb_func
 1283              		.type	ResistiveTouch_1_ADC_GetResult32, %function
 1284              	ResistiveTouch_1_ADC_GetResult32:
 1285              	.LFB13:
 783:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 784:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 785:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 786:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_GetResult32
 787:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 788:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 789:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 790:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Returns a 32-bit result for a conversion with a result that has a
 791:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  resolution of 8 to 20 bits.
 792:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This function supports different coherency settings.
 793:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 794:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 795:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 796:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 797:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 798:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int32: Result of the last ADC conversion.
 799:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 800:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
 801:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_convDone:  Cleared in single sample mode with resolution
 802:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                              above 16 bits
 803:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 804:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 805:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** int32 ResistiveTouch_1_ADC_GetResult32(void) 
 806:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1286              		.loc 1 806 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 8
 1289              		@ frame_needed = 1, uses_anonymous_args = 0
 1290              		@ link register save eliminated.
 1291 0000 80B4     		push	{r7}
 1292              		.cfi_def_cfa_offset 4
 1293              		.cfi_offset 7, -4
 1294 0002 83B0     		sub	sp, sp, #12
 1295              		.cfi_def_cfa_offset 16
 1296 0004 00AF     		add	r7, sp, #0
 1297              		.cfi_def_cfa_register 7
 807:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint32 result;
 808:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 coherency;
 809:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if (CY_PSOC3)
 810:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 	    uint16 tmp;
 811:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* CY_PSOC3 */
 812:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 38


 813:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Read active coherency configuration */
 814:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     coherency = ResistiveTouch_1_ADC_DEC_COHER_REG & ResistiveTouch_1_ADC_DEC_SAMP_KEY_MASK;
 1298              		.loc 1 814 0
 1299 0006 224B     		ldr	r3, .L69
 1300 0008 1B78     		ldrb	r3, [r3]
 1301 000a DBB2     		uxtb	r3, r3
 1302 000c 03F00303 		and	r3, r3, #3
 1303 0010 FB70     		strb	r3, [r7, #3]
 815:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 816:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if(coherency <= ResistiveTouch_1_ADC_DEC_SAMP_KEY_LOW)
 1304              		.loc 1 816 0
 1305 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1306 0014 012B     		cmp	r3, #1
 1307 0016 0BD8     		bhi	.L64
 817:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 818:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if (CY_PSOC3)
 819:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = ResistiveTouch_1_ADC_DEC_SAMPH_REG;
 820:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             if((result & 0x80u) != 0u)
 821:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             {   /* Sign extend */
 822:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 result |= 0xFF00u;
 823:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             }
 824:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = (result << 8u) | ResistiveTouch_1_ADC_DEC_SAMPM_REG;
 825:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = (result << 8u) | ResistiveTouch_1_ADC_DEC_SAMP_REG;
 826:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #else
 827:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = CY_GET_REG16(ResistiveTouch_1_ADC_DEC_SAMPH_16B_PTR);
 1308              		.loc 1 827 0
 1309 0018 1E4B     		ldr	r3, .L69+4
 1310 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1311 001c 9BB2     		uxth	r3, r3
 1312 001e 7B60     		str	r3, [r7, #4]
 828:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ResistiveTouch_1_ADC_DEC_SAMP_16B_PTR));
 1313              		.loc 1 828 0
 1314 0020 7B68     		ldr	r3, [r7, #4]
 1315 0022 1B04     		lsls	r3, r3, #16
 1316 0024 1C4A     		ldr	r2, .L69+8
 1317 0026 1288     		ldrh	r2, [r2]	@ movhi
 1318 0028 92B2     		uxth	r2, r2
 1319 002a 1343     		orrs	r3, r3, r2
 1320 002c 7B60     		str	r3, [r7, #4]
 1321 002e 20E0     		b	.L65
 1322              	.L64:
 829:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* CY_PSOC3 */
 830:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 831:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else if(coherency == ResistiveTouch_1_ADC_DEC_SAMP_KEY_MID)
 1323              		.loc 1 831 0
 1324 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1325 0032 022B     		cmp	r3, #2
 1326 0034 12D1     		bne	.L66
 832:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {   /* Read middle byte at the end */
 833:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if (CY_PSOC3)
 834:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = ResistiveTouch_1_ADC_DEC_SAMPH_REG;
 835:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             if((result & 0x80u) != 0u)
 836:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             {   /* Sign extend */
 837:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 result |= 0xFF00u;
 838:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             }
 839:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ResistiveTouch_1_ADC_DEC_SAMP_16B_PTR));
 840:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #else
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 39


 841:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = CY_GET_REG16(ResistiveTouch_1_ADC_DEC_SAMPH_16B_PTR);
 1327              		.loc 1 841 0
 1328 0036 174B     		ldr	r3, .L69+4
 1329 0038 1B88     		ldrh	r3, [r3]	@ movhi
 1330 003a 9BB2     		uxth	r3, r3
 1331 003c 7B60     		str	r3, [r7, #4]
 842:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = (result << 16u) | ResistiveTouch_1_ADC_DEC_SAMP_REG;
 1332              		.loc 1 842 0
 1333 003e 7B68     		ldr	r3, [r7, #4]
 1334 0040 1B04     		lsls	r3, r3, #16
 1335 0042 154A     		ldr	r2, .L69+8
 1336 0044 1278     		ldrb	r2, [r2]
 1337 0046 D2B2     		uxtb	r2, r2
 1338 0048 1343     		orrs	r3, r3, r2
 1339 004a 7B60     		str	r3, [r7, #4]
 843:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result |=  (uint32)((uint32)ResistiveTouch_1_ADC_DEC_SAMPM_REG << 8u);
 1340              		.loc 1 843 0
 1341 004c 134B     		ldr	r3, .L69+12
 1342 004e 1B78     		ldrb	r3, [r3]
 1343 0050 DBB2     		uxtb	r3, r3
 1344 0052 1B02     		lsls	r3, r3, #8
 1345 0054 7A68     		ldr	r2, [r7, #4]
 1346 0056 1343     		orrs	r3, r3, r2
 1347 0058 7B60     		str	r3, [r7, #4]
 1348 005a 0AE0     		b	.L65
 1349              	.L66:
 844:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* CY_PSOC3 */
 845:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 846:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else /*ResistiveTouch_1_ADC_DEC_SAMP_KEY_HIGH */
 847:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 848:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Read MSB byte at the end */
 849:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if (CY_PSOC3)
 850:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = CY_GET_REG16(ResistiveTouch_1_ADC_DEC_SAMP_16B_PTR);
 851:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 			tmp = ResistiveTouch_1_ADC_DEC_SAMPH_REG;
 852:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             if((tmp & 0x80u) != 0u)
 853:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             {   /* Sign extend */
 854:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 tmp |= 0xFF00u;
 855:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             }
 856:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result |= (uint32)tmp << 16u;
 857:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #else
 858:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result = CY_GET_REG16(ResistiveTouch_1_ADC_DEC_SAMP_16B_PTR);
 1350              		.loc 1 858 0
 1351 005c 0E4B     		ldr	r3, .L69+8
 1352 005e 1B88     		ldrh	r3, [r3]	@ movhi
 1353 0060 9BB2     		uxth	r3, r3
 1354 0062 7B60     		str	r3, [r7, #4]
 859:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ResistiveTouch_1_ADC_DEC_SAMPH_16B_PTR) << 16u)
 1355              		.loc 1 859 0
 1356 0064 0B4B     		ldr	r3, .L69+4
 1357 0066 1B88     		ldrh	r3, [r3]	@ movhi
 1358 0068 9BB2     		uxth	r3, r3
 1359 006a 1B04     		lsls	r3, r3, #16
 1360 006c 7A68     		ldr	r2, [r7, #4]
 1361 006e 1343     		orrs	r3, r3, r2
 1362 0070 7B60     		str	r3, [r7, #4]
 1363              	.L65:
 860:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* CY_PSOC3 */
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 40


 861:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 862:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 863:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if(ResistiveTouch_1_ADC_stopConversion != 0u)
 1364              		.loc 1 863 0
 1365 0072 0B4B     		ldr	r3, .L69+16
 1366 0074 1B78     		ldrb	r3, [r3]
 1367 0076 DBB2     		uxtb	r3, r3
 1368 0078 002B     		cmp	r3, #0
 1369 007a 02D0     		beq	.L67
 864:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
 865:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_convDone = 0u;
 1370              		.loc 1 865 0
 1371 007c 094B     		ldr	r3, .L69+20
 1372 007e 0022     		movs	r2, #0
 1373 0080 1A70     		strb	r2, [r3]
 1374              	.L67:
 866:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
 867:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 868:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     return ((int32)result);
 1375              		.loc 1 868 0
 1376 0082 7B68     		ldr	r3, [r7, #4]
 869:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1377              		.loc 1 869 0
 1378 0084 1846     		mov	r0, r3
 1379 0086 0C37     		adds	r7, r7, #12
 1380              		.cfi_def_cfa_offset 4
 1381 0088 BD46     		mov	sp, r7
 1382              		.cfi_def_cfa_register 13
 1383              		@ sp needed
 1384 008a 5DF8047B 		ldr	r7, [sp], #4
 1385              		.cfi_restore 7
 1386              		.cfi_def_cfa_offset 0
 1387 008e 7047     		bx	lr
 1388              	.L70:
 1389              		.align	2
 1390              	.L69:
 1391 0090 144E0040 		.word	1073761812
 1392 0094 124E0040 		.word	1073761810
 1393 0098 104E0040 		.word	1073761808
 1394 009c 114E0040 		.word	1073761809
 1395 00a0 00000000 		.word	ResistiveTouch_1_ADC_stopConversion
 1396 00a4 00000000 		.word	ResistiveTouch_1_ADC_convDone
 1397              		.cfi_endproc
 1398              	.LFE13:
 1399              		.size	ResistiveTouch_1_ADC_GetResult32, .-ResistiveTouch_1_ADC_GetResult32
 1400              		.section	.text.ResistiveTouch_1_ADC_SetOffset,"ax",%progbits
 1401              		.align	2
 1402              		.global	ResistiveTouch_1_ADC_SetOffset
 1403              		.thumb
 1404              		.thumb_func
 1405              		.type	ResistiveTouch_1_ADC_SetOffset, %function
 1406              	ResistiveTouch_1_ADC_SetOffset:
 1407              	.LFB14:
 870:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 871:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 872:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 873:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_SetOffset
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 41


 874:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 875:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 876:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 877:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 878:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 879:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  given reading before calculating the voltage conversion.
 880:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 881:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 882:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 883:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *          connected to the same input voltage.
 884:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 885:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 886:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 887:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 888:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
 889:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_Offset:  Modified to set the user provided offset. This
 890:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  variable is used for offset calibration purpose.
 891:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 892:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Side Effects:
 893:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Affects the ResistiveTouch_1_ADC_CountsTo_Volts,
 894:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_CountsTo_mVolts, ResistiveTouch_1_ADC_CountsTo_uVolts functions
 895:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  by subtracting the given offset.
 896:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 897:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_SetOffset(int32 offset) 
 899:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1408              		.loc 1 899 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 8
 1411              		@ frame_needed = 1, uses_anonymous_args = 0
 1412              		@ link register save eliminated.
 1413 0000 80B4     		push	{r7}
 1414              		.cfi_def_cfa_offset 4
 1415              		.cfi_offset 7, -4
 1416 0002 83B0     		sub	sp, sp, #12
 1417              		.cfi_def_cfa_offset 16
 1418 0004 00AF     		add	r7, sp, #0
 1419              		.cfi_def_cfa_register 7
 1420 0006 7860     		str	r0, [r7, #4]
 900:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 901:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_Offset = offset;
 1421              		.loc 1 901 0
 1422 0008 034A     		ldr	r2, .L72
 1423 000a 7B68     		ldr	r3, [r7, #4]
 1424 000c 1360     		str	r3, [r2]
 902:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1425              		.loc 1 902 0
 1426 000e 0C37     		adds	r7, r7, #12
 1427              		.cfi_def_cfa_offset 4
 1428 0010 BD46     		mov	sp, r7
 1429              		.cfi_def_cfa_register 13
 1430              		@ sp needed
 1431 0012 5DF8047B 		ldr	r7, [sp], #4
 1432              		.cfi_restore 7
 1433              		.cfi_def_cfa_offset 0
 1434 0016 7047     		bx	lr
 1435              	.L73:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 42


 1436              		.align	2
 1437              	.L72:
 1438 0018 00000000 		.word	ResistiveTouch_1_ADC_Offset
 1439              		.cfi_endproc
 1440              	.LFE14:
 1441              		.size	ResistiveTouch_1_ADC_SetOffset, .-ResistiveTouch_1_ADC_SetOffset
 1442              		.section	.text.ResistiveTouch_1_ADC_SetGain,"ax",%progbits
 1443              		.align	2
 1444              		.global	ResistiveTouch_1_ADC_SetGain
 1445              		.thumb
 1446              		.thumb_func
 1447              		.type	ResistiveTouch_1_ADC_SetGain, %function
 1448              	ResistiveTouch_1_ADC_SetGain:
 1449              	.LFB15:
 903:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 904:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 905:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 906:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_SetGain
 907:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 908:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 909:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 910:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 911:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  functions below. This value is set by default by the reference and
 912:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  input range settings. It should only be used to further calibrate the
 913:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ADC with a known input or if an external reference is used. This
 914:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  function may also be used to calibrate an entire signal chain, not
 915:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  just the ADC.
 916:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 917:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 918:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int32: ADC gain in counts per volt.
 919:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 920:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 921:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
 922:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 923:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
 924:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_CountsPerVolt:  modified to set the ADC gain in counts
 925:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   per volt.
 926:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 927:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Side Effects:
 928:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Affects the ResistiveTouch_1_ADC_CountsTo_Volts,
 929:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_CountsTo_mVolts, ResistiveTouch_1_ADC_CountsTo_uVolts functions
 930:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  supplying the correct conversion between ADC counts and voltage.
 931:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 932:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 933:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_SetGain(int32 adcGain) 
 934:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1450              		.loc 1 934 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 8
 1453              		@ frame_needed = 1, uses_anonymous_args = 0
 1454              		@ link register save eliminated.
 1455 0000 80B4     		push	{r7}
 1456              		.cfi_def_cfa_offset 4
 1457              		.cfi_offset 7, -4
 1458 0002 83B0     		sub	sp, sp, #12
 1459              		.cfi_def_cfa_offset 16
 1460 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 43


 1461              		.cfi_def_cfa_register 7
 1462 0006 7860     		str	r0, [r7, #4]
 935:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_CountsPerVolt = adcGain;
 1463              		.loc 1 935 0
 1464 0008 034A     		ldr	r2, .L75
 1465 000a 7B68     		ldr	r3, [r7, #4]
 1466 000c 1360     		str	r3, [r2]
 936:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1467              		.loc 1 936 0
 1468 000e 0C37     		adds	r7, r7, #12
 1469              		.cfi_def_cfa_offset 4
 1470 0010 BD46     		mov	sp, r7
 1471              		.cfi_def_cfa_register 13
 1472              		@ sp needed
 1473 0012 5DF8047B 		ldr	r7, [sp], #4
 1474              		.cfi_restore 7
 1475              		.cfi_def_cfa_offset 0
 1476 0016 7047     		bx	lr
 1477              	.L76:
 1478              		.align	2
 1479              	.L75:
 1480 0018 00000000 		.word	ResistiveTouch_1_ADC_CountsPerVolt
 1481              		.cfi_endproc
 1482              	.LFE15:
 1483              		.size	ResistiveTouch_1_ADC_SetGain, .-ResistiveTouch_1_ADC_SetGain
 1484              		.section	.text.ResistiveTouch_1_ADC_CountsTo_mVolts,"ax",%progbits
 1485              		.align	2
 1486              		.global	ResistiveTouch_1_ADC_CountsTo_mVolts
 1487              		.thumb
 1488              		.thumb_func
 1489              		.type	ResistiveTouch_1_ADC_CountsTo_mVolts, %function
 1490              	ResistiveTouch_1_ADC_CountsTo_mVolts:
 1491              	.LFB16:
 937:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 938:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 939:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
 940:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_CountsTo_mVolts
 941:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
 942:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 943:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
 944:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
 945:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  example, if the ADC measured 0.534 volts, the return value would
 946:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  be 534 mVolts.
 947:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 948:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
 949:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int32: adcCounts Result from the ADC conversion.
 950:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 951:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
 952:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int16:  Result in mVolts
 953:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 954:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
 955:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
 956:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_Offset:  Used as the offset while converting ADC counts
 957:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   to mVolts.
 958:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
 959:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
 960:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** int16 ResistiveTouch_1_ADC_CountsTo_mVolts(int32 adcCounts) 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 44


 961:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1492              		.loc 1 961 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 16
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496              		@ link register save eliminated.
 1497 0000 80B4     		push	{r7}
 1498              		.cfi_def_cfa_offset 4
 1499              		.cfi_offset 7, -4
 1500 0002 85B0     		sub	sp, sp, #20
 1501              		.cfi_def_cfa_offset 24
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]
 962:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 963:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     int16 mVolts;
 964:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 965:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Convert adcCounts to the right align if left option selected */
 966:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_CFG1_DEC_DIV != 0)
 967:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG1)
 968:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
 969:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG1_DEC_DIV;
 970:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
 971:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_CFG1_DEC_DIV */
 972:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if((ResistiveTouch_1_ADC_CFG2_DEC_DIV != 0) && (ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 1))
 973:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG2)
 974:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
 975:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG2_DEC_DIV;
 976:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
 977:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_CFG2_DEC_DIV */
 978:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if((ResistiveTouch_1_ADC_CFG3_DEC_DIV != 0) && (ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 2))
 979:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG3)
 980:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
 981:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG3_DEC_DIV;
 982:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
 983:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_CFG2_DEC_DIV */
 984:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if((ResistiveTouch_1_ADC_CFG4_DEC_DIV != 0) && (ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 3))
 985:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG4)
 986:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
 987:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG4_DEC_DIV;
 988:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
 989:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_CFG2_DEC_DIV */
 990:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 991:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Subtract ADC offset */
 992:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     adcCounts -= ResistiveTouch_1_ADC_Offset;
 1505              		.loc 1 992 0
 1506 0008 0B4B     		ldr	r3, .L79
 1507 000a 1B68     		ldr	r3, [r3]
 1508 000c 7A68     		ldr	r2, [r7, #4]
 1509 000e D31A     		subs	r3, r2, r3
 1510 0010 7B60     		str	r3, [r7, #4]
 993:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 994:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     mVolts = (int16)(( adcCounts * ResistiveTouch_1_ADC_1MV_COUNTS ) / ResistiveTouch_1_ADC_CountsP
 1511              		.loc 1 994 0
 1512 0012 7B68     		ldr	r3, [r7, #4]
 1513 0014 4FF47A72 		mov	r2, #1000
 1514 0018 02FB03F2 		mul	r2, r2, r3
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 45


 1515 001c 074B     		ldr	r3, .L79+4
 1516 001e 1B68     		ldr	r3, [r3]
 1517 0020 92FBF3F3 		sdiv	r3, r2, r3
 1518 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 995:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 996:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     return(mVolts);
 1519              		.loc 1 996 0
 1520 0026 FB89     		ldrh	r3, [r7, #14]
 1521 0028 1BB2     		sxth	r3, r3
 997:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1522              		.loc 1 997 0
 1523 002a 1846     		mov	r0, r3
 1524 002c 1437     		adds	r7, r7, #20
 1525              		.cfi_def_cfa_offset 4
 1526 002e BD46     		mov	sp, r7
 1527              		.cfi_def_cfa_register 13
 1528              		@ sp needed
 1529 0030 5DF8047B 		ldr	r7, [sp], #4
 1530              		.cfi_restore 7
 1531              		.cfi_def_cfa_offset 0
 1532 0034 7047     		bx	lr
 1533              	.L80:
 1534 0036 00BF     		.align	2
 1535              	.L79:
 1536 0038 00000000 		.word	ResistiveTouch_1_ADC_Offset
 1537 003c 00000000 		.word	ResistiveTouch_1_ADC_CountsPerVolt
 1538              		.cfi_endproc
 1539              	.LFE16:
 1540              		.size	ResistiveTouch_1_ADC_CountsTo_mVolts, .-ResistiveTouch_1_ADC_CountsTo_mVolts
 1541              		.global	__aeabi_i2f
 1542              		.section	.text.ResistiveTouch_1_ADC_CountsTo_Volts,"ax",%progbits
 1543              		.align	2
 1544              		.global	ResistiveTouch_1_ADC_CountsTo_Volts
 1545              		.thumb
 1546              		.thumb_func
 1547              		.type	ResistiveTouch_1_ADC_CountsTo_Volts, %function
 1548              	ResistiveTouch_1_ADC_CountsTo_Volts:
 1549              	.LFB17:
 998:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
 999:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1000:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
1001:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_CountsTo_Volts
1002:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
1003:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1004:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
1005:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Converts the ADC output to Volts as a floating point number. For
1006:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1007:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  returned result would be +1.2345 Volts.
1008:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1009:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
1010:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int32 adcCounts:  Result from the ADC conversion.
1011:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1012:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
1013:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  float32: Result in Volts
1014:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1015:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
1016:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_CountsPerVolt:  used to convert to Volts.
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 46


1017:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_Offset:  Used as the offset while converting ADC counts
1018:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   to Volts.
1019:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1020:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
1021:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** float32 ResistiveTouch_1_ADC_CountsTo_Volts(int32 adcCounts) 
1022:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1550              		.loc 1 1022 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 16
 1553              		@ frame_needed = 1, uses_anonymous_args = 0
 1554 0000 90B5     		push	{r4, r7, lr}
 1555              		.cfi_def_cfa_offset 12
 1556              		.cfi_offset 4, -12
 1557              		.cfi_offset 7, -8
 1558              		.cfi_offset 14, -4
 1559 0002 85B0     		sub	sp, sp, #20
 1560              		.cfi_def_cfa_offset 32
 1561 0004 00AF     		add	r7, sp, #0
 1562              		.cfi_def_cfa_register 7
 1563 0006 7860     		str	r0, [r7, #4]
1023:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1024:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     float32 Volts;
1025:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1026:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1027:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_CFG1_DEC_DIV != 0)
1028:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG1)
1029:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1030:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG1_DEC_DIV;
1031:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1032:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_CFG1_DEC_DIV */
1033:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if((ResistiveTouch_1_ADC_CFG2_DEC_DIV != 0) && (ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 1))
1034:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG2)
1035:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1036:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG2_DEC_DIV;
1037:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1038:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_CFG2_DEC_DIV */
1039:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if((ResistiveTouch_1_ADC_CFG3_DEC_DIV != 0) && (ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 2))
1040:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG3)
1041:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1042:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG3_DEC_DIV;
1043:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1044:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_CFG2_DEC_DIV */
1045:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if((ResistiveTouch_1_ADC_CFG4_DEC_DIV != 0) && (ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 3))
1046:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG4)
1047:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1048:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG4_DEC_DIV;
1049:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1050:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_CFG2_DEC_DIV */
1051:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1052:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Subtract ADC offset */
1053:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     adcCounts -= ResistiveTouch_1_ADC_Offset;
 1564              		.loc 1 1053 0
 1565 0008 0C4B     		ldr	r3, .L83
 1566 000a 1B68     		ldr	r3, [r3]
 1567 000c 7A68     		ldr	r2, [r7, #4]
 1568 000e D31A     		subs	r3, r2, r3
 1569 0010 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 47


1054:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1055:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     Volts = (float32)adcCounts / (float32)ResistiveTouch_1_ADC_CountsPerVolt;
 1570              		.loc 1 1055 0
 1571 0012 7868     		ldr	r0, [r7, #4]
 1572 0014 FFF7FEFF 		bl	__aeabi_i2f
 1573 0018 0446     		mov	r4, r0
 1574 001a 094B     		ldr	r3, .L83+4
 1575 001c 1B68     		ldr	r3, [r3]
 1576 001e 1846     		mov	r0, r3
 1577 0020 FFF7FEFF 		bl	__aeabi_i2f
 1578 0024 0346     		mov	r3, r0
 1579 0026 2046     		mov	r0, r4
 1580 0028 1946     		mov	r1, r3
 1581 002a FFF7FEFF 		bl	__aeabi_fdiv
 1582 002e 0346     		mov	r3, r0
 1583 0030 FB60     		str	r3, [r7, #12]	@ float
1056:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1057:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     return( Volts );
 1584              		.loc 1 1057 0
 1585 0032 FB68     		ldr	r3, [r7, #12]	@ float
1058:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1586              		.loc 1 1058 0
 1587 0034 1846     		mov	r0, r3
 1588 0036 1437     		adds	r7, r7, #20
 1589              		.cfi_def_cfa_offset 12
 1590 0038 BD46     		mov	sp, r7
 1591              		.cfi_def_cfa_register 13
 1592              		@ sp needed
 1593 003a 90BD     		pop	{r4, r7, pc}
 1594              	.L84:
 1595              		.align	2
 1596              	.L83:
 1597 003c 00000000 		.word	ResistiveTouch_1_ADC_Offset
 1598 0040 00000000 		.word	ResistiveTouch_1_ADC_CountsPerVolt
 1599              		.cfi_endproc
 1600              	.LFE17:
 1601              		.size	ResistiveTouch_1_ADC_CountsTo_Volts, .-ResistiveTouch_1_ADC_CountsTo_Volts
 1602              		.section	.text.ResistiveTouch_1_ADC_CountsTo_uVolts,"ax",%progbits
 1603              		.align	2
 1604              		.global	ResistiveTouch_1_ADC_CountsTo_uVolts
 1605              		.thumb
 1606              		.thumb_func
 1607              		.type	ResistiveTouch_1_ADC_CountsTo_uVolts, %function
 1608              	ResistiveTouch_1_ADC_CountsTo_uVolts:
 1609              	.LFB18:
1059:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1060:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1061:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
1062:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_CountsTo_uVolts
1063:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
1064:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1065:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
1066:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1067:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1068:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1069:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
1070:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int32 adcCounts: Result from the ADC conversion.
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 48


1071:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1072:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
1073:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int32:  Result in uVolts
1074:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1075:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
1076:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
1077:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_Offset:  Used as the offset while converting ADC counts
1078:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   to mVolts.
1079:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1080:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Theory:
1081:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1082:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1083:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1084:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  uVolts = ((A * adcCounts) / ((int32)ResistiveTouch_1_ADC_CountsPerVolt / B));
1085:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1086:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
1087:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** int32 ResistiveTouch_1_ADC_CountsTo_uVolts(int32 adcCounts) 
1088:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1610              		.loc 1 1088 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 24
 1613              		@ frame_needed = 1, uses_anonymous_args = 0
 1614              		@ link register save eliminated.
 1615 0000 80B4     		push	{r7}
 1616              		.cfi_def_cfa_offset 4
 1617              		.cfi_offset 7, -4
 1618 0002 87B0     		sub	sp, sp, #28
 1619              		.cfi_def_cfa_offset 32
 1620 0004 00AF     		add	r7, sp, #0
 1621              		.cfi_def_cfa_register 7
 1622 0006 7860     		str	r0, [r7, #4]
1089:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1090:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     int32 uVolts;
1091:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     int32 coefA;
1092:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     int32 coefB;
1093:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 resolution;
1094:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1095:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Set the resolution based on the configuration */
1096:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1097:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if (ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG1)
 1623              		.loc 1 1097 0
 1624 0008 264B     		ldr	r3, .L96
 1625 000a 1B78     		ldrb	r3, [r3]
 1626 000c DBB2     		uxtb	r3, r3
 1627 000e 012B     		cmp	r3, #1
 1628 0010 02D1     		bne	.L86
1098:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
1099:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         resolution = ResistiveTouch_1_ADC_CFG1_RESOLUTION;
 1629              		.loc 1 1099 0
 1630 0012 0C23     		movs	r3, #12
 1631 0014 FB73     		strb	r3, [r7, #15]
 1632 0016 11E0     		b	.L87
 1633              	.L86:
1100:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if(ResistiveTouch_1_ADC_CFG1_DEC_DIV != 0)
1101:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG1_DEC_DIV;
1102:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC_CFG1_DEC_DIV */
1103:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 49


1104:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else if (ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG2)
 1634              		.loc 1 1104 0
 1635 0018 224B     		ldr	r3, .L96
 1636 001a 1B78     		ldrb	r3, [r3]
 1637 001c DBB2     		uxtb	r3, r3
 1638 001e 022B     		cmp	r3, #2
 1639 0020 02D1     		bne	.L88
1105:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
1106:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         resolution = ResistiveTouch_1_ADC_CFG2_RESOLUTION;
 1640              		.loc 1 1106 0
 1641 0022 1023     		movs	r3, #16
 1642 0024 FB73     		strb	r3, [r7, #15]
 1643 0026 09E0     		b	.L87
 1644              	.L88:
1107:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if(ResistiveTouch_1_ADC_CFG2_DEC_DIV != 0)
1108:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG2_DEC_DIV;
1109:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC_CFG2_DEC_DIV */
1110:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
1111:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else if (ResistiveTouch_1_ADC_Config == ResistiveTouch_1_ADC_CFG3)
 1645              		.loc 1 1111 0
 1646 0028 1E4B     		ldr	r3, .L96
 1647 002a 1B78     		ldrb	r3, [r3]
 1648 002c DBB2     		uxtb	r3, r3
 1649 002e 032B     		cmp	r3, #3
 1650 0030 02D1     		bne	.L89
1112:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
1113:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         resolution = ResistiveTouch_1_ADC_CFG3_RESOLUTION;
 1651              		.loc 1 1113 0
 1652 0032 1023     		movs	r3, #16
 1653 0034 FB73     		strb	r3, [r7, #15]
 1654 0036 01E0     		b	.L87
 1655              	.L89:
1114:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if(ResistiveTouch_1_ADC_CFG3_DEC_DIV != 0)
1115:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG3_DEC_DIV;
1116:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC_CFG3_DEC_DIV */
1117:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
1118:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else
1119:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
1120:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         resolution = ResistiveTouch_1_ADC_CFG4_RESOLUTION;
 1656              		.loc 1 1120 0
 1657 0038 1023     		movs	r3, #16
 1658 003a FB73     		strb	r3, [r7, #15]
 1659              	.L87:
1121:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if(ResistiveTouch_1_ADC_CFG4_DEC_DIV != 0)
1122:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             adcCounts /= ResistiveTouch_1_ADC_CFG4_DEC_DIV;
1123:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC_CFG4_DEC_DIV */
1124:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
1125:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1126:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     switch (resolution)
 1660              		.loc 1 1126 0
 1661 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1662 003e 0C2B     		cmp	r3, #12
 1663 0040 02D0     		beq	.L91
 1664 0042 102B     		cmp	r3, #16
 1665 0044 05D0     		beq	.L92
 1666 0046 0AE0     		b	.L95
 1667              	.L91:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 50


1127:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
1128:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if( (ResistiveTouch_1_ADC_CFG1_RESOLUTION == ResistiveTouch_1_ADC__BITS_12) || \
1129:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_RESOLUTION == ResistiveTouch_1_ADC__BITS_12) || \
1130:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_RESOLUTION == ResistiveTouch_1_ADC__BITS_12) || \
1131:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_RESOLUTION == ResistiveTouch_1_ADC__BITS_12) )
1132:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case (uint8)ResistiveTouch_1_ADC__BITS_12:
1133:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefA = ResistiveTouch_1_ADC_1UV_COUNTS / ResistiveTouch_1_ADC_DIVISOR_2;
 1668              		.loc 1 1133 0
 1669 0048 174B     		ldr	r3, .L96+4
 1670 004a 7B61     		str	r3, [r7, #20]
1134:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefB = ResistiveTouch_1_ADC_DIVISOR_2;
 1671              		.loc 1 1134 0
 1672 004c 0223     		movs	r3, #2
 1673 004e 3B61     		str	r3, [r7, #16]
1135:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
 1674              		.loc 1 1135 0
 1675 0050 0AE0     		b	.L93
 1676              	.L92:
1136:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC__BITS_12 */    
1137:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if( (ResistiveTouch_1_ADC_CFG1_RESOLUTION == ResistiveTouch_1_ADC__BITS_13) || \
1138:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_RESOLUTION == ResistiveTouch_1_ADC__BITS_13) || \
1139:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_RESOLUTION == ResistiveTouch_1_ADC__BITS_13) || \
1140:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_RESOLUTION == ResistiveTouch_1_ADC__BITS_13) )
1141:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case (uint8)ResistiveTouch_1_ADC__BITS_13:
1142:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefA = ResistiveTouch_1_ADC_1UV_COUNTS / ResistiveTouch_1_ADC_DIVISOR_4;
1143:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefB = ResistiveTouch_1_ADC_DIVISOR_4;
1144:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
1145:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC__BITS_13 */    
1146:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if( (ResistiveTouch_1_ADC_CFG1_RESOLUTION == ResistiveTouch_1_ADC__BITS_14) || \
1147:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_RESOLUTION == ResistiveTouch_1_ADC__BITS_14) || \
1148:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_RESOLUTION == ResistiveTouch_1_ADC__BITS_14) || \
1149:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_RESOLUTION == ResistiveTouch_1_ADC__BITS_14) )
1150:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case (uint8)ResistiveTouch_1_ADC__BITS_14:
1151:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefA = ResistiveTouch_1_ADC_1UV_COUNTS / ResistiveTouch_1_ADC_DIVISOR_8;
1152:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefB = ResistiveTouch_1_ADC_DIVISOR_8;
1153:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
1154:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC__BITS_14 */    
1155:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if( (ResistiveTouch_1_ADC_CFG1_RESOLUTION == ResistiveTouch_1_ADC__BITS_15) || \
1156:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_RESOLUTION == ResistiveTouch_1_ADC__BITS_15) || \
1157:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_RESOLUTION == ResistiveTouch_1_ADC__BITS_15) || \
1158:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_RESOLUTION == ResistiveTouch_1_ADC__BITS_15) )
1159:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case (uint8)ResistiveTouch_1_ADC__BITS_15:
1160:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefA = ResistiveTouch_1_ADC_1UV_COUNTS / ResistiveTouch_1_ADC_DIVISOR_16;
1161:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefB = ResistiveTouch_1_ADC_DIVISOR_16;
1162:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
1163:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC__BITS_15 */    
1164:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if( (ResistiveTouch_1_ADC_CFG1_RESOLUTION == ResistiveTouch_1_ADC__BITS_16) || \
1165:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_RESOLUTION == ResistiveTouch_1_ADC__BITS_16) || \
1166:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_RESOLUTION == ResistiveTouch_1_ADC__BITS_16) || \
1167:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_RESOLUTION == ResistiveTouch_1_ADC__BITS_16) )
1168:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case (uint8)ResistiveTouch_1_ADC__BITS_16:
1169:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefA = ResistiveTouch_1_ADC_1UV_COUNTS / ResistiveTouch_1_ADC_DIVISOR_32;
 1677              		.loc 1 1169 0
 1678 0052 47F61223 		movw	r3, #31250
 1679 0056 7B61     		str	r3, [r7, #20]
1170:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefB = ResistiveTouch_1_ADC_DIVISOR_32;
 1680              		.loc 1 1170 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 51


 1681 0058 2023     		movs	r3, #32
 1682 005a 3B61     		str	r3, [r7, #16]
1171:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
 1683              		.loc 1 1171 0
 1684 005c 04E0     		b	.L93
 1685              	.L95:
1172:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC__BITS_16 */    
1173:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if( (ResistiveTouch_1_ADC_CFG1_RESOLUTION == ResistiveTouch_1_ADC__BITS_17) || \
1174:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_RESOLUTION == ResistiveTouch_1_ADC__BITS_17) || \
1175:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_RESOLUTION == ResistiveTouch_1_ADC__BITS_17) || \
1176:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_RESOLUTION == ResistiveTouch_1_ADC__BITS_17) )
1177:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case (uint8)ResistiveTouch_1_ADC__BITS_17:
1178:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefA = ResistiveTouch_1_ADC_1UV_COUNTS / ResistiveTouch_1_ADC_DIVISOR_64;
1179:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefB = ResistiveTouch_1_ADC_DIVISOR_64;
1180:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
1181:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC__BITS_17 */    
1182:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if( (ResistiveTouch_1_ADC_CFG1_RESOLUTION == ResistiveTouch_1_ADC__BITS_18) || \
1183:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_RESOLUTION == ResistiveTouch_1_ADC__BITS_18) || \
1184:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_RESOLUTION == ResistiveTouch_1_ADC__BITS_18) || \
1185:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_RESOLUTION == ResistiveTouch_1_ADC__BITS_18) )
1186:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case (uint8)ResistiveTouch_1_ADC__BITS_18:
1187:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefA = ResistiveTouch_1_ADC_1UV_COUNTS / ResistiveTouch_1_ADC_DIVISOR_125;
1188:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefB = ResistiveTouch_1_ADC_DIVISOR_125;
1189:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
1190:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC__BITS_18 */    
1191:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if( (ResistiveTouch_1_ADC_CFG1_RESOLUTION == ResistiveTouch_1_ADC__BITS_19) || \
1192:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_RESOLUTION == ResistiveTouch_1_ADC__BITS_19) || \
1193:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_RESOLUTION == ResistiveTouch_1_ADC__BITS_19) || \
1194:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_RESOLUTION == ResistiveTouch_1_ADC__BITS_19) )
1195:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case (uint8)ResistiveTouch_1_ADC__BITS_19:
1196:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefA = ResistiveTouch_1_ADC_1UV_COUNTS / ResistiveTouch_1_ADC_DIVISOR_250;
1197:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefB = ResistiveTouch_1_ADC_DIVISOR_250;
1198:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
1199:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC__BITS_19 */    
1200:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if( (ResistiveTouch_1_ADC_CFG1_RESOLUTION == ResistiveTouch_1_ADC__BITS_20) || \
1201:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG2_RESOLUTION == ResistiveTouch_1_ADC__BITS_20) || \
1202:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG3_RESOLUTION == ResistiveTouch_1_ADC__BITS_20) || \
1203:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****              (ResistiveTouch_1_ADC_CFG4_RESOLUTION == ResistiveTouch_1_ADC__BITS_20) )
1204:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case (uint8)ResistiveTouch_1_ADC__BITS_20:
1205:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefA = ResistiveTouch_1_ADC_1UV_COUNTS / ResistiveTouch_1_ADC_DIVISOR_500;
1206:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 coefB = ResistiveTouch_1_ADC_DIVISOR_500;
1207:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
1208:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC__BITS_20 */    
1209:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         default:    /* resolution < 12 */
1210:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1211:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             coefA = ResistiveTouch_1_ADC_1UV_COUNTS;
 1686              		.loc 1 1211 0
 1687 005e 134B     		ldr	r3, .L96+8
 1688 0060 7B61     		str	r3, [r7, #20]
1212:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             coefB = ResistiveTouch_1_ADC_DIVISOR_1;
 1689              		.loc 1 1212 0
 1690 0062 0123     		movs	r3, #1
 1691 0064 3B61     		str	r3, [r7, #16]
1213:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             break;
 1692              		.loc 1 1213 0
 1693 0066 00BF     		nop
 1694              	.L93:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 52


1214:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
1215:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     coefB = ResistiveTouch_1_ADC_CountsPerVolt / coefB;
 1695              		.loc 1 1215 0
 1696 0068 114B     		ldr	r3, .L96+12
 1697 006a 1A68     		ldr	r2, [r3]
 1698 006c 3B69     		ldr	r3, [r7, #16]
 1699 006e 92FBF3F3 		sdiv	r3, r2, r3
 1700 0072 3B61     		str	r3, [r7, #16]
1216:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ResistiveTouch_1_ADC_Offset) / coefB);
 1701              		.loc 1 1216 0
 1702 0074 7B69     		ldr	r3, [r7, #20]
 1703 0076 7A68     		ldr	r2, [r7, #4]
 1704 0078 02FB03F2 		mul	r2, r2, r3
 1705 007c 3B69     		ldr	r3, [r7, #16]
 1706 007e 92FBF3F2 		sdiv	r2, r2, r3
 1707 0082 0C4B     		ldr	r3, .L96+16
 1708 0084 1B68     		ldr	r3, [r3]
 1709 0086 7969     		ldr	r1, [r7, #20]
 1710 0088 01FB03F1 		mul	r1, r1, r3
 1711 008c 3B69     		ldr	r3, [r7, #16]
 1712 008e 91FBF3F3 		sdiv	r3, r1, r3
 1713 0092 D31A     		subs	r3, r2, r3
 1714 0094 BB60     		str	r3, [r7, #8]
1217:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1218:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     return( uVolts );
 1715              		.loc 1 1218 0
 1716 0096 BB68     		ldr	r3, [r7, #8]
1219:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1717              		.loc 1 1219 0
 1718 0098 1846     		mov	r0, r3
 1719 009a 1C37     		adds	r7, r7, #28
 1720              		.cfi_def_cfa_offset 4
 1721 009c BD46     		mov	sp, r7
 1722              		.cfi_def_cfa_register 13
 1723              		@ sp needed
 1724 009e 5DF8047B 		ldr	r7, [sp], #4
 1725              		.cfi_restore 7
 1726              		.cfi_def_cfa_offset 0
 1727 00a2 7047     		bx	lr
 1728              	.L97:
 1729              		.align	2
 1730              	.L96:
 1731 00a4 00000000 		.word	ResistiveTouch_1_ADC_Config
 1732 00a8 20A10700 		.word	500000
 1733 00ac 40420F00 		.word	1000000
 1734 00b0 00000000 		.word	ResistiveTouch_1_ADC_CountsPerVolt
 1735 00b4 00000000 		.word	ResistiveTouch_1_ADC_Offset
 1736              		.cfi_endproc
 1737              	.LFE18:
 1738              		.size	ResistiveTouch_1_ADC_CountsTo_uVolts, .-ResistiveTouch_1_ADC_CountsTo_uVolts
 1739              		.section	.text.ResistiveTouch_1_ADC_InitConfig,"ax",%progbits
 1740              		.align	2
 1741              		.thumb
 1742              		.thumb_func
 1743              		.type	ResistiveTouch_1_ADC_InitConfig, %function
 1744              	ResistiveTouch_1_ADC_InitConfig:
 1745              	.LFB19:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 53


1220:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1221:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1222:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
1223:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_InitConfig(uint8 config)
1224:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
1225:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1226:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
1227:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Initializes all registers based on customizer settings
1228:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1229:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
1230:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   void
1231:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1232:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
1233:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
1234:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1235:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Global variables:
1236:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  ResistiveTouch_1_ADC_CountsPerVolt:  Used to set the default counts per volt.
1237:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1238:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Side Effects: Rewrites the coherency set by ResistiveTouch_1_ADC_SetCoherency()
1239:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   API to the default value.
1240:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1241:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
1242:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** static void ResistiveTouch_1_ADC_InitConfig(uint8 config) 
1243:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1746              		.loc 1 1243 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 8
 1749              		@ frame_needed = 1, uses_anonymous_args = 0
 1750 0000 80B5     		push	{r7, lr}
 1751              		.cfi_def_cfa_offset 8
 1752              		.cfi_offset 7, -8
 1753              		.cfi_offset 14, -4
 1754 0002 82B0     		sub	sp, sp, #8
 1755              		.cfi_def_cfa_offset 16
 1756 0004 00AF     		add	r7, sp, #0
 1757              		.cfi_def_cfa_register 7
 1758 0006 0346     		mov	r3, r0
 1759 0008 FB71     		strb	r3, [r7, #7]
1244:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_stopConversion = 0u;
 1760              		.loc 1 1244 0
 1761 000a 384B     		ldr	r3, .L100
 1762 000c 0022     		movs	r2, #0
 1763 000e 1A70     		strb	r2, [r3]
1245:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1246:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if (config == 1u)
 1764              		.loc 1 1246 0
 1765 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1766 0012 012B     		cmp	r3, #1
 1767 0014 66D1     		bne	.L98
1247:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
1248:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Default Config */
1249:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_CR_REG      = ResistiveTouch_1_ADC_CFG1_DEC_CR;
 1768              		.loc 1 1249 0
 1769 0016 364B     		ldr	r3, .L100+4
 1770 0018 3022     		movs	r2, #48
 1771 001a 1A70     		strb	r2, [r3]
1250:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_SHIFT1_REG  = ResistiveTouch_1_ADC_CFG1_DEC_SHIFT1;
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 54


 1772              		.loc 1 1250 0
 1773 001c 354B     		ldr	r3, .L100+8
 1774 001e 0622     		movs	r2, #6
 1775 0020 1A70     		strb	r2, [r3]
1251:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_SHIFT2_REG  = ResistiveTouch_1_ADC_CFG1_DEC_SHIFT2;
 1776              		.loc 1 1251 0
 1777 0022 354B     		ldr	r3, .L100+12
 1778 0024 0822     		movs	r2, #8
 1779 0026 1A70     		strb	r2, [r3]
1252:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_DR2_REG     = ResistiveTouch_1_ADC_CFG1_DEC_DR2;
 1780              		.loc 1 1252 0
 1781 0028 344B     		ldr	r3, .L100+16
 1782 002a 0022     		movs	r2, #0
 1783 002c 1A70     		strb	r2, [r3]
1253:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_DR2H_REG    = ResistiveTouch_1_ADC_CFG1_DEC_DR2H;
 1784              		.loc 1 1253 0
 1785 002e 344B     		ldr	r3, .L100+20
 1786 0030 0022     		movs	r2, #0
 1787 0032 1A70     		strb	r2, [r3]
1254:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_DR1_REG     = ResistiveTouch_1_ADC_CFG1_DEC_DR1;
 1788              		.loc 1 1254 0
 1789 0034 334B     		ldr	r3, .L100+24
 1790 0036 1F22     		movs	r2, #31
 1791 0038 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_OCOR_REG    = ResistiveTouch_1_ADC_CFG1_DEC_OCOR;
 1792              		.loc 1 1255 0
 1793 003a 334B     		ldr	r3, .L100+28
 1794 003c 0022     		movs	r2, #0
 1795 003e 1A70     		strb	r2, [r3]
1256:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_OCORM_REG   = ResistiveTouch_1_ADC_CFG1_DEC_OCORM;
 1796              		.loc 1 1256 0
 1797 0040 324B     		ldr	r3, .L100+32
 1798 0042 0022     		movs	r2, #0
 1799 0044 1A70     		strb	r2, [r3]
1257:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_OCORH_REG   = ResistiveTouch_1_ADC_CFG1_DEC_OCORH;
 1800              		.loc 1 1257 0
 1801 0046 324B     		ldr	r3, .L100+36
 1802 0048 0022     		movs	r2, #0
 1803 004a 1A70     		strb	r2, [r3]
1258:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_COHER_REG   = ResistiveTouch_1_ADC_CFG1_DEC_COHER;
 1804              		.loc 1 1258 0
 1805 004c 314B     		ldr	r3, .L100+40
 1806 004e 0122     		movs	r2, #1
 1807 0050 1A70     		strb	r2, [r3]
1259:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1260:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR4_REG     = ResistiveTouch_1_ADC_CFG1_DSM_CR4;
 1808              		.loc 1 1260 0
 1809 0052 314B     		ldr	r3, .L100+44
 1810 0054 1422     		movs	r2, #20
 1811 0056 1A70     		strb	r2, [r3]
1261:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR5_REG     = ResistiveTouch_1_ADC_CFG1_DSM_CR5;
 1812              		.loc 1 1261 0
 1813 0058 304B     		ldr	r3, .L100+48
 1814 005a 0522     		movs	r2, #5
 1815 005c 1A70     		strb	r2, [r3]
1262:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR6_REG     = ResistiveTouch_1_ADC_CFG1_DSM_CR6;
 1816              		.loc 1 1262 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 55


 1817 005e 304B     		ldr	r3, .L100+52
 1818 0060 1622     		movs	r2, #22
 1819 0062 1A70     		strb	r2, [r3]
1263:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR7_REG     = ResistiveTouch_1_ADC_CFG1_DSM_CR7;
 1820              		.loc 1 1263 0
 1821 0064 2F4B     		ldr	r3, .L100+56
 1822 0066 0022     		movs	r2, #0
 1823 0068 1A70     		strb	r2, [r3]
1264:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR10_REG    = ResistiveTouch_1_ADC_CFG1_DSM_CR10;
 1824              		.loc 1 1264 0
 1825 006a 2F4B     		ldr	r3, .L100+60
 1826 006c 4422     		movs	r2, #68
 1827 006e 1A70     		strb	r2, [r3]
1265:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR11_REG    = ResistiveTouch_1_ADC_CFG1_DSM_CR11;
 1828              		.loc 1 1265 0
 1829 0070 2E4B     		ldr	r3, .L100+64
 1830 0072 4822     		movs	r2, #72
 1831 0074 1A70     		strb	r2, [r3]
1266:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR12_REG    = ResistiveTouch_1_ADC_CFG1_DSM_CR12;
 1832              		.loc 1 1266 0
 1833 0076 2E4B     		ldr	r3, .L100+68
 1834 0078 0122     		movs	r2, #1
 1835 007a 1A70     		strb	r2, [r3]
1267:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR14_REG    = ResistiveTouch_1_ADC_CFG1_DSM_CR14;
 1836              		.loc 1 1267 0
 1837 007c 2D4B     		ldr	r3, .L100+72
 1838 007e 0222     		movs	r2, #2
 1839 0080 1A70     		strb	r2, [r3]
1268:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR15_REG    = ResistiveTouch_1_ADC_CFG1_DSM_CR15;
 1840              		.loc 1 1268 0
 1841 0082 2D4B     		ldr	r3, .L100+76
 1842 0084 2222     		movs	r2, #34
 1843 0086 1A70     		strb	r2, [r3]
1269:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR16_REG    = ResistiveTouch_1_ADC_CFG1_DSM_CR16;
 1844              		.loc 1 1269 0
 1845 0088 2C4B     		ldr	r3, .L100+80
 1846 008a 2822     		movs	r2, #40
 1847 008c 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_CR17_REG    = ResistiveTouch_1_ADC_CFG1_DSM_CR17;
 1848              		.loc 1 1270 0
 1849 008e 2C4B     		ldr	r3, .L100+84
 1850 0090 EB22     		movs	r2, #235
 1851 0092 1A70     		strb	r2, [r3]
1271:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1272:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_SetDSMRef0Reg(ResistiveTouch_1_ADC_CFG1_DSM_REF0);
 1852              		.loc 1 1272 0
 1853 0094 5220     		movs	r0, #82
 1854 0096 FFF7FEFF 		bl	ResistiveTouch_1_ADC_SetDSMRef0Reg
1273:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_REF2_REG    = ResistiveTouch_1_ADC_CFG1_DSM_REF2;
 1855              		.loc 1 1273 0
 1856 009a 2A4B     		ldr	r3, .L100+88
 1857 009c 5822     		movs	r2, #88
 1858 009e 1A70     		strb	r2, [r3]
1274:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_REF3_REG    = ResistiveTouch_1_ADC_CFG1_DSM_REF3;
 1859              		.loc 1 1274 0
 1860 00a0 294B     		ldr	r3, .L100+92
 1861 00a2 0022     		movs	r2, #0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 56


 1862 00a4 1A70     		strb	r2, [r3]
1275:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1276:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_BUF0_REG    = ResistiveTouch_1_ADC_CFG1_DSM_BUF0;
 1863              		.loc 1 1276 0
 1864 00a6 294B     		ldr	r3, .L100+96
 1865 00a8 0522     		movs	r2, #5
 1866 00aa 1A70     		strb	r2, [r3]
1277:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_BUF1_REG    = ResistiveTouch_1_ADC_CFG1_DSM_BUF1;
 1867              		.loc 1 1277 0
 1868 00ac 284B     		ldr	r3, .L100+100
 1869 00ae 0222     		movs	r2, #2
 1870 00b0 1A70     		strb	r2, [r3]
1278:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_BUF2_REG    = ResistiveTouch_1_ADC_CFG1_DSM_BUF2;
 1871              		.loc 1 1278 0
 1872 00b2 284B     		ldr	r3, .L100+104
 1873 00b4 0022     		movs	r2, #0
 1874 00b6 1A70     		strb	r2, [r3]
1279:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DSM_BUF3_REG    = ResistiveTouch_1_ADC_CFG1_DSM_BUF3;
 1875              		.loc 1 1279 0
 1876 00b8 274B     		ldr	r3, .L100+108
 1877 00ba 0022     		movs	r2, #0
 1878 00bc 1A70     		strb	r2, [r3]
1280:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1281:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1282:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         *  the input  range selected.
1283:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         */
1284:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if(ResistiveTouch_1_ADC_DEFAULT_INPUT_MODE)
1285:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if (ResistiveTouch_1_ADC_CFG1_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF)
1286:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_AMux_Select(1u);
1287:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #else
1288:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_AMux_Select(0u);
 1879              		.loc 1 1288 0
 1880 00be 0020     		movs	r0, #0
 1881 00c0 FFF7FEFF 		bl	ResistiveTouch_1_ADC_AMux_Select
1289:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif /* ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF) */
1290:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC_DEFAULT_INPUT_MODE */
1291:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1292:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1293:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         *   mode is Single sample
1294:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         */
1295:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if(ResistiveTouch_1_ADC_CFG1_RESOLUTION > 16 && \
1296:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_CFG1_CONV_MODE == ResistiveTouch_1_ADC_MODE_SINGLE_SAMPLE)
1297:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_stopConversion = 1u;
1298:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* Single sample with resolution above 16 bits. */
1299:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1300:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_CountsPerVolt = (int32)ResistiveTouch_1_ADC_CFG1_COUNTS_PER_VOLT;
 1882              		.loc 1 1300 0
 1883 00c4 254B     		ldr	r3, .L100+112
 1884 00c6 40F23332 		movw	r2, #819
 1885 00ca 1A60     		str	r2, [r3]
1301:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1302:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_Ext_CP_Clk_SetDividerRegister(ResistiveTouch_1_ADC_CFG1_CP_CLK_DIVIDER
 1886              		.loc 1 1302 0
 1887 00cc 0820     		movs	r0, #8
 1888 00ce 0121     		movs	r1, #1
 1889 00d0 FFF7FEFF 		bl	ResistiveTouch_1_ADC_Ext_CP_Clk_SetDividerRegister
1303:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 57


1304:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* This is only valid if there is an internal clock */
1305:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if(ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK)
1306:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_theACLK_SetDividerRegister(ResistiveTouch_1_ADC_CFG1_ADC_CLK_DIVID
 1890              		.loc 1 1306 0
 1891 00d4 2220     		movs	r0, #34
 1892 00d6 0121     		movs	r1, #1
 1893 00d8 FFF7FEFF 		bl	ResistiveTouch_1_ADC_theACLK_SetDividerRegister
1307:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif /* ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK */
1308:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1309:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #if(ResistiveTouch_1_ADC_IRQ_REMOVE == 0u)
1310:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Set interrupt vector */
1311:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             (void)CyIntSetVector(ResistiveTouch_1_ADC_INTC_NUMBER, &ResistiveTouch_1_ADC_ISR1);
 1894              		.loc 1 1311 0
 1895 00dc 1D20     		movs	r0, #29
 1896 00de 2049     		ldr	r1, .L100+116
 1897 00e0 FFF7FEFF 		bl	CyIntSetVector
 1898              	.L98:
1312:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         #endif   /* End ResistiveTouch_1_ADC_IRQ_REMOVE */
1313:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
1314:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1315:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 1)
1316:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(config == 2u)
1317:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1318:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Second Config */
1319:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_CR_REG      = ResistiveTouch_1_ADC_CFG2_DEC_CR;
1320:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_SHIFT1_REG  = ResistiveTouch_1_ADC_CFG2_DEC_SHIFT1;
1321:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_SHIFT2_REG  = ResistiveTouch_1_ADC_CFG2_DEC_SHIFT2;
1322:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_DR2_REG     = ResistiveTouch_1_ADC_CFG2_DEC_DR2;
1323:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_DR2H_REG    = ResistiveTouch_1_ADC_CFG2_DEC_DR2H;
1324:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_DR1_REG     = ResistiveTouch_1_ADC_CFG2_DEC_DR1;
1325:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_OCOR_REG    = ResistiveTouch_1_ADC_CFG2_DEC_OCOR;
1326:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_OCORM_REG   = ResistiveTouch_1_ADC_CFG2_DEC_OCORM;
1327:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_OCORH_REG   = ResistiveTouch_1_ADC_CFG2_DEC_OCORH;
1328:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_COHER_REG   = ResistiveTouch_1_ADC_CFG2_DEC_COHER;
1329:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1330:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR4_REG     = ResistiveTouch_1_ADC_CFG2_DSM_CR4;
1331:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR5_REG     = ResistiveTouch_1_ADC_CFG2_DSM_CR5;
1332:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR6_REG     = ResistiveTouch_1_ADC_CFG2_DSM_CR6;
1333:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR7_REG     = ResistiveTouch_1_ADC_CFG2_DSM_CR7;
1334:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR10_REG    = ResistiveTouch_1_ADC_CFG2_DSM_CR10;
1335:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR11_REG    = ResistiveTouch_1_ADC_CFG2_DSM_CR11;
1336:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR12_REG    = ResistiveTouch_1_ADC_CFG2_DSM_CR12;
1337:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR14_REG    = ResistiveTouch_1_ADC_CFG2_DSM_CR14;
1338:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR15_REG    = ResistiveTouch_1_ADC_CFG2_DSM_CR15;
1339:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR16_REG    = ResistiveTouch_1_ADC_CFG2_DSM_CR16;
1340:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR17_REG    = ResistiveTouch_1_ADC_CFG2_DSM_CR17;
1341:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1342:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_SetDSMRef0Reg(ResistiveTouch_1_ADC_CFG2_DSM_REF0);
1343:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_REF2_REG    = ResistiveTouch_1_ADC_CFG2_DSM_REF2;
1344:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_REF3_REG    = ResistiveTouch_1_ADC_CFG2_DSM_REF3;
1345:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1346:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF0_REG    = ResistiveTouch_1_ADC_CFG2_DSM_BUF0;
1347:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF1_REG    = ResistiveTouch_1_ADC_CFG2_DSM_BUF1;
1348:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF2_REG    = ResistiveTouch_1_ADC_CFG2_DSM_BUF2;
1349:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF3_REG    = ResistiveTouch_1_ADC_CFG2_DSM_BUF3;
1350:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1351:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 58


1352:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             *  the input range selected.
1353:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             */
1354:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1355:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_DEFAULT_INPUT_MODE)
1356:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 #if (ResistiveTouch_1_ADC_CFG2_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF
1357:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     ResistiveTouch_1_ADC_AMux_Select(1u);
1358:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 #else
1359:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     ResistiveTouch_1_ADC_AMux_Select(0u);
1360:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 #endif /* ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF) */
1361:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif /* ResistiveTouch_1_ADC_DEFAULT_INPUT_MODE */
1362:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1363:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1364:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             *   conversion mode is Single sample
1365:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             */
1366:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_CFG2_RESOLUTION > 16 && \
1367:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_CFG2_CONV_MODE == ResistiveTouch_1_ADC_MODE_SINGLE_SAMPLE)
1368:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_stopConversion = 1u;
1369:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif /* Single sample with resolution above 16 bits. */
1370:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1371:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_CountsPerVolt = (int32)ResistiveTouch_1_ADC_CFG2_COUNTS_PER_VOLT;
1372:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1373:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_Ext_CP_Clk_SetDividerRegister(ResistiveTouch_1_ADC_CFG2_CP_CLK_DIV
1374:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1375:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* This is only valid if there is an internal clock */
1376:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK)
1377:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_theACLK_SetDividerRegister(ResistiveTouch_1_ADC_CFG2_ADC_CLK_D
1378:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif /* ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK */
1379:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1380:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_IRQ_REMOVE == 0u)
1381:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 /* Set interrupt vector */
1382:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 (void)CyIntSetVector(ResistiveTouch_1_ADC_INTC_NUMBER, &ResistiveTouch_1_ADC_ISR2);
1383:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif   /* End ResistiveTouch_1_ADC_IRQ_REMOVE */
1384:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1385:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 1 */
1386:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1387:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 2)
1388:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(config == 3u)
1389:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1390:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Third Config */
1391:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_CR_REG      = ResistiveTouch_1_ADC_CFG3_DEC_CR;
1392:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_SHIFT1_REG  = ResistiveTouch_1_ADC_CFG3_DEC_SHIFT1;
1393:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_SHIFT2_REG  = ResistiveTouch_1_ADC_CFG3_DEC_SHIFT2;
1394:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_DR2_REG     = ResistiveTouch_1_ADC_CFG3_DEC_DR2;
1395:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_DR2H_REG    = ResistiveTouch_1_ADC_CFG3_DEC_DR2H;
1396:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_DR1_REG     = ResistiveTouch_1_ADC_CFG3_DEC_DR1;
1397:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_OCOR_REG    = ResistiveTouch_1_ADC_CFG3_DEC_OCOR;
1398:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_OCORM_REG   = ResistiveTouch_1_ADC_CFG3_DEC_OCORM;
1399:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_OCORH_REG   = ResistiveTouch_1_ADC_CFG3_DEC_OCORH;
1400:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_COHER_REG   = ResistiveTouch_1_ADC_CFG3_DEC_COHER;
1401:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1402:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR4_REG     = ResistiveTouch_1_ADC_CFG3_DSM_CR4;
1403:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR5_REG     = ResistiveTouch_1_ADC_CFG3_DSM_CR5;
1404:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR6_REG     = ResistiveTouch_1_ADC_CFG3_DSM_CR6;
1405:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR7_REG     = ResistiveTouch_1_ADC_CFG3_DSM_CR7;
1406:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR10_REG    = ResistiveTouch_1_ADC_CFG3_DSM_CR10;
1407:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR11_REG    = ResistiveTouch_1_ADC_CFG3_DSM_CR11;
1408:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR12_REG    = ResistiveTouch_1_ADC_CFG3_DSM_CR12;
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 59


1409:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR14_REG    = ResistiveTouch_1_ADC_CFG3_DSM_CR14;
1410:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR15_REG    = ResistiveTouch_1_ADC_CFG3_DSM_CR15;
1411:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR16_REG    = ResistiveTouch_1_ADC_CFG3_DSM_CR16;
1412:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR17_REG    = ResistiveTouch_1_ADC_CFG3_DSM_CR17;
1413:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1414:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_SetDSMRef0Reg(ResistiveTouch_1_ADC_CFG3_DSM_REF0);
1415:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_REF2_REG    = ResistiveTouch_1_ADC_CFG3_DSM_REF2;
1416:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_REF3_REG    = ResistiveTouch_1_ADC_CFG3_DSM_REF3;
1417:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1418:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF0_REG    = ResistiveTouch_1_ADC_CFG3_DSM_BUF0;
1419:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF1_REG    = ResistiveTouch_1_ADC_CFG3_DSM_BUF1;
1420:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF2_REG    = ResistiveTouch_1_ADC_CFG3_DSM_BUF2;
1421:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF3_REG    = ResistiveTouch_1_ADC_CFG3_DSM_BUF3;
1422:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1423:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1424:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             *  the input range selected.
1425:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             */
1426:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_DEFAULT_INPUT_MODE)
1427:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 #if (ResistiveTouch_1_ADC_CFG3_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF
1428:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     ResistiveTouch_1_ADC_AMux_Select(1u);
1429:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 #else
1430:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     ResistiveTouch_1_ADC_AMux_Select(0u);
1431:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 #endif /* ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF) */
1432:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif /* ResistiveTouch_1_ADC_DEFAULT_INPUT_MODE */
1433:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1434:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1435:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                conversion  mode is Single sample */
1436:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_CFG3_RESOLUTION > 16 && \
1437:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_CFG3_CONV_MODE == ResistiveTouch_1_ADC_MODE_SINGLE_SAMPLE)
1438:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_stopConversion = 1u;
1439:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1440:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1441:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_CountsPerVolt = (int32)ResistiveTouch_1_ADC_CFG3_COUNTS_PER_VOLT;
1442:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1443:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_Ext_CP_Clk_SetDividerRegister(ResistiveTouch_1_ADC_CFG3_CP_CLK_DIV
1444:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1445:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* This is only valid if there is an internal clock */
1446:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK)
1447:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_theACLK_SetDividerRegister(ResistiveTouch_1_ADC_CFG3_ADC_CLK_D
1448:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif /* ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK */
1449:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1450:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_IRQ_REMOVE == 0u)
1451:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 /* Set interrupt vector */
1452:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 (void)CyIntSetVector(ResistiveTouch_1_ADC_INTC_NUMBER, &ResistiveTouch_1_ADC_ISR3);
1453:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif   /* End ResistiveTouch_1_ADC_IRQ_REMOVE */
1454:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1455:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 2 */
1456:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1457:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #if(ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 3)
1458:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if (config == 4u)
1459:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1460:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Fourth Config */
1461:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_CR_REG      = ResistiveTouch_1_ADC_CFG4_DEC_CR;
1462:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_SHIFT1_REG  = ResistiveTouch_1_ADC_CFG4_DEC_SHIFT1;
1463:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_SHIFT2_REG  = ResistiveTouch_1_ADC_CFG4_DEC_SHIFT2;
1464:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_DR2_REG     = ResistiveTouch_1_ADC_CFG4_DEC_DR2;
1465:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_DR2H_REG    = ResistiveTouch_1_ADC_CFG4_DEC_DR2H;
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 60


1466:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_DR1_REG     = ResistiveTouch_1_ADC_CFG4_DEC_DR1;
1467:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_OCOR_REG    = ResistiveTouch_1_ADC_CFG4_DEC_OCOR;
1468:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_OCORM_REG   = ResistiveTouch_1_ADC_CFG4_DEC_OCORM;
1469:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_OCORH_REG   = ResistiveTouch_1_ADC_CFG4_DEC_OCORH;
1470:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DEC_COHER_REG   = ResistiveTouch_1_ADC_CFG4_DEC_COHER;
1471:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1472:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR4_REG     = ResistiveTouch_1_ADC_CFG4_DSM_CR4;
1473:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR5_REG     = ResistiveTouch_1_ADC_CFG4_DSM_CR5;
1474:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR6_REG     = ResistiveTouch_1_ADC_CFG4_DSM_CR6;
1475:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR7_REG     = ResistiveTouch_1_ADC_CFG4_DSM_CR7;
1476:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR10_REG    = ResistiveTouch_1_ADC_CFG4_DSM_CR10;
1477:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR11_REG    = ResistiveTouch_1_ADC_CFG4_DSM_CR11;
1478:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR12_REG    = ResistiveTouch_1_ADC_CFG4_DSM_CR12;
1479:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR14_REG    = ResistiveTouch_1_ADC_CFG4_DSM_CR14;
1480:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR15_REG    = ResistiveTouch_1_ADC_CFG4_DSM_CR15;
1481:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR16_REG    = ResistiveTouch_1_ADC_CFG4_DSM_CR16;
1482:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_CR17_REG    = ResistiveTouch_1_ADC_CFG4_DSM_CR17;
1483:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1484:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_SetDSMRef0Reg(ResistiveTouch_1_ADC_CFG4_DSM_REF0);
1485:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_REF2_REG    = ResistiveTouch_1_ADC_CFG4_DSM_REF2;
1486:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_REF3_REG    = ResistiveTouch_1_ADC_CFG4_DSM_REF3;
1487:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1488:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF0_REG    = ResistiveTouch_1_ADC_CFG4_DSM_BUF0;
1489:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF1_REG    = ResistiveTouch_1_ADC_CFG4_DSM_BUF1;
1490:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF2_REG    = ResistiveTouch_1_ADC_CFG4_DSM_BUF2;
1491:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_DSM_BUF3_REG    = ResistiveTouch_1_ADC_CFG4_DSM_BUF3;
1492:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1493:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1494:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             *  the input range selected.
1495:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             */
1496:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_DEFAULT_INPUT_MODE)
1497:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 #if (ResistiveTouch_1_ADC_CFG4_INPUT_RANGE == ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF
1498:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     ResistiveTouch_1_ADC_AMux_Select(1u);
1499:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 #else
1500:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     ResistiveTouch_1_ADC_AMux_Select(0u);
1501:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 #endif /* ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF) */
1502:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif /* ResistiveTouch_1_ADC_DEFAULT_INPUT_MODE */
1503:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1504:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1505:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                conversion mode is Single sample */
1506:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_CFG4_RESOLUTION > 16 && \
1507:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_CFG4_CONV_MODE == ResistiveTouch_1_ADC_MODE_SINGLE_SAMPLE)
1508:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_stopConversion = 1u;
1509:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1510:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1511:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_CountsPerVolt = (int32)ResistiveTouch_1_ADC_CFG4_COUNTS_PER_VOLT;
1512:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1513:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_Ext_CP_Clk_SetDividerRegister(ResistiveTouch_1_ADC_CFG4_CP_CLK_DIV
1514:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1515:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* This is only valid if there is an internal clock */
1516:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK)
1517:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 ResistiveTouch_1_ADC_theACLK_SetDividerRegister(ResistiveTouch_1_ADC_CFG4_ADC_CLK_D
1518:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif /* ResistiveTouch_1_ADC_DEFAULT_INTERNAL_CLK */
1519:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1520:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #if(ResistiveTouch_1_ADC_IRQ_REMOVE == 0u)
1521:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 /* Set interrupt vector */
1522:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 (void)CyIntSetVector(ResistiveTouch_1_ADC_INTC_NUMBER, &ResistiveTouch_1_ADC_ISR4);
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 61


1523:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             #endif   /* End ResistiveTouch_1_ADC_IRQ_REMOVE */
1524:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1525:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     #endif /* ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS > 3 */
1526:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 1899              		.loc 1 1526 0
 1900 00e4 0837     		adds	r7, r7, #8
 1901              		.cfi_def_cfa_offset 8
 1902 00e6 BD46     		mov	sp, r7
 1903              		.cfi_def_cfa_register 13
 1904              		@ sp needed
 1905 00e8 80BD     		pop	{r7, pc}
 1906              	.L101:
 1907 00ea 00BF     		.align	2
 1908              	.L100:
 1909 00ec 00000000 		.word	ResistiveTouch_1_ADC_stopConversion
 1910 00f0 004E0040 		.word	1073761792
 1911 00f4 024E0040 		.word	1073761794
 1912 00f8 034E0040 		.word	1073761795
 1913 00fc 044E0040 		.word	1073761796
 1914 0100 054E0040 		.word	1073761797
 1915 0104 064E0040 		.word	1073761798
 1916 0108 084E0040 		.word	1073761800
 1917 010c 094E0040 		.word	1073761801
 1918 0110 0A4E0040 		.word	1073761802
 1919 0114 144E0040 		.word	1073761812
 1920 0118 84580040 		.word	1073764484
 1921 011c 85580040 		.word	1073764485
 1922 0120 86580040 		.word	1073764486
 1923 0124 87580040 		.word	1073764487
 1924 0128 8A580040 		.word	1073764490
 1925 012c 8B580040 		.word	1073764491
 1926 0130 8C580040 		.word	1073764492
 1927 0134 8E580040 		.word	1073764494
 1928 0138 8F580040 		.word	1073764495
 1929 013c 90580040 		.word	1073764496
 1930 0140 91580040 		.word	1073764497
 1931 0144 94580040 		.word	1073764500
 1932 0148 95580040 		.word	1073764501
 1933 014c 9A580040 		.word	1073764506
 1934 0150 9B580040 		.word	1073764507
 1935 0154 9C580040 		.word	1073764508
 1936 0158 9D580040 		.word	1073764509
 1937 015c 00000000 		.word	ResistiveTouch_1_ADC_CountsPerVolt
 1938 0160 00000000 		.word	ResistiveTouch_1_ADC_ISR1
 1939              		.cfi_endproc
 1940              	.LFE19:
 1941              		.size	ResistiveTouch_1_ADC_InitConfig, .-ResistiveTouch_1_ADC_InitConfig
 1942              		.section	.text.ResistiveTouch_1_ADC_SelectConfiguration,"ax",%progbits
 1943              		.align	2
 1944              		.global	ResistiveTouch_1_ADC_SelectConfiguration
 1945              		.thumb
 1946              		.thumb_func
 1947              		.type	ResistiveTouch_1_ADC_SelectConfiguration, %function
 1948              	ResistiveTouch_1_ADC_SelectConfiguration:
 1949              	.LFB20:
1527:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1528:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 62


1529:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
1530:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_SelectCofiguration
1531:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
1532:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1533:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
1534:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  Sets one of up to four ADC configurations. Before setting the new
1535:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  configuration, the ADC is stopped and powered down. After setting
1536:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  the new configuration, the ADC can be powered and conversion
1537:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  can be restarted depending up on the value of second parameter
1538:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  restart. If the value of this parameter is 1, then ADC will be
1539:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  restarted. If this value is zero, then user must call ResistiveTouch_1_ADC_Start
1540:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  and ResistiveTouch_1_ADC_StartConvert() to restart the conversion.
1541:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1542:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
1543:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  config:  configuration user wants to select.
1544:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *           Valid range: 1..4
1545:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1546:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                            0 means do not start the ADC and conversion.
1547:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1548:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
1549:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
1550:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1551:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
1552:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** void ResistiveTouch_1_ADC_SelectConfiguration(uint8 config, uint8 restart)
1553:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                                               
1554:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 1950              		.loc 1 1554 0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 8
 1953              		@ frame_needed = 1, uses_anonymous_args = 0
 1954 0000 80B5     		push	{r7, lr}
 1955              		.cfi_def_cfa_offset 8
 1956              		.cfi_offset 7, -8
 1957              		.cfi_offset 14, -4
 1958 0002 82B0     		sub	sp, sp, #8
 1959              		.cfi_def_cfa_offset 16
 1960 0004 00AF     		add	r7, sp, #0
 1961              		.cfi_def_cfa_register 7
 1962 0006 0346     		mov	r3, r0
 1963 0008 0A46     		mov	r2, r1
 1964 000a FB71     		strb	r3, [r7, #7]
 1965 000c 1346     		mov	r3, r2
 1966 000e BB71     		strb	r3, [r7, #6]
1555:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Check whether the configuration number is valid or not */
1556:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if((config > 0u) && (config <= ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS))
 1967              		.loc 1 1556 0
 1968 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1969 0012 002B     		cmp	r3, #0
 1970 0014 2AD0     		beq	.L103
 1971              		.loc 1 1556 0 is_stmt 0 discriminator 1
 1972 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1973 0018 012B     		cmp	r3, #1
 1974 001a 27D8     		bhi	.L103
1557:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
1558:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Set the flag to ensure Start() API doesn't override the 
1559:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 		*  selected configuration
1560:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 		*/
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 63


1561:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(ResistiveTouch_1_ADC_initVar == 0u)
 1975              		.loc 1 1561 0 is_stmt 1
 1976 001c 164B     		ldr	r3, .L107
 1977 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1978 0020 002B     		cmp	r3, #0
 1979 0022 02D1     		bne	.L104
1562:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1563:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_started = 1u;
 1980              		.loc 1 1563 0
 1981 0024 154B     		ldr	r3, .L107+4
 1982 0026 0122     		movs	r2, #1
 1983 0028 1A70     		strb	r2, [r3]
 1984              	.L104:
1564:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1565:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1566:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Update the config flag */
1567:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_Config = config;
 1985              		.loc 1 1567 0
 1986 002a 154A     		ldr	r2, .L107+8
 1987 002c FB79     		ldrb	r3, [r7, #7]
 1988 002e 1370     		strb	r3, [r2]
1568:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1569:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Stop the ADC  */
1570:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_Stop();
 1989              		.loc 1 1570 0
 1990 0030 FFF7FEFF 		bl	ResistiveTouch_1_ADC_Stop
1571:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1572:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Set the  ADC registers based on the configuration */
1573:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_InitConfig(config);
 1991              		.loc 1 1573 0
 1992 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1993 0036 1846     		mov	r0, r3
 1994 0038 FFF7FEFF 		bl	ResistiveTouch_1_ADC_InitConfig
1574:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1575:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Compensate the gain */
1576:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_DEC_GVAL_REG = ResistiveTouch_1_ADC_gcor[config - 1u].gval;
 1995              		.loc 1 1576 0
 1996 003c 114A     		ldr	r2, .L107+12
 1997 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1998 0040 013B     		subs	r3, r3, #1
 1999 0042 1149     		ldr	r1, .L107+16
 2000 0044 9B00     		lsls	r3, r3, #2
 2001 0046 0B44     		add	r3, r3, r1
 2002 0048 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2003 004a 1370     		strb	r3, [r2]
1577:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         CY_SET_REG16(ResistiveTouch_1_ADC_DEC_GCOR_16B_PTR, ResistiveTouch_1_ADC_gcor[config - 1u].
 2004              		.loc 1 1577 0
 2005 004c 0F4A     		ldr	r2, .L107+20
 2006 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2007 0050 013B     		subs	r3, r3, #1
 2008 0052 0D49     		ldr	r1, .L107+16
 2009 0054 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 2010 0058 1380     		strh	r3, [r2]	@ movhi
1578:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1579:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if(restart == 1u)
 2011              		.loc 1 1579 0
 2012 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 64


 2013 005c 012B     		cmp	r3, #1
 2014 005e 04D1     		bne	.L105
1580:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1581:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Restart the ADC */
1582:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_Start();
 2015              		.loc 1 1582 0
 2016 0060 FFF7FEFF 		bl	ResistiveTouch_1_ADC_Start
1583:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1584:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Restart the ADC conversion */
1585:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_StartConvert();
 2017              		.loc 1 1585 0
 2018 0064 FFF7FEFF 		bl	ResistiveTouch_1_ADC_StartConvert
1579:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
 2019              		.loc 1 1579 0
 2020 0068 03E0     		b	.L102
 2021              	.L105:
 2022 006a 02E0     		b	.L102
 2023              	.L103:
1586:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1587:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
1588:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else
1589:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
1590:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1591:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         CYASSERT(0u != 0u);
 2024              		.loc 1 1591 0 discriminator 1
 2025 006c 0020     		movs	r0, #0
 2026 006e FFF7FEFF 		bl	CyHalt
 2027              	.L102:
1592:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
1593:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 2028              		.loc 1 1593 0
 2029 0072 0837     		adds	r7, r7, #8
 2030              		.cfi_def_cfa_offset 8
 2031 0074 BD46     		mov	sp, r7
 2032              		.cfi_def_cfa_register 13
 2033              		@ sp needed
 2034 0076 80BD     		pop	{r7, pc}
 2035              	.L108:
 2036              		.align	2
 2037              	.L107:
 2038 0078 00000000 		.word	ResistiveTouch_1_ADC_initVar
 2039 007c 00000000 		.word	ResistiveTouch_1_ADC_started
 2040 0080 00000000 		.word	ResistiveTouch_1_ADC_Config
 2041 0084 0E4E0040 		.word	1073761806
 2042 0088 04000000 		.word	ResistiveTouch_1_ADC_gcor
 2043 008c 0C4E0040 		.word	1073761804
 2044              		.cfi_endproc
 2045              	.LFE20:
 2046              		.size	ResistiveTouch_1_ADC_SelectConfiguration, .-ResistiveTouch_1_ADC_SelectConfiguration
 2047              		.section	.text.ResistiveTouch_1_ADC_GainCompensation,"ax",%progbits
 2048              		.align	2
 2049              		.thumb
 2050              		.thumb_func
 2051              		.type	ResistiveTouch_1_ADC_GainCompensation, %function
 2052              	ResistiveTouch_1_ADC_GainCompensation:
 2053              	.LFB21:
1594:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 65


1595:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1596:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
1597:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_GainCompensation
1598:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
1599:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1600:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
1601:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This API calculates the trim value and then store this to gcor structure.
1602:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1603:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
1604:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  inputRange:  input range for which trim value is to be calculated.
1605:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1606:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *                 conversion  mode.
1607:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1608:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                      conversion mode.
1609:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1610:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  config:      Specifies the configuration number
1611:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *               Valid range: 1..4
1612:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1613:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
1614:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
1615:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1616:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
1617:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** static void ResistiveTouch_1_ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 ide
1618:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                               uint8 resolution, uint8 config) 
1619:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 2054              		.loc 1 1619 0
 2055              		.cfi_startproc
 2056              		@ args = 4, pretend = 0, frame = 24
 2057              		@ frame_needed = 1, uses_anonymous_args = 0
 2058 0000 90B5     		push	{r4, r7, lr}
 2059              		.cfi_def_cfa_offset 12
 2060              		.cfi_offset 4, -12
 2061              		.cfi_offset 7, -8
 2062              		.cfi_offset 14, -4
 2063 0002 87B0     		sub	sp, sp, #28
 2064              		.cfi_def_cfa_offset 40
 2065 0004 00AF     		add	r7, sp, #0
 2066              		.cfi_def_cfa_register 7
 2067 0006 0446     		mov	r4, r0
 2068 0008 0846     		mov	r0, r1
 2069 000a 1146     		mov	r1, r2
 2070 000c 1A46     		mov	r2, r3
 2071 000e 2346     		mov	r3, r4
 2072 0010 FB71     		strb	r3, [r7, #7]
 2073 0012 0346     		mov	r3, r0	@ movhi
 2074 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 2075 0016 0B46     		mov	r3, r1	@ movhi
 2076 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 2077 001a 1346     		mov	r3, r2
 2078 001c BB71     		strb	r3, [r7, #6]
1620:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     int8 flash;
1621:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 	int32 normalised;
1622:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 	uint16 gcorValue;
1623:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint32 gcorTmp;
1624:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1625:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     if((config > 0u) && (config <= ResistiveTouch_1_ADC_DEFAULT_NUM_CONFIGS))
 2079              		.loc 1 1625 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 66


 2080 001e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2081 0022 002B     		cmp	r3, #0
 2082 0024 00F08A80 		beq	.L110
 2083              		.loc 1 1625 0 is_stmt 0 discriminator 1
 2084 0028 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2085 002c 012B     		cmp	r3, #1
 2086 002e 00F28580 		bhi	.L110
1626:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
1627:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         switch(inputRange)
 2087              		.loc 1 1627 0 is_stmt 1
 2088 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2089 0034 013B     		subs	r3, r3, #1
 2090 0036 092B     		cmp	r3, #9
 2091 0038 4AD8     		bhi	.L111
 2092 003a 01A2     		adr	r2, .L113
 2093 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2094              		.p2align 2
 2095              	.L113:
 2096 0040 69000000 		.word	.L112+1
 2097 0044 D1000000 		.word	.L111+1
 2098 0048 D1000000 		.word	.L111+1
 2099 004c 69000000 		.word	.L112+1
 2100 0050 D1000000 		.word	.L111+1
 2101 0054 D1000000 		.word	.L111+1
 2102 0058 83000000 		.word	.L114+1
 2103 005c 9D000000 		.word	.L115+1
 2104 0060 D1000000 		.word	.L111+1
 2105 0064 B7000000 		.word	.L116+1
 2106              		.p2align 1
 2107              	.L112:
1628:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1629:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case ResistiveTouch_1_ADC_IR_VNEG_VREF_DIFF:
1630:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case ResistiveTouch_1_ADC_IR_VSSA_TO_2VREF:
1631:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 /* Normalize the flash Value */
1632:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 if(resolution > 15u)
 2108              		.loc 1 1632 0
 2109 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2110 006a 0F2B     		cmp	r3, #15
 2111 006c 04D9     		bls	.L117
1633:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 {
1634:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     flash = ResistiveTouch_1_ADC_DEC_TRIM_VREF_DIFF_16_20;
 2112              		.loc 1 1634 0
 2113 006e 364B     		ldr	r3, .L129
 2114 0070 1B78     		ldrb	r3, [r3]
 2115 0072 DBB2     		uxtb	r3, r3
 2116 0074 FB75     		strb	r3, [r7, #23]
1635:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
1636:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 else
1637:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 {
1638:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     flash = ResistiveTouch_1_ADC_DEC_TRIM_VREF_DIFF_8_15;
1639:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
1640:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
 2117              		.loc 1 1640 0
 2118 0076 2EE0     		b	.L119
 2119              	.L117:
1638:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
 2120              		.loc 1 1638 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 67


 2121 0078 344B     		ldr	r3, .L129+4
 2122 007a 1B78     		ldrb	r3, [r3]
 2123 007c DBB2     		uxtb	r3, r3
 2124 007e FB75     		strb	r3, [r7, #23]
 2125              		.loc 1 1640 0
 2126 0080 29E0     		b	.L119
 2127              	.L114:
1641:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1642:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case ResistiveTouch_1_ADC_IR_VNEG_VREF_2_DIFF:
1643:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 /* Normalize the flash Value */
1644:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 if(resolution > 15u)
 2128              		.loc 1 1644 0
 2129 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2130 0084 0F2B     		cmp	r3, #15
 2131 0086 04D9     		bls	.L120
1645:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 {
1646:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     flash = ResistiveTouch_1_ADC_DEC_TRIM_VREF_2_DIFF_16_20;
 2132              		.loc 1 1646 0
 2133 0088 314B     		ldr	r3, .L129+8
 2134 008a 1B78     		ldrb	r3, [r3]
 2135 008c DBB2     		uxtb	r3, r3
 2136 008e FB75     		strb	r3, [r7, #23]
1647:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
1648:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 else
1649:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 {
1650:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     flash = ResistiveTouch_1_ADC_DEC_TRIM_VREF_2_DIFF_8_15;
1651:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
1652:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
 2137              		.loc 1 1652 0
 2138 0090 21E0     		b	.L119
 2139              	.L120:
1650:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
 2140              		.loc 1 1650 0
 2141 0092 304B     		ldr	r3, .L129+12
 2142 0094 1B78     		ldrb	r3, [r3]
 2143 0096 DBB2     		uxtb	r3, r3
 2144 0098 FB75     		strb	r3, [r7, #23]
 2145              		.loc 1 1652 0
 2146 009a 1CE0     		b	.L119
 2147              	.L115:
1653:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1654:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case ResistiveTouch_1_ADC_IR_VNEG_VREF_4_DIFF:
1655:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 /* Normalize the flash Value */
1656:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 if(resolution > 15u)
 2148              		.loc 1 1656 0
 2149 009c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2150 009e 0F2B     		cmp	r3, #15
 2151 00a0 04D9     		bls	.L122
1657:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 {
1658:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     flash = ResistiveTouch_1_ADC_DEC_TRIM_VREF_4_DIFF_16_20;
 2152              		.loc 1 1658 0
 2153 00a2 2D4B     		ldr	r3, .L129+16
 2154 00a4 1B78     		ldrb	r3, [r3]
 2155 00a6 DBB2     		uxtb	r3, r3
 2156 00a8 FB75     		strb	r3, [r7, #23]
1659:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
1660:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 else
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 68


1661:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 {
1662:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     flash = ResistiveTouch_1_ADC_DEC_TRIM_VREF_4_DIFF_8_15;
1663:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
1664:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
 2157              		.loc 1 1664 0
 2158 00aa 14E0     		b	.L119
 2159              	.L122:
1662:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
 2160              		.loc 1 1662 0
 2161 00ac 2B4B     		ldr	r3, .L129+20
 2162 00ae 1B78     		ldrb	r3, [r3]
 2163 00b0 DBB2     		uxtb	r3, r3
 2164 00b2 FB75     		strb	r3, [r7, #23]
 2165              		.loc 1 1664 0
 2166 00b4 0FE0     		b	.L119
 2167              	.L116:
1665:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1666:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             case ResistiveTouch_1_ADC_IR_VNEG_VREF_16_DIFF:
1667:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 /* Normalize the flash Value */
1668:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 if(resolution > 15u)
 2168              		.loc 1 1668 0
 2169 00b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2170 00b8 0F2B     		cmp	r3, #15
 2171 00ba 04D9     		bls	.L124
1669:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 {
1670:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     flash = ResistiveTouch_1_ADC_DEC_TRIM_VREF_16_DIFF_16_20;
 2172              		.loc 1 1670 0
 2173 00bc 284B     		ldr	r3, .L129+24
 2174 00be 1B78     		ldrb	r3, [r3]
 2175 00c0 DBB2     		uxtb	r3, r3
 2176 00c2 FB75     		strb	r3, [r7, #23]
1671:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
1672:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 else
1673:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 {
1674:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                     flash = ResistiveTouch_1_ADC_DEC_TRIM_VREF_16_DIFF_8_15;
1675:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
1676:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
 2177              		.loc 1 1676 0
 2178 00c4 07E0     		b	.L119
 2179              	.L124:
1674:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 }
 2180              		.loc 1 1674 0
 2181 00c6 274B     		ldr	r3, .L129+28
 2182 00c8 1B78     		ldrb	r3, [r3]
 2183 00ca DBB2     		uxtb	r3, r3
 2184 00cc FB75     		strb	r3, [r7, #23]
 2185              		.loc 1 1676 0
 2186 00ce 02E0     		b	.L119
 2187              	.L111:
1677:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1678:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             default:
1679:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 flash = 0;
 2188              		.loc 1 1679 0
 2189 00d0 0023     		movs	r3, #0
 2190 00d2 FB75     		strb	r3, [r7, #23]
1680:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****                 break;
 2191              		.loc 1 1680 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 69


 2192 00d4 00BF     		nop
 2193              	.L119:
1681:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1682:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1683:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Add two values */
1684:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 2194              		.loc 1 1684 0
 2195 00d6 BA88     		ldrh	r2, [r7, #4]
 2196 00d8 97F91730 		ldrsb	r3, [r7, #23]
 2197 00dc 5B01     		lsls	r3, r3, #5
 2198 00de 1344     		add	r3, r3, r2
 2199 00e0 3B61     		str	r3, [r7, #16]
1685:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 2200              		.loc 1 1685 0
 2201 00e2 7B88     		ldrh	r3, [r7, #2]
 2202 00e4 3A69     		ldr	r2, [r7, #16]
 2203 00e6 02FB03F3 		mul	r3, r2, r3
 2204 00ea FB60     		str	r3, [r7, #12]
1686:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         gcorValue = (uint16)(gcorTmp / ResistiveTouch_1_ADC_IDEAL_GAIN_CONST);
 2205              		.loc 1 1686 0
 2206 00ec FB68     		ldr	r3, [r7, #12]
 2207 00ee DB0B     		lsrs	r3, r3, #15
 2208 00f0 BB82     		strh	r3, [r7, #20]	@ movhi
1687:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1688:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         if (resolution < (ResistiveTouch_1_ADC_MAX_GVAL - 1u))
 2209              		.loc 1 1688 0
 2210 00f2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2211 00f4 0D2B     		cmp	r3, #13
 2212 00f6 11D8     		bhi	.L126
1689:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1690:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             gcorValue = (gcorValue >> (ResistiveTouch_1_ADC_MAX_GVAL - (resolution + 1u)));
 2213              		.loc 1 1690 0
 2214 00f8 BB8A     		ldrh	r3, [r7, #20]
 2215 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 2216 00fc C2F10E02 		rsb	r2, r2, #14
 2217 0100 1341     		asrs	r3, r3, r2
 2218 0102 BB82     		strh	r3, [r7, #20]	@ movhi
1691:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_gcor[config - 1u].gval = (resolution + 1u);
 2219              		.loc 1 1691 0
 2220 0104 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2221 0108 013B     		subs	r3, r3, #1
 2222 010a BA79     		ldrb	r2, [r7, #6]
 2223 010c 0132     		adds	r2, r2, #1
 2224 010e D1B2     		uxtb	r1, r2
 2225 0110 154A     		ldr	r2, .L129+32
 2226 0112 9B00     		lsls	r3, r3, #2
 2227 0114 1344     		add	r3, r3, r2
 2228 0116 0A46     		mov	r2, r1
 2229 0118 9A70     		strb	r2, [r3, #2]
 2230 011a 07E0     		b	.L127
 2231              	.L126:
1692:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1693:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         else
1694:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         {
1695:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             /* Use all 16 bits */
1696:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****             ResistiveTouch_1_ADC_gcor[config - 1u].gval = ResistiveTouch_1_ADC_MAX_GVAL;
 2232              		.loc 1 1696 0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 70


 2233 011c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2234 0120 013B     		subs	r3, r3, #1
 2235 0122 114A     		ldr	r2, .L129+32
 2236 0124 9B00     		lsls	r3, r3, #2
 2237 0126 1344     		add	r3, r3, r2
 2238 0128 0F22     		movs	r2, #15
 2239 012a 9A70     		strb	r2, [r3, #2]
 2240              	.L127:
1697:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         }
1698:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1699:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Save the gain correction register value */
1700:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         ResistiveTouch_1_ADC_gcor[config - 1u].gcor = gcorValue;
 2241              		.loc 1 1700 0
 2242 012c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2243 0130 013B     		subs	r3, r3, #1
 2244 0132 0D49     		ldr	r1, .L129+32
 2245 0134 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 2246 0136 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 2247 013a 02E0     		b	.L109
 2248              	.L110:
1701:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
1702:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     else
1703:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     {
1704:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1705:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****         CYASSERT(0u != 0u);
 2249              		.loc 1 1705 0 discriminator 1
 2250 013c 0020     		movs	r0, #0
 2251 013e FFF7FEFF 		bl	CyHalt
 2252              	.L109:
1706:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     }
1707:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 2253              		.loc 1 1707 0
 2254 0142 1C37     		adds	r7, r7, #28
 2255              		.cfi_def_cfa_offset 12
 2256 0144 BD46     		mov	sp, r7
 2257              		.cfi_def_cfa_register 13
 2258              		@ sp needed
 2259 0146 90BD     		pop	{r4, r7, pc}
 2260              	.L130:
 2261              		.align	2
 2262              	.L129:
 2263 0148 18010049 		.word	1224737048
 2264 014c 1C010049 		.word	1224737052
 2265 0150 19010049 		.word	1224737049
 2266 0154 1D010049 		.word	1224737053
 2267 0158 1A010049 		.word	1224737050
 2268 015c 1E010049 		.word	1224737054
 2269 0160 1B010049 		.word	1224737051
 2270 0164 1F010049 		.word	1224737055
 2271 0168 04000000 		.word	ResistiveTouch_1_ADC_gcor
 2272              		.cfi_endproc
 2273              	.LFE21:
 2274              		.size	ResistiveTouch_1_ADC_GainCompensation, .-ResistiveTouch_1_ADC_GainCompensation
 2275              		.section	.text.ResistiveTouch_1_ADC_SetDSMRef0Reg,"ax",%progbits
 2276              		.align	2
 2277              		.thumb
 2278              		.thumb_func
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 71


 2279              		.type	ResistiveTouch_1_ADC_SetDSMRef0Reg, %function
 2280              	ResistiveTouch_1_ADC_SetDSMRef0Reg:
 2281              	.LFB22:
1708:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1709:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1710:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /******************************************************************************
1711:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_SetDSMRef0Reg(uint8)
1712:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ******************************************************************************
1713:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1714:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
1715:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1716:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1717:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
1718:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  value:  Value to be written to DSM_REF0 register.
1719:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1720:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
1721:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
1722:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1723:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ******************************************************************************/
1724:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** static void ResistiveTouch_1_ADC_SetDSMRef0Reg(uint8 value) 
1725:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 2282              		.loc 1 1725 0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 16
 2285              		@ frame_needed = 1, uses_anonymous_args = 0
 2286 0000 80B5     		push	{r7, lr}
 2287              		.cfi_def_cfa_offset 8
 2288              		.cfi_offset 7, -8
 2289              		.cfi_offset 14, -4
 2290 0002 84B0     		sub	sp, sp, #16
 2291              		.cfi_def_cfa_offset 24
 2292 0004 00AF     		add	r7, sp, #0
 2293              		.cfi_def_cfa_register 7
 2294 0006 0346     		mov	r3, r0
 2295 0008 FB71     		strb	r3, [r7, #7]
1726:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     uint8 enableInterrupts;
1727:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 2296              		.loc 1 1727 0
 2297 000a FFF7FEFF 		bl	CyEnterCriticalSection
 2298 000e 0346     		mov	r3, r0
 2299 0010 FB73     		strb	r3, [r7, #15]
1728:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1729:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1730:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR4_REG |= (ResistiveTouch_1_ADC_IGNORE_PRESA1 | ResistiveTouch_1_AD
 2300              		.loc 1 1730 0
 2301 0012 164A     		ldr	r2, .L132
 2302 0014 154B     		ldr	r3, .L132
 2303 0016 1B78     		ldrb	r3, [r3]
 2304 0018 DBB2     		uxtb	r3, r3
 2305 001a 43F00303 		orr	r3, r3, #3
 2306 001e DBB2     		uxtb	r3, r3
 2307 0020 1370     		strb	r3, [r2]
1731:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR5_REG |= (ResistiveTouch_1_ADC_IGNORE_PRESA2 | ResistiveTouch_1_AD
 2308              		.loc 1 1731 0
 2309 0022 134A     		ldr	r2, .L132+4
 2310 0024 124B     		ldr	r3, .L132+4
 2311 0026 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 72


 2312 0028 DBB2     		uxtb	r3, r3
 2313 002a 43F00303 		orr	r3, r3, #3
 2314 002e DBB2     		uxtb	r3, r3
 2315 0030 1370     		strb	r3, [r2]
1732:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DSM_REF0_REG = value;
 2316              		.loc 1 1732 0
 2317 0032 104A     		ldr	r2, .L132+8
 2318 0034 FB79     		ldrb	r3, [r7, #7]
 2319 0036 1370     		strb	r3, [r2]
1733:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1734:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Wait for 3 microseconds */
1735:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     CyDelayUs(ResistiveTouch_1_ADC_PRES_DELAY_TIME);
 2320              		.loc 1 1735 0
 2321 0038 0320     		movs	r0, #3
 2322 003a FFF7FEFF 		bl	CyDelayUs
1736:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Enable the press circuit */
1737:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR4_REG &= (uint8)~(ResistiveTouch_1_ADC_IGNORE_PRESA1 | ResistiveTo
 2323              		.loc 1 1737 0
 2324 003e 0B4A     		ldr	r2, .L132
 2325 0040 0A4B     		ldr	r3, .L132
 2326 0042 1B78     		ldrb	r3, [r3]
 2327 0044 DBB2     		uxtb	r3, r3
 2328 0046 23F00303 		bic	r3, r3, #3
 2329 004a DBB2     		uxtb	r3, r3
 2330 004c 1370     		strb	r3, [r2]
1738:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_RESET_CR5_REG &= (uint8)~(ResistiveTouch_1_ADC_IGNORE_PRESA2 | ResistiveTo
 2331              		.loc 1 1738 0
 2332 004e 084A     		ldr	r2, .L132+4
 2333 0050 074B     		ldr	r3, .L132+4
 2334 0052 1B78     		ldrb	r3, [r3]
 2335 0054 DBB2     		uxtb	r3, r3
 2336 0056 23F00303 		bic	r3, r3, #3
 2337 005a DBB2     		uxtb	r3, r3
 2338 005c 1370     		strb	r3, [r2]
1739:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1740:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 2339              		.loc 1 1740 0
 2340 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2341 0060 1846     		mov	r0, r3
 2342 0062 FFF7FEFF 		bl	CyExitCriticalSection
1741:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 2343              		.loc 1 1741 0
 2344 0066 1037     		adds	r7, r7, #16
 2345              		.cfi_def_cfa_offset 8
 2346 0068 BD46     		mov	sp, r7
 2347              		.cfi_def_cfa_register 13
 2348              		@ sp needed
 2349 006a 80BD     		pop	{r7, pc}
 2350              	.L133:
 2351              		.align	2
 2352              	.L132:
 2353 006c F8460040 		.word	1073759992
 2354 0070 F9460040 		.word	1073759993
 2355 0074 92580040 		.word	1073764498
 2356              		.cfi_endproc
 2357              	.LFE22:
 2358              		.size	ResistiveTouch_1_ADC_SetDSMRef0Reg, .-ResistiveTouch_1_ADC_SetDSMRef0Reg
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 73


 2359              		.section	.text.ResistiveTouch_1_ADC_Read8,"ax",%progbits
 2360              		.align	2
 2361              		.global	ResistiveTouch_1_ADC_Read8
 2362              		.thumb
 2363              		.thumb_func
 2364              		.type	ResistiveTouch_1_ADC_Read8, %function
 2365              	ResistiveTouch_1_ADC_Read8:
 2366              	.LFB23:
1742:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1743:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1744:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
1745:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_Read8
1746:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
1747:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1748:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
1749:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This function simplifies getting results from the ADC when only a
1750:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  single reading is required. When called, it will start ADC
1751:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1752:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  conversion and return the result. This is a blocking function and will
1753:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  not return until the result is ready.
1754:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1755:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
1756:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
1757:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1758:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
1759:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int8:  ADC result.
1760:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1761:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
1762:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** int8 ResistiveTouch_1_ADC_Read8(void) 
1763:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 2367              		.loc 1 1763 0
 2368              		.cfi_startproc
 2369              		@ args = 0, pretend = 0, frame = 8
 2370              		@ frame_needed = 1, uses_anonymous_args = 0
 2371 0000 80B5     		push	{r7, lr}
 2372              		.cfi_def_cfa_offset 8
 2373              		.cfi_offset 7, -8
 2374              		.cfi_offset 14, -4
 2375 0002 82B0     		sub	sp, sp, #8
 2376              		.cfi_def_cfa_offset 16
 2377 0004 00AF     		add	r7, sp, #0
 2378              		.cfi_def_cfa_register 7
1764:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     int8 result;
1765:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1766:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Clear pending conversion done status */
1767:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DEC_SR_REG |= ResistiveTouch_1_ADC_DEC_INTR_CLEAR;
 2379              		.loc 1 1767 0
 2380 0006 0C4A     		ldr	r2, .L136
 2381 0008 0B4B     		ldr	r3, .L136
 2382 000a 1B78     		ldrb	r3, [r3]
 2383 000c DBB2     		uxtb	r3, r3
 2384 000e 43F00403 		orr	r3, r3, #4
 2385 0012 DBB2     		uxtb	r3, r3
 2386 0014 1370     		strb	r3, [r2]
1768:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_StartConvert();
 2387              		.loc 1 1768 0
 2388 0016 FFF7FEFF 		bl	ResistiveTouch_1_ADC_StartConvert
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 74


1769:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     (void)ResistiveTouch_1_ADC_IsEndConversion(ResistiveTouch_1_ADC_WAIT_FOR_RESULT);
 2389              		.loc 1 1769 0
 2390 001a 0020     		movs	r0, #0
 2391 001c FFF7FEFF 		bl	ResistiveTouch_1_ADC_IsEndConversion
1770:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****      result = ResistiveTouch_1_ADC_GetResult8();
 2392              		.loc 1 1770 0
 2393 0020 FFF7FEFF 		bl	ResistiveTouch_1_ADC_GetResult8
 2394 0024 0346     		mov	r3, r0
 2395 0026 FB71     		strb	r3, [r7, #7]
1771:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_StopConvert();
 2396              		.loc 1 1771 0
 2397 0028 FFF7FEFF 		bl	ResistiveTouch_1_ADC_StopConvert
1772:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     
1773:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****      return(result);
 2398              		.loc 1 1773 0
 2399 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2400 002e 5BB2     		sxtb	r3, r3
1774:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 2401              		.loc 1 1774 0
 2402 0030 1846     		mov	r0, r3
 2403 0032 0837     		adds	r7, r7, #8
 2404              		.cfi_def_cfa_offset 8
 2405 0034 BD46     		mov	sp, r7
 2406              		.cfi_def_cfa_register 13
 2407              		@ sp needed
 2408 0036 80BD     		pop	{r7, pc}
 2409              	.L137:
 2410              		.align	2
 2411              	.L136:
 2412 0038 014E0040 		.word	1073761793
 2413              		.cfi_endproc
 2414              	.LFE23:
 2415              		.size	ResistiveTouch_1_ADC_Read8, .-ResistiveTouch_1_ADC_Read8
 2416              		.section	.text.ResistiveTouch_1_ADC_Read16,"ax",%progbits
 2417              		.align	2
 2418              		.global	ResistiveTouch_1_ADC_Read16
 2419              		.thumb
 2420              		.thumb_func
 2421              		.type	ResistiveTouch_1_ADC_Read16, %function
 2422              	ResistiveTouch_1_ADC_Read16:
 2423              	.LFB24:
1775:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1776:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1777:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
1778:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_Read16
1779:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
1780:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1781:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
1782:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This function simplifies getting results from the ADC when only a
1783:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  single reading is required. When called, it will start ADC
1784:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1785:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  conversion and return the result. This is a blocking function and will
1786:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  not return until the result is ready.
1787:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1788:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
1789:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *   void
1790:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 75


1791:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
1792:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int16:  ADC result.
1793:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1794:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
1795:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** int16 ResistiveTouch_1_ADC_Read16(void) 
1796:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 2424              		.loc 1 1796 0
 2425              		.cfi_startproc
 2426              		@ args = 0, pretend = 0, frame = 8
 2427              		@ frame_needed = 1, uses_anonymous_args = 0
 2428 0000 80B5     		push	{r7, lr}
 2429              		.cfi_def_cfa_offset 8
 2430              		.cfi_offset 7, -8
 2431              		.cfi_offset 14, -4
 2432 0002 82B0     		sub	sp, sp, #8
 2433              		.cfi_def_cfa_offset 16
 2434 0004 00AF     		add	r7, sp, #0
 2435              		.cfi_def_cfa_register 7
1797:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     int16 result;
1798:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1799:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Clear pending conversion done status */
1800:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DEC_SR_REG |= ResistiveTouch_1_ADC_DEC_INTR_CLEAR;
 2436              		.loc 1 1800 0
 2437 0006 0C4A     		ldr	r2, .L140
 2438 0008 0B4B     		ldr	r3, .L140
 2439 000a 1B78     		ldrb	r3, [r3]
 2440 000c DBB2     		uxtb	r3, r3
 2441 000e 43F00403 		orr	r3, r3, #4
 2442 0012 DBB2     		uxtb	r3, r3
 2443 0014 1370     		strb	r3, [r2]
1801:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_StartConvert();
 2444              		.loc 1 1801 0
 2445 0016 FFF7FEFF 		bl	ResistiveTouch_1_ADC_StartConvert
1802:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     (void)ResistiveTouch_1_ADC_IsEndConversion(ResistiveTouch_1_ADC_WAIT_FOR_RESULT);
 2446              		.loc 1 1802 0
 2447 001a 0020     		movs	r0, #0
 2448 001c FFF7FEFF 		bl	ResistiveTouch_1_ADC_IsEndConversion
1803:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****      result = ResistiveTouch_1_ADC_GetResult16();
 2449              		.loc 1 1803 0
 2450 0020 FFF7FEFF 		bl	ResistiveTouch_1_ADC_GetResult16
 2451 0024 0346     		mov	r3, r0
 2452 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1804:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_StopConvert();
 2453              		.loc 1 1804 0
 2454 0028 FFF7FEFF 		bl	ResistiveTouch_1_ADC_StopConvert
1805:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     
1806:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****      return(result);
 2455              		.loc 1 1806 0
 2456 002c FB88     		ldrh	r3, [r7, #6]
 2457 002e 1BB2     		sxth	r3, r3
1807:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 2458              		.loc 1 1807 0
 2459 0030 1846     		mov	r0, r3
 2460 0032 0837     		adds	r7, r7, #8
 2461              		.cfi_def_cfa_offset 8
 2462 0034 BD46     		mov	sp, r7
 2463              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 76


 2464              		@ sp needed
 2465 0036 80BD     		pop	{r7, pc}
 2466              	.L141:
 2467              		.align	2
 2468              	.L140:
 2469 0038 014E0040 		.word	1073761793
 2470              		.cfi_endproc
 2471              	.LFE24:
 2472              		.size	ResistiveTouch_1_ADC_Read16, .-ResistiveTouch_1_ADC_Read16
 2473              		.section	.text.ResistiveTouch_1_ADC_Read32,"ax",%progbits
 2474              		.align	2
 2475              		.global	ResistiveTouch_1_ADC_Read32
 2476              		.thumb
 2477              		.thumb_func
 2478              		.type	ResistiveTouch_1_ADC_Read32, %function
 2479              	ResistiveTouch_1_ADC_Read32:
 2480              	.LFB25:
1808:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1809:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** 
1810:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** /*******************************************************************************
1811:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Function Name: ResistiveTouch_1_ADC_Read32
1812:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** ********************************************************************************
1813:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1814:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Summary:
1815:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  This function simplifies getting results from the ADC when only a
1816:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  single reading is required. When called, it will start ADC
1817:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1818:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  conversion and return the result. This is a blocking function and will
1819:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  not return until the result is ready.
1820:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1821:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Parameters:
1822:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  None
1823:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1824:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** * Return:
1825:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *  int32: ADC result.
1826:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *
1827:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** *******************************************************************************/
1828:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** int32 ResistiveTouch_1_ADC_Read32(void) 
1829:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** {
 2481              		.loc 1 1829 0
 2482              		.cfi_startproc
 2483              		@ args = 0, pretend = 0, frame = 8
 2484              		@ frame_needed = 1, uses_anonymous_args = 0
 2485 0000 80B5     		push	{r7, lr}
 2486              		.cfi_def_cfa_offset 8
 2487              		.cfi_offset 7, -8
 2488              		.cfi_offset 14, -4
 2489 0002 82B0     		sub	sp, sp, #8
 2490              		.cfi_def_cfa_offset 16
 2491 0004 00AF     		add	r7, sp, #0
 2492              		.cfi_def_cfa_register 7
1830:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     int32 result;
1831:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     
1832:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     /* Clear pending conversion done status */
1833:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_DEC_SR_REG |= ResistiveTouch_1_ADC_DEC_INTR_CLEAR;
 2493              		.loc 1 1833 0
 2494 0006 0B4A     		ldr	r2, .L144
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 77


 2495 0008 0A4B     		ldr	r3, .L144
 2496 000a 1B78     		ldrb	r3, [r3]
 2497 000c DBB2     		uxtb	r3, r3
 2498 000e 43F00403 		orr	r3, r3, #4
 2499 0012 DBB2     		uxtb	r3, r3
 2500 0014 1370     		strb	r3, [r2]
1834:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_StartConvert();
 2501              		.loc 1 1834 0
 2502 0016 FFF7FEFF 		bl	ResistiveTouch_1_ADC_StartConvert
1835:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     (void)ResistiveTouch_1_ADC_IsEndConversion(ResistiveTouch_1_ADC_WAIT_FOR_RESULT);
 2503              		.loc 1 1835 0
 2504 001a 0020     		movs	r0, #0
 2505 001c FFF7FEFF 		bl	ResistiveTouch_1_ADC_IsEndConversion
1836:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****      result = ResistiveTouch_1_ADC_GetResult32();
 2506              		.loc 1 1836 0
 2507 0020 FFF7FEFF 		bl	ResistiveTouch_1_ADC_GetResult32
 2508 0024 7860     		str	r0, [r7, #4]
1837:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     ResistiveTouch_1_ADC_StopConvert();
 2509              		.loc 1 1837 0
 2510 0026 FFF7FEFF 		bl	ResistiveTouch_1_ADC_StopConvert
1838:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****     
1839:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c ****      return(result);
 2511              		.loc 1 1839 0
 2512 002a 7B68     		ldr	r3, [r7, #4]
1840:Generated_Source\PSoC5/ResistiveTouch_1_ADC.c **** }
 2513              		.loc 1 1840 0
 2514 002c 1846     		mov	r0, r3
 2515 002e 0837     		adds	r7, r7, #8
 2516              		.cfi_def_cfa_offset 8
 2517 0030 BD46     		mov	sp, r7
 2518              		.cfi_def_cfa_register 13
 2519              		@ sp needed
 2520 0032 80BD     		pop	{r7, pc}
 2521              	.L145:
 2522              		.align	2
 2523              	.L144:
 2524 0034 014E0040 		.word	1073761793
 2525              		.cfi_endproc
 2526              	.LFE25:
 2527              		.size	ResistiveTouch_1_ADC_Read32, .-ResistiveTouch_1_ADC_Read32
 2528              		.text
 2529              	.Letext0:
 2530              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2531              		.file 3 "Generated_Source\\PSoC5\\ResistiveTouch_1_ADC.h"
 2532              		.section	.debug_info,"",%progbits
 2533              	.Ldebug_info0:
 2534 0000 1A070000 		.4byte	0x71a
 2535 0004 0400     		.2byte	0x4
 2536 0006 00000000 		.4byte	.Ldebug_abbrev0
 2537 000a 04       		.byte	0x4
 2538 000b 01       		.uleb128 0x1
 2539 000c 2F040000 		.4byte	.LASF89
 2540 0010 01       		.byte	0x1
 2541 0011 C8030000 		.4byte	.LASF90
 2542 0015 F3020000 		.4byte	.LASF91
 2543 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2544 001d 00000000 		.4byte	0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 78


 2545 0021 00000000 		.4byte	.Ldebug_line0
 2546 0025 02       		.uleb128 0x2
 2547 0026 01       		.byte	0x1
 2548 0027 06       		.byte	0x6
 2549 0028 1B010000 		.4byte	.LASF0
 2550 002c 02       		.uleb128 0x2
 2551 002d 01       		.byte	0x1
 2552 002e 08       		.byte	0x8
 2553 002f 5F050000 		.4byte	.LASF1
 2554 0033 02       		.uleb128 0x2
 2555 0034 02       		.byte	0x2
 2556 0035 05       		.byte	0x5
 2557 0036 92050000 		.4byte	.LASF2
 2558 003a 02       		.uleb128 0x2
 2559 003b 02       		.byte	0x2
 2560 003c 07       		.byte	0x7
 2561 003d 6B060000 		.4byte	.LASF3
 2562 0041 02       		.uleb128 0x2
 2563 0042 04       		.byte	0x4
 2564 0043 05       		.byte	0x5
 2565 0044 97010000 		.4byte	.LASF4
 2566 0048 02       		.uleb128 0x2
 2567 0049 04       		.byte	0x4
 2568 004a 07       		.byte	0x7
 2569 004b 98020000 		.4byte	.LASF5
 2570 004f 02       		.uleb128 0x2
 2571 0050 08       		.byte	0x8
 2572 0051 05       		.byte	0x5
 2573 0052 0D010000 		.4byte	.LASF6
 2574 0056 02       		.uleb128 0x2
 2575 0057 08       		.byte	0x8
 2576 0058 07       		.byte	0x7
 2577 0059 D7000000 		.4byte	.LASF7
 2578 005d 03       		.uleb128 0x3
 2579 005e 04       		.byte	0x4
 2580 005f 05       		.byte	0x5
 2581 0060 696E7400 		.ascii	"int\000"
 2582 0064 02       		.uleb128 0x2
 2583 0065 04       		.byte	0x4
 2584 0066 07       		.byte	0x7
 2585 0067 84020000 		.4byte	.LASF8
 2586 006b 04       		.uleb128 0x4
 2587 006c E2010000 		.4byte	.LASF9
 2588 0070 02       		.byte	0x2
 2589 0071 C2       		.byte	0xc2
 2590 0072 2C000000 		.4byte	0x2c
 2591 0076 04       		.uleb128 0x4
 2592 0077 00000000 		.4byte	.LASF10
 2593 007b 02       		.byte	0x2
 2594 007c C3       		.byte	0xc3
 2595 007d 3A000000 		.4byte	0x3a
 2596 0081 04       		.uleb128 0x4
 2597 0082 36020000 		.4byte	.LASF11
 2598 0086 02       		.byte	0x2
 2599 0087 C4       		.byte	0xc4
 2600 0088 48000000 		.4byte	0x48
 2601 008c 04       		.uleb128 0x4
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 79


 2602 008d 51030000 		.4byte	.LASF12
 2603 0091 02       		.byte	0x2
 2604 0092 C5       		.byte	0xc5
 2605 0093 25000000 		.4byte	0x25
 2606 0097 04       		.uleb128 0x4
 2607 0098 E6060000 		.4byte	.LASF13
 2608 009c 02       		.byte	0x2
 2609 009d C6       		.byte	0xc6
 2610 009e 33000000 		.4byte	0x33
 2611 00a2 04       		.uleb128 0x4
 2612 00a3 81010000 		.4byte	.LASF14
 2613 00a7 02       		.byte	0x2
 2614 00a8 C7       		.byte	0xc7
 2615 00a9 41000000 		.4byte	0x41
 2616 00ad 04       		.uleb128 0x4
 2617 00ae 1E040000 		.4byte	.LASF15
 2618 00b2 02       		.byte	0x2
 2619 00b3 C8       		.byte	0xc8
 2620 00b4 B8000000 		.4byte	0xb8
 2621 00b8 02       		.uleb128 0x2
 2622 00b9 04       		.byte	0x4
 2623 00ba 04       		.byte	0x4
 2624 00bb 13050000 		.4byte	.LASF16
 2625 00bf 02       		.uleb128 0x2
 2626 00c0 08       		.byte	0x8
 2627 00c1 04       		.byte	0x4
 2628 00c2 E8010000 		.4byte	.LASF17
 2629 00c6 02       		.uleb128 0x2
 2630 00c7 01       		.byte	0x1
 2631 00c8 08       		.byte	0x8
 2632 00c9 02060000 		.4byte	.LASF18
 2633 00cd 05       		.uleb128 0x5
 2634 00ce 42050000 		.4byte	.LASF19
 2635 00d2 02       		.byte	0x2
 2636 00d3 6C01     		.2byte	0x16c
 2637 00d5 D9000000 		.4byte	0xd9
 2638 00d9 06       		.uleb128 0x6
 2639 00da 6B000000 		.4byte	0x6b
 2640 00de 05       		.uleb128 0x5
 2641 00df DC010000 		.4byte	.LASF20
 2642 00e3 02       		.byte	0x2
 2643 00e4 6D01     		.2byte	0x16d
 2644 00e6 EA000000 		.4byte	0xea
 2645 00ea 06       		.uleb128 0x6
 2646 00eb 76000000 		.4byte	0x76
 2647 00ef 05       		.uleb128 0x5
 2648 00f0 F6030000 		.4byte	.LASF21
 2649 00f4 02       		.byte	0x2
 2650 00f5 6E01     		.2byte	0x16e
 2651 00f7 FB000000 		.4byte	0xfb
 2652 00fb 06       		.uleb128 0x6
 2653 00fc 81000000 		.4byte	0x81
 2654 0100 02       		.uleb128 0x2
 2655 0101 04       		.byte	0x4
 2656 0102 07       		.byte	0x7
 2657 0103 26040000 		.4byte	.LASF22
 2658 0107 07       		.uleb128 0x7
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 80


 2659 0108 04       		.byte	0x4
 2660 0109 03       		.byte	0x3
 2661 010a 2F       		.byte	0x2f
 2662 010b 28010000 		.4byte	0x128
 2663 010f 08       		.uleb128 0x8
 2664 0110 78000000 		.4byte	.LASF23
 2665 0114 03       		.byte	0x3
 2666 0115 31       		.byte	0x31
 2667 0116 76000000 		.4byte	0x76
 2668 011a 00       		.byte	0
 2669 011b 08       		.uleb128 0x8
 2670 011c 15060000 		.4byte	.LASF24
 2671 0120 03       		.byte	0x3
 2672 0121 32       		.byte	0x32
 2673 0122 6B000000 		.4byte	0x6b
 2674 0126 02       		.byte	0x2
 2675 0127 00       		.byte	0
 2676 0128 04       		.uleb128 0x4
 2677 0129 57000000 		.4byte	.LASF25
 2678 012d 03       		.byte	0x3
 2679 012e 33       		.byte	0x33
 2680 012f 07010000 		.4byte	0x107
 2681 0133 09       		.uleb128 0x9
 2682 0134 EC060000 		.4byte	.LASF28
 2683 0138 01       		.byte	0x1
 2684 0139 5B       		.byte	0x5b
 2685 013a 00000000 		.4byte	.LFB0
 2686 013e 1C010000 		.4byte	.LFE0-.LFB0
 2687 0142 01       		.uleb128 0x1
 2688 0143 9C       		.byte	0x9c
 2689 0144 0A       		.uleb128 0xa
 2690 0145 EF010000 		.4byte	.LASF30
 2691 0149 01       		.byte	0x1
 2692 014a B8       		.byte	0xb8
 2693 014b 00000000 		.4byte	.LFB1
 2694 014f 58010000 		.4byte	.LFE1-.LFB1
 2695 0153 01       		.uleb128 0x1
 2696 0154 9C       		.byte	0x9c
 2697 0155 76010000 		.4byte	0x176
 2698 0159 0B       		.uleb128 0xb
 2699 015a 0E060000 		.4byte	.LASF26
 2700 015e 01       		.byte	0x1
 2701 015f BA       		.byte	0xba
 2702 0160 6B000000 		.4byte	0x6b
 2703 0164 02       		.uleb128 0x2
 2704 0165 91       		.byte	0x91
 2705 0166 76       		.sleb128 -10
 2706 0167 0B       		.uleb128 0xb
 2707 0168 A6060000 		.4byte	.LASF27
 2708 016c 01       		.byte	0x1
 2709 016d BB       		.byte	0xbb
 2710 016e 6B000000 		.4byte	0x6b
 2711 0172 02       		.uleb128 0x2
 2712 0173 91       		.byte	0x91
 2713 0174 77       		.sleb128 -9
 2714 0175 00       		.byte	0
 2715 0176 0C       		.uleb128 0xc
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 81


 2716 0177 C1010000 		.4byte	.LASF29
 2717 017b 01       		.byte	0x1
 2718 017c 4901     		.2byte	0x149
 2719 017e 00000000 		.4byte	.LFB2
 2720 0182 30000000 		.4byte	.LFE2-.LFB2
 2721 0186 01       		.uleb128 0x1
 2722 0187 9C       		.byte	0x9c
 2723 0188 0D       		.uleb128 0xd
 2724 0189 27010000 		.4byte	.LASF31
 2725 018d 01       		.byte	0x1
 2726 018e 6A01     		.2byte	0x16a
 2727 0190 00000000 		.4byte	.LFB3
 2728 0194 7C010000 		.4byte	.LFE3-.LFB3
 2729 0198 01       		.uleb128 0x1
 2730 0199 9C       		.byte	0x9c
 2731 019a AE010000 		.4byte	0x1ae
 2732 019e 0E       		.uleb128 0xe
 2733 019f A6060000 		.4byte	.LASF27
 2734 01a3 01       		.byte	0x1
 2735 01a4 6C01     		.2byte	0x16c
 2736 01a6 6B000000 		.4byte	0x6b
 2737 01aa 02       		.uleb128 0x2
 2738 01ab 91       		.byte	0x91
 2739 01ac 77       		.sleb128 -9
 2740 01ad 00       		.byte	0
 2741 01ae 0F       		.uleb128 0xf
 2742 01af F0040000 		.4byte	.LASF32
 2743 01b3 01       		.byte	0x1
 2744 01b4 AD01     		.2byte	0x1ad
 2745 01b6 00000000 		.4byte	.LFB4
 2746 01ba 3C000000 		.4byte	.LFE4-.LFB4
 2747 01be 01       		.uleb128 0x1
 2748 01bf 9C       		.byte	0x9c
 2749 01c0 E3010000 		.4byte	0x1e3
 2750 01c4 10       		.uleb128 0x10
 2751 01c5 EB040000 		.4byte	.LASF35
 2752 01c9 01       		.byte	0x1
 2753 01ca AD01     		.2byte	0x1ad
 2754 01cc 6B000000 		.4byte	0x6b
 2755 01d0 02       		.uleb128 0x2
 2756 01d1 91       		.byte	0x91
 2757 01d2 6F       		.sleb128 -17
 2758 01d3 0E       		.uleb128 0xe
 2759 01d4 06070000 		.4byte	.LASF33
 2760 01d8 01       		.byte	0x1
 2761 01d9 AF01     		.2byte	0x1af
 2762 01db 6B000000 		.4byte	0x6b
 2763 01df 02       		.uleb128 0x2
 2764 01e0 91       		.byte	0x91
 2765 01e1 77       		.sleb128 -9
 2766 01e2 00       		.byte	0
 2767 01e3 0F       		.uleb128 0xf
 2768 01e4 FC030000 		.4byte	.LASF34
 2769 01e8 01       		.byte	0x1
 2770 01e9 D101     		.2byte	0x1d1
 2771 01eb 00000000 		.4byte	.LFB5
 2772 01ef 38000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 82


 2773 01f3 01       		.uleb128 0x1
 2774 01f4 9C       		.byte	0x9c
 2775 01f5 18020000 		.4byte	0x218
 2776 01f9 10       		.uleb128 0x10
 2777 01fa E1040000 		.4byte	.LASF36
 2778 01fe 01       		.byte	0x1
 2779 01ff D101     		.2byte	0x1d1
 2780 0201 6B000000 		.4byte	0x6b
 2781 0205 02       		.uleb128 0x2
 2782 0206 91       		.byte	0x91
 2783 0207 6F       		.sleb128 -17
 2784 0208 0E       		.uleb128 0xe
 2785 0209 06070000 		.4byte	.LASF33
 2786 020d 01       		.byte	0x1
 2787 020e D301     		.2byte	0x1d3
 2788 0210 6B000000 		.4byte	0x6b
 2789 0214 02       		.uleb128 0x2
 2790 0215 91       		.byte	0x91
 2791 0216 77       		.sleb128 -9
 2792 0217 00       		.byte	0
 2793 0218 11       		.uleb128 0x11
 2794 0219 0F000000 		.4byte	.LASF40
 2795 021d 01       		.byte	0x1
 2796 021e F901     		.2byte	0x1f9
 2797 0220 6B000000 		.4byte	0x6b
 2798 0224 00000000 		.4byte	.LFB6
 2799 0228 B4000000 		.4byte	.LFE6-.LFB6
 2800 022c 01       		.uleb128 0x1
 2801 022d 9C       		.byte	0x9c
 2802 022e 6F020000 		.4byte	0x26f
 2803 0232 10       		.uleb128 0x10
 2804 0233 DB060000 		.4byte	.LASF37
 2805 0237 01       		.byte	0x1
 2806 0238 F901     		.2byte	0x1f9
 2807 023a AD000000 		.4byte	0xad
 2808 023e 02       		.uleb128 0x2
 2809 023f 91       		.byte	0x91
 2810 0240 6C       		.sleb128 -20
 2811 0241 0E       		.uleb128 0xe
 2812 0242 06070000 		.4byte	.LASF33
 2813 0246 01       		.byte	0x1
 2814 0247 FB01     		.2byte	0x1fb
 2815 0249 76000000 		.4byte	0x76
 2816 024d 02       		.uleb128 0x2
 2817 024e 91       		.byte	0x91
 2818 024f 74       		.sleb128 -12
 2819 0250 0E       		.uleb128 0xe
 2820 0251 D4060000 		.4byte	.LASF38
 2821 0255 01       		.byte	0x1
 2822 0256 FC01     		.2byte	0x1fc
 2823 0258 6B000000 		.4byte	0x6b
 2824 025c 02       		.uleb128 0x2
 2825 025d 91       		.byte	0x91
 2826 025e 77       		.sleb128 -9
 2827 025f 0E       		.uleb128 0xe
 2828 0260 3F060000 		.4byte	.LASF39
 2829 0264 01       		.byte	0x1
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 83


 2830 0265 FD01     		.2byte	0x1fd
 2831 0267 AD000000 		.4byte	0xad
 2832 026b 02       		.uleb128 0x2
 2833 026c 91       		.byte	0x91
 2834 026d 70       		.sleb128 -16
 2835 026e 00       		.byte	0
 2836 026f 12       		.uleb128 0x12
 2837 0270 66020000 		.4byte	.LASF41
 2838 0274 01       		.byte	0x1
 2839 0275 2802     		.2byte	0x228
 2840 0277 76000000 		.4byte	0x76
 2841 027b 00000000 		.4byte	.LFB7
 2842 027f 3C000000 		.4byte	.LFE7-.LFB7
 2843 0283 01       		.uleb128 0x1
 2844 0284 9C       		.byte	0x9c
 2845 0285 A8020000 		.4byte	0x2a8
 2846 0289 0E       		.uleb128 0xe
 2847 028a 07060000 		.4byte	.LASF42
 2848 028e 01       		.byte	0x1
 2849 028f 2A02     		.2byte	0x22a
 2850 0291 6B000000 		.4byte	0x6b
 2851 0295 02       		.uleb128 0x2
 2852 0296 91       		.byte	0x91
 2853 0297 75       		.sleb128 -11
 2854 0298 0E       		.uleb128 0xe
 2855 0299 72030000 		.4byte	.LASF43
 2856 029d 01       		.byte	0x1
 2857 029e 2B02     		.2byte	0x22b
 2858 02a0 76000000 		.4byte	0x76
 2859 02a4 02       		.uleb128 0x2
 2860 02a5 91       		.byte	0x91
 2861 02a6 76       		.sleb128 -10
 2862 02a7 00       		.byte	0
 2863 02a8 13       		.uleb128 0x13
 2864 02a9 7C030000 		.4byte	.LASF44
 2865 02ad 01       		.byte	0x1
 2866 02ae 4A02     		.2byte	0x24a
 2867 02b0 00000000 		.4byte	.LFB8
 2868 02b4 20000000 		.4byte	.LFE8-.LFB8
 2869 02b8 01       		.uleb128 0x1
 2870 02b9 9C       		.byte	0x9c
 2871 02ba 13       		.uleb128 0x13
 2872 02bb B6000000 		.4byte	.LASF45
 2873 02bf 01       		.byte	0x1
 2874 02c0 6102     		.2byte	0x261
 2875 02c2 00000000 		.4byte	.LFB9
 2876 02c6 20000000 		.4byte	.LFE9-.LFB9
 2877 02ca 01       		.uleb128 0x1
 2878 02cb 9C       		.byte	0x9c
 2879 02cc 12       		.uleb128 0x12
 2880 02cd AA020000 		.4byte	.LASF46
 2881 02d1 01       		.byte	0x1
 2882 02d2 8402     		.2byte	0x284
 2883 02d4 6B000000 		.4byte	0x6b
 2884 02d8 00000000 		.4byte	.LFB10
 2885 02dc 50000000 		.4byte	.LFE10-.LFB10
 2886 02e0 01       		.uleb128 0x1
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 84


 2887 02e1 9C       		.byte	0x9c
 2888 02e2 05030000 		.4byte	0x305
 2889 02e6 10       		.uleb128 0x10
 2890 02e7 5E020000 		.4byte	.LASF47
 2891 02eb 01       		.byte	0x1
 2892 02ec 8402     		.2byte	0x284
 2893 02ee 6B000000 		.4byte	0x6b
 2894 02f2 02       		.uleb128 0x2
 2895 02f3 91       		.byte	0x91
 2896 02f4 6F       		.sleb128 -17
 2897 02f5 0E       		.uleb128 0xe
 2898 02f6 D4060000 		.4byte	.LASF38
 2899 02fa 01       		.byte	0x1
 2900 02fb 8602     		.2byte	0x286
 2901 02fd 6B000000 		.4byte	0x6b
 2902 0301 02       		.uleb128 0x2
 2903 0302 91       		.byte	0x91
 2904 0303 77       		.sleb128 -9
 2905 0304 00       		.byte	0
 2906 0305 12       		.uleb128 0x12
 2907 0306 61010000 		.4byte	.LASF48
 2908 030a 01       		.byte	0x1
 2909 030b B302     		.2byte	0x2b3
 2910 030d 8C000000 		.4byte	0x8c
 2911 0311 00000000 		.4byte	.LFB11
 2912 0315 68000000 		.4byte	.LFE11-.LFB11
 2913 0319 01       		.uleb128 0x1
 2914 031a 9C       		.byte	0x9c
 2915 031b 3E030000 		.4byte	0x33e
 2916 031f 0E       		.uleb128 0xe
 2917 0320 0D070000 		.4byte	.LASF49
 2918 0324 01       		.byte	0x1
 2919 0325 B502     		.2byte	0x2b5
 2920 0327 8C000000 		.4byte	0x8c
 2921 032b 02       		.uleb128 0x2
 2922 032c 91       		.byte	0x91
 2923 032d 76       		.sleb128 -10
 2924 032e 0E       		.uleb128 0xe
 2925 032f E1040000 		.4byte	.LASF36
 2926 0333 01       		.byte	0x1
 2927 0334 B602     		.2byte	0x2b6
 2928 0336 6B000000 		.4byte	0x6b
 2929 033a 02       		.uleb128 0x2
 2930 033b 91       		.byte	0x91
 2931 033c 77       		.sleb128 -9
 2932 033d 00       		.byte	0
 2933 033e 12       		.uleb128 0x12
 2934 033f A4050000 		.4byte	.LASF50
 2935 0343 01       		.byte	0x1
 2936 0344 E902     		.2byte	0x2e9
 2937 0346 97000000 		.4byte	0x97
 2938 034a 00000000 		.4byte	.LFB12
 2939 034e 7C000000 		.4byte	.LFE12-.LFB12
 2940 0352 01       		.uleb128 0x1
 2941 0353 9C       		.byte	0x9c
 2942 0354 77030000 		.4byte	0x377
 2943 0358 0E       		.uleb128 0xe
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 85


 2944 0359 0D070000 		.4byte	.LASF49
 2945 035d 01       		.byte	0x1
 2946 035e EB02     		.2byte	0x2eb
 2947 0360 76000000 		.4byte	0x76
 2948 0364 02       		.uleb128 0x2
 2949 0365 91       		.byte	0x91
 2950 0366 76       		.sleb128 -10
 2951 0367 0E       		.uleb128 0xe
 2952 0368 E1040000 		.4byte	.LASF36
 2953 036c 01       		.byte	0x1
 2954 036d EC02     		.2byte	0x2ec
 2955 036f 6B000000 		.4byte	0x6b
 2956 0373 02       		.uleb128 0x2
 2957 0374 91       		.byte	0x91
 2958 0375 75       		.sleb128 -11
 2959 0376 00       		.byte	0
 2960 0377 12       		.uleb128 0x12
 2961 0378 A0010000 		.4byte	.LASF51
 2962 037c 01       		.byte	0x1
 2963 037d 2503     		.2byte	0x325
 2964 037f A2000000 		.4byte	0xa2
 2965 0383 00000000 		.4byte	.LFB13
 2966 0387 A8000000 		.4byte	.LFE13-.LFB13
 2967 038b 01       		.uleb128 0x1
 2968 038c 9C       		.byte	0x9c
 2969 038d B0030000 		.4byte	0x3b0
 2970 0391 0E       		.uleb128 0xe
 2971 0392 0D070000 		.4byte	.LASF49
 2972 0396 01       		.byte	0x1
 2973 0397 2703     		.2byte	0x327
 2974 0399 81000000 		.4byte	0x81
 2975 039d 02       		.uleb128 0x2
 2976 039e 91       		.byte	0x91
 2977 039f 74       		.sleb128 -12
 2978 03a0 0E       		.uleb128 0xe
 2979 03a1 E1040000 		.4byte	.LASF36
 2980 03a5 01       		.byte	0x1
 2981 03a6 2803     		.2byte	0x328
 2982 03a8 6B000000 		.4byte	0x6b
 2983 03ac 02       		.uleb128 0x2
 2984 03ad 91       		.byte	0x91
 2985 03ae 73       		.sleb128 -13
 2986 03af 00       		.byte	0
 2987 03b0 0F       		.uleb128 0xf
 2988 03b1 EE000000 		.4byte	.LASF52
 2989 03b5 01       		.byte	0x1
 2990 03b6 8203     		.2byte	0x382
 2991 03b8 00000000 		.4byte	.LFB14
 2992 03bc 1C000000 		.4byte	.LFE14-.LFB14
 2993 03c0 01       		.uleb128 0x1
 2994 03c1 9C       		.byte	0x9c
 2995 03c2 D6030000 		.4byte	0x3d6
 2996 03c6 10       		.uleb128 0x10
 2997 03c7 48060000 		.4byte	.LASF53
 2998 03cb 01       		.byte	0x1
 2999 03cc 8203     		.2byte	0x382
 3000 03ce A2000000 		.4byte	0xa2
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 86


 3001 03d2 02       		.uleb128 0x2
 3002 03d3 91       		.byte	0x91
 3003 03d4 74       		.sleb128 -12
 3004 03d5 00       		.byte	0
 3005 03d6 0F       		.uleb128 0xf
 3006 03d7 7D000000 		.4byte	.LASF54
 3007 03db 01       		.byte	0x1
 3008 03dc A503     		.2byte	0x3a5
 3009 03de 00000000 		.4byte	.LFB15
 3010 03e2 1C000000 		.4byte	.LFE15-.LFB15
 3011 03e6 01       		.uleb128 0x1
 3012 03e7 9C       		.byte	0x9c
 3013 03e8 FC030000 		.4byte	0x3fc
 3014 03ec 10       		.uleb128 0x10
 3015 03ed 07000000 		.4byte	.LASF55
 3016 03f1 01       		.byte	0x1
 3017 03f2 A503     		.2byte	0x3a5
 3018 03f4 A2000000 		.4byte	0xa2
 3019 03f8 02       		.uleb128 0x2
 3020 03f9 91       		.byte	0x91
 3021 03fa 74       		.sleb128 -12
 3022 03fb 00       		.byte	0
 3023 03fc 12       		.uleb128 0x12
 3024 03fd 6D050000 		.4byte	.LASF56
 3025 0401 01       		.byte	0x1
 3026 0402 C003     		.2byte	0x3c0
 3027 0404 97000000 		.4byte	0x97
 3028 0408 00000000 		.4byte	.LFB16
 3029 040c 40000000 		.4byte	.LFE16-.LFB16
 3030 0410 01       		.uleb128 0x1
 3031 0411 9C       		.byte	0x9c
 3032 0412 35040000 		.4byte	0x435
 3033 0416 10       		.uleb128 0x10
 3034 0417 7E060000 		.4byte	.LASF57
 3035 041b 01       		.byte	0x1
 3036 041c C003     		.2byte	0x3c0
 3037 041e A2000000 		.4byte	0xa2
 3038 0422 02       		.uleb128 0x2
 3039 0423 91       		.byte	0x91
 3040 0424 6C       		.sleb128 -20
 3041 0425 0E       		.uleb128 0xe
 3042 0426 C1030000 		.4byte	.LASF58
 3043 042a 01       		.byte	0x1
 3044 042b C303     		.2byte	0x3c3
 3045 042d 97000000 		.4byte	0x97
 3046 0431 02       		.uleb128 0x2
 3047 0432 91       		.byte	0x91
 3048 0433 76       		.sleb128 -10
 3049 0434 00       		.byte	0
 3050 0435 11       		.uleb128 0x11
 3051 0436 CF020000 		.4byte	.LASF59
 3052 043a 01       		.byte	0x1
 3053 043b FD03     		.2byte	0x3fd
 3054 043d AD000000 		.4byte	0xad
 3055 0441 00000000 		.4byte	.LFB17
 3056 0445 44000000 		.4byte	.LFE17-.LFB17
 3057 0449 01       		.uleb128 0x1
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 87


 3058 044a 9C       		.byte	0x9c
 3059 044b 6E040000 		.4byte	0x46e
 3060 044f 10       		.uleb128 0x10
 3061 0450 7E060000 		.4byte	.LASF57
 3062 0454 01       		.byte	0x1
 3063 0455 FD03     		.2byte	0x3fd
 3064 0457 A2000000 		.4byte	0xa2
 3065 045b 02       		.uleb128 0x2
 3066 045c 91       		.byte	0x91
 3067 045d 64       		.sleb128 -28
 3068 045e 0E       		.uleb128 0xe
 3069 045f 30020000 		.4byte	.LASF60
 3070 0463 01       		.byte	0x1
 3071 0464 0004     		.2byte	0x400
 3072 0466 AD000000 		.4byte	0xad
 3073 046a 02       		.uleb128 0x2
 3074 046b 91       		.byte	0x91
 3075 046c 6C       		.sleb128 -20
 3076 046d 00       		.byte	0
 3077 046e 12       		.uleb128 0x12
 3078 046f 0B020000 		.4byte	.LASF61
 3079 0473 01       		.byte	0x1
 3080 0474 3F04     		.2byte	0x43f
 3081 0476 A2000000 		.4byte	0xa2
 3082 047a 00000000 		.4byte	.LFB18
 3083 047e B8000000 		.4byte	.LFE18-.LFB18
 3084 0482 01       		.uleb128 0x1
 3085 0483 9C       		.byte	0x9c
 3086 0484 D4040000 		.4byte	0x4d4
 3087 0488 10       		.uleb128 0x10
 3088 0489 7E060000 		.4byte	.LASF57
 3089 048d 01       		.byte	0x1
 3090 048e 3F04     		.2byte	0x43f
 3091 0490 A2000000 		.4byte	0xa2
 3092 0494 02       		.uleb128 0x2
 3093 0495 91       		.byte	0x91
 3094 0496 64       		.sleb128 -28
 3095 0497 0E       		.uleb128 0xe
 3096 0498 91020000 		.4byte	.LASF62
 3097 049c 01       		.byte	0x1
 3098 049d 4204     		.2byte	0x442
 3099 049f A2000000 		.4byte	0xa2
 3100 04a3 02       		.uleb128 0x2
 3101 04a4 91       		.byte	0x91
 3102 04a5 68       		.sleb128 -24
 3103 04a6 0E       		.uleb128 0xe
 3104 04a7 F6050000 		.4byte	.LASF63
 3105 04ab 01       		.byte	0x1
 3106 04ac 4304     		.2byte	0x443
 3107 04ae A2000000 		.4byte	0xa2
 3108 04b2 02       		.uleb128 0x2
 3109 04b3 91       		.byte	0x91
 3110 04b4 74       		.sleb128 -12
 3111 04b5 0E       		.uleb128 0xe
 3112 04b6 FC050000 		.4byte	.LASF64
 3113 04ba 01       		.byte	0x1
 3114 04bb 4404     		.2byte	0x444
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 88


 3115 04bd A2000000 		.4byte	0xa2
 3116 04c1 02       		.uleb128 0x2
 3117 04c2 91       		.byte	0x91
 3118 04c3 70       		.sleb128 -16
 3119 04c4 0E       		.uleb128 0xe
 3120 04c5 EB050000 		.4byte	.LASF65
 3121 04c9 01       		.byte	0x1
 3122 04ca 4504     		.2byte	0x445
 3123 04cc 6B000000 		.4byte	0x6b
 3124 04d0 02       		.uleb128 0x2
 3125 04d1 91       		.byte	0x91
 3126 04d2 6F       		.sleb128 -17
 3127 04d3 00       		.byte	0
 3128 04d4 14       		.uleb128 0x14
 3129 04d5 41010000 		.4byte	.LASF68
 3130 04d9 01       		.byte	0x1
 3131 04da DA04     		.2byte	0x4da
 3132 04dc 00000000 		.4byte	.LFB19
 3133 04e0 64010000 		.4byte	.LFE19-.LFB19
 3134 04e4 01       		.uleb128 0x1
 3135 04e5 9C       		.byte	0x9c
 3136 04e6 FA040000 		.4byte	0x4fa
 3137 04ea 10       		.uleb128 0x10
 3138 04eb 0E060000 		.4byte	.LASF26
 3139 04ef 01       		.byte	0x1
 3140 04f0 DA04     		.2byte	0x4da
 3141 04f2 6B000000 		.4byte	0x6b
 3142 04f6 02       		.uleb128 0x2
 3143 04f7 91       		.byte	0x91
 3144 04f8 77       		.sleb128 -9
 3145 04f9 00       		.byte	0
 3146 04fa 0D       		.uleb128 0xd
 3147 04fb 19050000 		.4byte	.LASF66
 3148 04ff 01       		.byte	0x1
 3149 0500 1006     		.2byte	0x610
 3150 0502 00000000 		.4byte	.LFB20
 3151 0506 90000000 		.4byte	.LFE20-.LFB20
 3152 050a 01       		.uleb128 0x1
 3153 050b 9C       		.byte	0x9c
 3154 050c 2F050000 		.4byte	0x52f
 3155 0510 10       		.uleb128 0x10
 3156 0511 0E060000 		.4byte	.LASF26
 3157 0515 01       		.byte	0x1
 3158 0516 1006     		.2byte	0x610
 3159 0518 6B000000 		.4byte	0x6b
 3160 051c 02       		.uleb128 0x2
 3161 051d 91       		.byte	0x91
 3162 051e 77       		.sleb128 -9
 3163 051f 10       		.uleb128 0x10
 3164 0520 37060000 		.4byte	.LASF67
 3165 0524 01       		.byte	0x1
 3166 0525 1006     		.2byte	0x610
 3167 0527 6B000000 		.4byte	0x6b
 3168 052b 02       		.uleb128 0x2
 3169 052c 91       		.byte	0x91
 3170 052d 76       		.sleb128 -10
 3171 052e 00       		.byte	0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 89


 3172 052f 14       		.uleb128 0x14
 3173 0530 C5050000 		.4byte	.LASF69
 3174 0534 01       		.byte	0x1
 3175 0535 5106     		.2byte	0x651
 3176 0537 00000000 		.4byte	.LFB21
 3177 053b 6C010000 		.4byte	.LFE21-.LFB21
 3178 053f 01       		.uleb128 0x1
 3179 0540 9C       		.byte	0x9c
 3180 0541 CD050000 		.4byte	0x5cd
 3181 0545 10       		.uleb128 0x10
 3182 0546 2C000000 		.4byte	.LASF70
 3183 054a 01       		.byte	0x1
 3184 054b 5106     		.2byte	0x651
 3185 054d 6B000000 		.4byte	0x6b
 3186 0551 02       		.uleb128 0x2
 3187 0552 91       		.byte	0x91
 3188 0553 5F       		.sleb128 -33
 3189 0554 10       		.uleb128 0x10
 3190 0555 47050000 		.4byte	.LASF71
 3191 0559 01       		.byte	0x1
 3192 055a 5106     		.2byte	0x651
 3193 055c 76000000 		.4byte	0x76
 3194 0560 02       		.uleb128 0x2
 3195 0561 91       		.byte	0x91
 3196 0562 5C       		.sleb128 -36
 3197 0563 10       		.uleb128 0x10
 3198 0564 87010000 		.4byte	.LASF72
 3199 0568 01       		.byte	0x1
 3200 0569 5106     		.2byte	0x651
 3201 056b 76000000 		.4byte	0x76
 3202 056f 02       		.uleb128 0x2
 3203 0570 91       		.byte	0x91
 3204 0571 5A       		.sleb128 -38
 3205 0572 10       		.uleb128 0x10
 3206 0573 EB050000 		.4byte	.LASF65
 3207 0577 01       		.byte	0x1
 3208 0578 5206     		.2byte	0x652
 3209 057a 6B000000 		.4byte	0x6b
 3210 057e 02       		.uleb128 0x2
 3211 057f 91       		.byte	0x91
 3212 0580 5E       		.sleb128 -34
 3213 0581 10       		.uleb128 0x10
 3214 0582 0E060000 		.4byte	.LASF26
 3215 0586 01       		.byte	0x1
 3216 0587 5206     		.2byte	0x652
 3217 0589 6B000000 		.4byte	0x6b
 3218 058d 02       		.uleb128 0x2
 3219 058e 91       		.byte	0x91
 3220 058f 00       		.sleb128 0
 3221 0590 0E       		.uleb128 0xe
 3222 0591 37000000 		.4byte	.LASF73
 3223 0595 01       		.byte	0x1
 3224 0596 5406     		.2byte	0x654
 3225 0598 8C000000 		.4byte	0x8c
 3226 059c 02       		.uleb128 0x2
 3227 059d 91       		.byte	0x91
 3228 059e 6F       		.sleb128 -17
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 90


 3229 059f 0E       		.uleb128 0xe
 3230 05a0 54050000 		.4byte	.LASF74
 3231 05a4 01       		.byte	0x1
 3232 05a5 5506     		.2byte	0x655
 3233 05a7 A2000000 		.4byte	0xa2
 3234 05ab 02       		.uleb128 0x2
 3235 05ac 91       		.byte	0x91
 3236 05ad 68       		.sleb128 -24
 3237 05ae 0E       		.uleb128 0xe
 3238 05af 72030000 		.4byte	.LASF43
 3239 05b3 01       		.byte	0x1
 3240 05b4 5606     		.2byte	0x656
 3241 05b6 76000000 		.4byte	0x76
 3242 05ba 02       		.uleb128 0x2
 3243 05bb 91       		.byte	0x91
 3244 05bc 6C       		.sleb128 -20
 3245 05bd 0E       		.uleb128 0xe
 3246 05be 9C050000 		.4byte	.LASF75
 3247 05c2 01       		.byte	0x1
 3248 05c3 5706     		.2byte	0x657
 3249 05c5 81000000 		.4byte	0x81
 3250 05c9 02       		.uleb128 0x2
 3251 05ca 91       		.byte	0x91
 3252 05cb 64       		.sleb128 -28
 3253 05cc 00       		.byte	0
 3254 05cd 14       		.uleb128 0x14
 3255 05ce 9E030000 		.4byte	.LASF76
 3256 05d2 01       		.byte	0x1
 3257 05d3 BC06     		.2byte	0x6bc
 3258 05d5 00000000 		.4byte	.LFB22
 3259 05d9 78000000 		.4byte	.LFE22-.LFB22
 3260 05dd 01       		.uleb128 0x1
 3261 05de 9C       		.byte	0x9c
 3262 05df 02060000 		.4byte	0x602
 3263 05e3 10       		.uleb128 0x10
 3264 05e4 58020000 		.4byte	.LASF77
 3265 05e8 01       		.byte	0x1
 3266 05e9 BC06     		.2byte	0x6bc
 3267 05eb 6B000000 		.4byte	0x6b
 3268 05ef 02       		.uleb128 0x2
 3269 05f0 91       		.byte	0x91
 3270 05f1 6F       		.sleb128 -17
 3271 05f2 0E       		.uleb128 0xe
 3272 05f3 A6060000 		.4byte	.LASF27
 3273 05f7 01       		.byte	0x1
 3274 05f8 BE06     		.2byte	0x6be
 3275 05fa 6B000000 		.4byte	0x6b
 3276 05fe 02       		.uleb128 0x2
 3277 05ff 91       		.byte	0x91
 3278 0600 77       		.sleb128 -9
 3279 0601 00       		.byte	0
 3280 0602 11       		.uleb128 0x11
 3281 0603 3D020000 		.4byte	.LASF78
 3282 0607 01       		.byte	0x1
 3283 0608 E206     		.2byte	0x6e2
 3284 060a 8C000000 		.4byte	0x8c
 3285 060e 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 91


 3286 0612 3C000000 		.4byte	.LFE23-.LFB23
 3287 0616 01       		.uleb128 0x1
 3288 0617 9C       		.byte	0x9c
 3289 0618 2C060000 		.4byte	0x62c
 3290 061c 0E       		.uleb128 0xe
 3291 061d 0D070000 		.4byte	.LASF49
 3292 0621 01       		.byte	0x1
 3293 0622 E406     		.2byte	0x6e4
 3294 0624 8C000000 		.4byte	0x8c
 3295 0628 02       		.uleb128 0x2
 3296 0629 91       		.byte	0x91
 3297 062a 77       		.sleb128 -9
 3298 062b 00       		.byte	0
 3299 062c 11       		.uleb128 0x11
 3300 062d 14070000 		.4byte	.LASF79
 3301 0631 01       		.byte	0x1
 3302 0632 0307     		.2byte	0x703
 3303 0634 97000000 		.4byte	0x97
 3304 0638 00000000 		.4byte	.LFB24
 3305 063c 3C000000 		.4byte	.LFE24-.LFB24
 3306 0640 01       		.uleb128 0x1
 3307 0641 9C       		.byte	0x9c
 3308 0642 56060000 		.4byte	0x656
 3309 0646 0E       		.uleb128 0xe
 3310 0647 0D070000 		.4byte	.LASF49
 3311 064b 01       		.byte	0x1
 3312 064c 0507     		.2byte	0x705
 3313 064e 97000000 		.4byte	0x97
 3314 0652 02       		.uleb128 0x2
 3315 0653 91       		.byte	0x91
 3316 0654 76       		.sleb128 -10
 3317 0655 00       		.byte	0
 3318 0656 11       		.uleb128 0x11
 3319 0657 56030000 		.4byte	.LASF80
 3320 065b 01       		.byte	0x1
 3321 065c 2407     		.2byte	0x724
 3322 065e A2000000 		.4byte	0xa2
 3323 0662 00000000 		.4byte	.LFB25
 3324 0666 38000000 		.4byte	.LFE25-.LFB25
 3325 066a 01       		.uleb128 0x1
 3326 066b 9C       		.byte	0x9c
 3327 066c 80060000 		.4byte	0x680
 3328 0670 0E       		.uleb128 0xe
 3329 0671 0D070000 		.4byte	.LASF49
 3330 0675 01       		.byte	0x1
 3331 0676 2607     		.2byte	0x726
 3332 0678 A2000000 		.4byte	0xa2
 3333 067c 02       		.uleb128 0x2
 3334 067d 91       		.byte	0x91
 3335 067e 74       		.sleb128 -12
 3336 067f 00       		.byte	0
 3337 0680 15       		.uleb128 0x15
 3338 0681 28010000 		.4byte	0x128
 3339 0685 90060000 		.4byte	0x690
 3340 0689 16       		.uleb128 0x16
 3341 068a 00010000 		.4byte	0x100
 3342 068e 00       		.byte	0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 92


 3343 068f 00       		.byte	0
 3344 0690 0B       		.uleb128 0xb
 3345 0691 3D000000 		.4byte	.LASF81
 3346 0695 01       		.byte	0x1
 3347 0696 3D       		.byte	0x3d
 3348 0697 80060000 		.4byte	0x680
 3349 069b 05       		.uleb128 0x5
 3350 069c 03       		.byte	0x3
 3351 069d 04000000 		.4byte	ResistiveTouch_1_ADC_gcor
 3352 06a1 17       		.uleb128 0x17
 3353 06a2 1A060000 		.4byte	.LASF82
 3354 06a6 01       		.byte	0x1
 3355 06a7 2C       		.byte	0x2c
 3356 06a8 6B000000 		.4byte	0x6b
 3357 06ac 05       		.uleb128 0x5
 3358 06ad 03       		.byte	0x3
 3359 06ae 00000000 		.4byte	ResistiveTouch_1_ADC_initVar
 3360 06b2 17       		.uleb128 0x17
 3361 06b3 88060000 		.4byte	.LASF83
 3362 06b7 01       		.byte	0x1
 3363 06b8 24       		.byte	0x24
 3364 06b9 D9000000 		.4byte	0xd9
 3365 06bd 05       		.uleb128 0x5
 3366 06be 03       		.byte	0x3
 3367 06bf 00000000 		.4byte	ResistiveTouch_1_ADC_convDone
 3368 06c3 17       		.uleb128 0x17
 3369 06c4 BD040000 		.4byte	.LASF84
 3370 06c8 01       		.byte	0x1
 3371 06c9 29       		.byte	0x29
 3372 06ca D9000000 		.4byte	0xd9
 3373 06ce 05       		.uleb128 0x5
 3374 06cf 03       		.byte	0x3
 3375 06d0 00000000 		.4byte	ResistiveTouch_1_ADC_stopConversion
 3376 06d4 17       		.uleb128 0x17
 3377 06d5 B7060000 		.4byte	.LASF85
 3378 06d9 01       		.byte	0x1
 3379 06da 2F       		.byte	0x2f
 3380 06db D9000000 		.4byte	0xd9
 3381 06df 05       		.uleb128 0x5
 3382 06e0 03       		.byte	0x3
 3383 06e1 00000000 		.4byte	ResistiveTouch_1_ADC_started
 3384 06e5 17       		.uleb128 0x17
 3385 06e6 9A000000 		.4byte	.LASF86
 3386 06ea 01       		.byte	0x1
 3387 06eb 32       		.byte	0x32
 3388 06ec D9000000 		.4byte	0xd9
 3389 06f0 05       		.uleb128 0x5
 3390 06f1 03       		.byte	0x3
 3391 06f2 00000000 		.4byte	ResistiveTouch_1_ADC_Config
 3392 06f6 17       		.uleb128 0x17
 3393 06f7 4F060000 		.4byte	.LASF87
 3394 06fb 01       		.byte	0x1
 3395 06fc 34       		.byte	0x34
 3396 06fd 07070000 		.4byte	0x707
 3397 0701 05       		.uleb128 0x5
 3398 0702 03       		.byte	0x3
 3399 0703 00000000 		.4byte	ResistiveTouch_1_ADC_Offset
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 93


 3400 0707 06       		.uleb128 0x6
 3401 0708 A2000000 		.4byte	0xa2
 3402 070c 17       		.uleb128 0x17
 3403 070d 2E030000 		.4byte	.LASF88
 3404 0711 01       		.byte	0x1
 3405 0712 35       		.byte	0x35
 3406 0713 07070000 		.4byte	0x707
 3407 0717 05       		.uleb128 0x5
 3408 0718 03       		.byte	0x3
 3409 0719 00000000 		.4byte	ResistiveTouch_1_ADC_CountsPerVolt
 3410 071d 00       		.byte	0
 3411              		.section	.debug_abbrev,"",%progbits
 3412              	.Ldebug_abbrev0:
 3413 0000 01       		.uleb128 0x1
 3414 0001 11       		.uleb128 0x11
 3415 0002 01       		.byte	0x1
 3416 0003 25       		.uleb128 0x25
 3417 0004 0E       		.uleb128 0xe
 3418 0005 13       		.uleb128 0x13
 3419 0006 0B       		.uleb128 0xb
 3420 0007 03       		.uleb128 0x3
 3421 0008 0E       		.uleb128 0xe
 3422 0009 1B       		.uleb128 0x1b
 3423 000a 0E       		.uleb128 0xe
 3424 000b 55       		.uleb128 0x55
 3425 000c 17       		.uleb128 0x17
 3426 000d 11       		.uleb128 0x11
 3427 000e 01       		.uleb128 0x1
 3428 000f 10       		.uleb128 0x10
 3429 0010 17       		.uleb128 0x17
 3430 0011 00       		.byte	0
 3431 0012 00       		.byte	0
 3432 0013 02       		.uleb128 0x2
 3433 0014 24       		.uleb128 0x24
 3434 0015 00       		.byte	0
 3435 0016 0B       		.uleb128 0xb
 3436 0017 0B       		.uleb128 0xb
 3437 0018 3E       		.uleb128 0x3e
 3438 0019 0B       		.uleb128 0xb
 3439 001a 03       		.uleb128 0x3
 3440 001b 0E       		.uleb128 0xe
 3441 001c 00       		.byte	0
 3442 001d 00       		.byte	0
 3443 001e 03       		.uleb128 0x3
 3444 001f 24       		.uleb128 0x24
 3445 0020 00       		.byte	0
 3446 0021 0B       		.uleb128 0xb
 3447 0022 0B       		.uleb128 0xb
 3448 0023 3E       		.uleb128 0x3e
 3449 0024 0B       		.uleb128 0xb
 3450 0025 03       		.uleb128 0x3
 3451 0026 08       		.uleb128 0x8
 3452 0027 00       		.byte	0
 3453 0028 00       		.byte	0
 3454 0029 04       		.uleb128 0x4
 3455 002a 16       		.uleb128 0x16
 3456 002b 00       		.byte	0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 94


 3457 002c 03       		.uleb128 0x3
 3458 002d 0E       		.uleb128 0xe
 3459 002e 3A       		.uleb128 0x3a
 3460 002f 0B       		.uleb128 0xb
 3461 0030 3B       		.uleb128 0x3b
 3462 0031 0B       		.uleb128 0xb
 3463 0032 49       		.uleb128 0x49
 3464 0033 13       		.uleb128 0x13
 3465 0034 00       		.byte	0
 3466 0035 00       		.byte	0
 3467 0036 05       		.uleb128 0x5
 3468 0037 16       		.uleb128 0x16
 3469 0038 00       		.byte	0
 3470 0039 03       		.uleb128 0x3
 3471 003a 0E       		.uleb128 0xe
 3472 003b 3A       		.uleb128 0x3a
 3473 003c 0B       		.uleb128 0xb
 3474 003d 3B       		.uleb128 0x3b
 3475 003e 05       		.uleb128 0x5
 3476 003f 49       		.uleb128 0x49
 3477 0040 13       		.uleb128 0x13
 3478 0041 00       		.byte	0
 3479 0042 00       		.byte	0
 3480 0043 06       		.uleb128 0x6
 3481 0044 35       		.uleb128 0x35
 3482 0045 00       		.byte	0
 3483 0046 49       		.uleb128 0x49
 3484 0047 13       		.uleb128 0x13
 3485 0048 00       		.byte	0
 3486 0049 00       		.byte	0
 3487 004a 07       		.uleb128 0x7
 3488 004b 13       		.uleb128 0x13
 3489 004c 01       		.byte	0x1
 3490 004d 0B       		.uleb128 0xb
 3491 004e 0B       		.uleb128 0xb
 3492 004f 3A       		.uleb128 0x3a
 3493 0050 0B       		.uleb128 0xb
 3494 0051 3B       		.uleb128 0x3b
 3495 0052 0B       		.uleb128 0xb
 3496 0053 01       		.uleb128 0x1
 3497 0054 13       		.uleb128 0x13
 3498 0055 00       		.byte	0
 3499 0056 00       		.byte	0
 3500 0057 08       		.uleb128 0x8
 3501 0058 0D       		.uleb128 0xd
 3502 0059 00       		.byte	0
 3503 005a 03       		.uleb128 0x3
 3504 005b 0E       		.uleb128 0xe
 3505 005c 3A       		.uleb128 0x3a
 3506 005d 0B       		.uleb128 0xb
 3507 005e 3B       		.uleb128 0x3b
 3508 005f 0B       		.uleb128 0xb
 3509 0060 49       		.uleb128 0x49
 3510 0061 13       		.uleb128 0x13
 3511 0062 38       		.uleb128 0x38
 3512 0063 0B       		.uleb128 0xb
 3513 0064 00       		.byte	0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 95


 3514 0065 00       		.byte	0
 3515 0066 09       		.uleb128 0x9
 3516 0067 2E       		.uleb128 0x2e
 3517 0068 00       		.byte	0
 3518 0069 3F       		.uleb128 0x3f
 3519 006a 19       		.uleb128 0x19
 3520 006b 03       		.uleb128 0x3
 3521 006c 0E       		.uleb128 0xe
 3522 006d 3A       		.uleb128 0x3a
 3523 006e 0B       		.uleb128 0xb
 3524 006f 3B       		.uleb128 0x3b
 3525 0070 0B       		.uleb128 0xb
 3526 0071 27       		.uleb128 0x27
 3527 0072 19       		.uleb128 0x19
 3528 0073 11       		.uleb128 0x11
 3529 0074 01       		.uleb128 0x1
 3530 0075 12       		.uleb128 0x12
 3531 0076 06       		.uleb128 0x6
 3532 0077 40       		.uleb128 0x40
 3533 0078 18       		.uleb128 0x18
 3534 0079 9642     		.uleb128 0x2116
 3535 007b 19       		.uleb128 0x19
 3536 007c 00       		.byte	0
 3537 007d 00       		.byte	0
 3538 007e 0A       		.uleb128 0xa
 3539 007f 2E       		.uleb128 0x2e
 3540 0080 01       		.byte	0x1
 3541 0081 3F       		.uleb128 0x3f
 3542 0082 19       		.uleb128 0x19
 3543 0083 03       		.uleb128 0x3
 3544 0084 0E       		.uleb128 0xe
 3545 0085 3A       		.uleb128 0x3a
 3546 0086 0B       		.uleb128 0xb
 3547 0087 3B       		.uleb128 0x3b
 3548 0088 0B       		.uleb128 0xb
 3549 0089 27       		.uleb128 0x27
 3550 008a 19       		.uleb128 0x19
 3551 008b 11       		.uleb128 0x11
 3552 008c 01       		.uleb128 0x1
 3553 008d 12       		.uleb128 0x12
 3554 008e 06       		.uleb128 0x6
 3555 008f 40       		.uleb128 0x40
 3556 0090 18       		.uleb128 0x18
 3557 0091 9642     		.uleb128 0x2116
 3558 0093 19       		.uleb128 0x19
 3559 0094 01       		.uleb128 0x1
 3560 0095 13       		.uleb128 0x13
 3561 0096 00       		.byte	0
 3562 0097 00       		.byte	0
 3563 0098 0B       		.uleb128 0xb
 3564 0099 34       		.uleb128 0x34
 3565 009a 00       		.byte	0
 3566 009b 03       		.uleb128 0x3
 3567 009c 0E       		.uleb128 0xe
 3568 009d 3A       		.uleb128 0x3a
 3569 009e 0B       		.uleb128 0xb
 3570 009f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 96


 3571 00a0 0B       		.uleb128 0xb
 3572 00a1 49       		.uleb128 0x49
 3573 00a2 13       		.uleb128 0x13
 3574 00a3 02       		.uleb128 0x2
 3575 00a4 18       		.uleb128 0x18
 3576 00a5 00       		.byte	0
 3577 00a6 00       		.byte	0
 3578 00a7 0C       		.uleb128 0xc
 3579 00a8 2E       		.uleb128 0x2e
 3580 00a9 00       		.byte	0
 3581 00aa 3F       		.uleb128 0x3f
 3582 00ab 19       		.uleb128 0x19
 3583 00ac 03       		.uleb128 0x3
 3584 00ad 0E       		.uleb128 0xe
 3585 00ae 3A       		.uleb128 0x3a
 3586 00af 0B       		.uleb128 0xb
 3587 00b0 3B       		.uleb128 0x3b
 3588 00b1 05       		.uleb128 0x5
 3589 00b2 27       		.uleb128 0x27
 3590 00b3 19       		.uleb128 0x19
 3591 00b4 11       		.uleb128 0x11
 3592 00b5 01       		.uleb128 0x1
 3593 00b6 12       		.uleb128 0x12
 3594 00b7 06       		.uleb128 0x6
 3595 00b8 40       		.uleb128 0x40
 3596 00b9 18       		.uleb128 0x18
 3597 00ba 9642     		.uleb128 0x2116
 3598 00bc 19       		.uleb128 0x19
 3599 00bd 00       		.byte	0
 3600 00be 00       		.byte	0
 3601 00bf 0D       		.uleb128 0xd
 3602 00c0 2E       		.uleb128 0x2e
 3603 00c1 01       		.byte	0x1
 3604 00c2 3F       		.uleb128 0x3f
 3605 00c3 19       		.uleb128 0x19
 3606 00c4 03       		.uleb128 0x3
 3607 00c5 0E       		.uleb128 0xe
 3608 00c6 3A       		.uleb128 0x3a
 3609 00c7 0B       		.uleb128 0xb
 3610 00c8 3B       		.uleb128 0x3b
 3611 00c9 05       		.uleb128 0x5
 3612 00ca 27       		.uleb128 0x27
 3613 00cb 19       		.uleb128 0x19
 3614 00cc 11       		.uleb128 0x11
 3615 00cd 01       		.uleb128 0x1
 3616 00ce 12       		.uleb128 0x12
 3617 00cf 06       		.uleb128 0x6
 3618 00d0 40       		.uleb128 0x40
 3619 00d1 18       		.uleb128 0x18
 3620 00d2 9642     		.uleb128 0x2116
 3621 00d4 19       		.uleb128 0x19
 3622 00d5 01       		.uleb128 0x1
 3623 00d6 13       		.uleb128 0x13
 3624 00d7 00       		.byte	0
 3625 00d8 00       		.byte	0
 3626 00d9 0E       		.uleb128 0xe
 3627 00da 34       		.uleb128 0x34
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 97


 3628 00db 00       		.byte	0
 3629 00dc 03       		.uleb128 0x3
 3630 00dd 0E       		.uleb128 0xe
 3631 00de 3A       		.uleb128 0x3a
 3632 00df 0B       		.uleb128 0xb
 3633 00e0 3B       		.uleb128 0x3b
 3634 00e1 05       		.uleb128 0x5
 3635 00e2 49       		.uleb128 0x49
 3636 00e3 13       		.uleb128 0x13
 3637 00e4 02       		.uleb128 0x2
 3638 00e5 18       		.uleb128 0x18
 3639 00e6 00       		.byte	0
 3640 00e7 00       		.byte	0
 3641 00e8 0F       		.uleb128 0xf
 3642 00e9 2E       		.uleb128 0x2e
 3643 00ea 01       		.byte	0x1
 3644 00eb 3F       		.uleb128 0x3f
 3645 00ec 19       		.uleb128 0x19
 3646 00ed 03       		.uleb128 0x3
 3647 00ee 0E       		.uleb128 0xe
 3648 00ef 3A       		.uleb128 0x3a
 3649 00f0 0B       		.uleb128 0xb
 3650 00f1 3B       		.uleb128 0x3b
 3651 00f2 05       		.uleb128 0x5
 3652 00f3 27       		.uleb128 0x27
 3653 00f4 19       		.uleb128 0x19
 3654 00f5 11       		.uleb128 0x11
 3655 00f6 01       		.uleb128 0x1
 3656 00f7 12       		.uleb128 0x12
 3657 00f8 06       		.uleb128 0x6
 3658 00f9 40       		.uleb128 0x40
 3659 00fa 18       		.uleb128 0x18
 3660 00fb 9742     		.uleb128 0x2117
 3661 00fd 19       		.uleb128 0x19
 3662 00fe 01       		.uleb128 0x1
 3663 00ff 13       		.uleb128 0x13
 3664 0100 00       		.byte	0
 3665 0101 00       		.byte	0
 3666 0102 10       		.uleb128 0x10
 3667 0103 05       		.uleb128 0x5
 3668 0104 00       		.byte	0
 3669 0105 03       		.uleb128 0x3
 3670 0106 0E       		.uleb128 0xe
 3671 0107 3A       		.uleb128 0x3a
 3672 0108 0B       		.uleb128 0xb
 3673 0109 3B       		.uleb128 0x3b
 3674 010a 05       		.uleb128 0x5
 3675 010b 49       		.uleb128 0x49
 3676 010c 13       		.uleb128 0x13
 3677 010d 02       		.uleb128 0x2
 3678 010e 18       		.uleb128 0x18
 3679 010f 00       		.byte	0
 3680 0110 00       		.byte	0
 3681 0111 11       		.uleb128 0x11
 3682 0112 2E       		.uleb128 0x2e
 3683 0113 01       		.byte	0x1
 3684 0114 3F       		.uleb128 0x3f
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 98


 3685 0115 19       		.uleb128 0x19
 3686 0116 03       		.uleb128 0x3
 3687 0117 0E       		.uleb128 0xe
 3688 0118 3A       		.uleb128 0x3a
 3689 0119 0B       		.uleb128 0xb
 3690 011a 3B       		.uleb128 0x3b
 3691 011b 05       		.uleb128 0x5
 3692 011c 27       		.uleb128 0x27
 3693 011d 19       		.uleb128 0x19
 3694 011e 49       		.uleb128 0x49
 3695 011f 13       		.uleb128 0x13
 3696 0120 11       		.uleb128 0x11
 3697 0121 01       		.uleb128 0x1
 3698 0122 12       		.uleb128 0x12
 3699 0123 06       		.uleb128 0x6
 3700 0124 40       		.uleb128 0x40
 3701 0125 18       		.uleb128 0x18
 3702 0126 9642     		.uleb128 0x2116
 3703 0128 19       		.uleb128 0x19
 3704 0129 01       		.uleb128 0x1
 3705 012a 13       		.uleb128 0x13
 3706 012b 00       		.byte	0
 3707 012c 00       		.byte	0
 3708 012d 12       		.uleb128 0x12
 3709 012e 2E       		.uleb128 0x2e
 3710 012f 01       		.byte	0x1
 3711 0130 3F       		.uleb128 0x3f
 3712 0131 19       		.uleb128 0x19
 3713 0132 03       		.uleb128 0x3
 3714 0133 0E       		.uleb128 0xe
 3715 0134 3A       		.uleb128 0x3a
 3716 0135 0B       		.uleb128 0xb
 3717 0136 3B       		.uleb128 0x3b
 3718 0137 05       		.uleb128 0x5
 3719 0138 27       		.uleb128 0x27
 3720 0139 19       		.uleb128 0x19
 3721 013a 49       		.uleb128 0x49
 3722 013b 13       		.uleb128 0x13
 3723 013c 11       		.uleb128 0x11
 3724 013d 01       		.uleb128 0x1
 3725 013e 12       		.uleb128 0x12
 3726 013f 06       		.uleb128 0x6
 3727 0140 40       		.uleb128 0x40
 3728 0141 18       		.uleb128 0x18
 3729 0142 9742     		.uleb128 0x2117
 3730 0144 19       		.uleb128 0x19
 3731 0145 01       		.uleb128 0x1
 3732 0146 13       		.uleb128 0x13
 3733 0147 00       		.byte	0
 3734 0148 00       		.byte	0
 3735 0149 13       		.uleb128 0x13
 3736 014a 2E       		.uleb128 0x2e
 3737 014b 00       		.byte	0
 3738 014c 3F       		.uleb128 0x3f
 3739 014d 19       		.uleb128 0x19
 3740 014e 03       		.uleb128 0x3
 3741 014f 0E       		.uleb128 0xe
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 99


 3742 0150 3A       		.uleb128 0x3a
 3743 0151 0B       		.uleb128 0xb
 3744 0152 3B       		.uleb128 0x3b
 3745 0153 05       		.uleb128 0x5
 3746 0154 27       		.uleb128 0x27
 3747 0155 19       		.uleb128 0x19
 3748 0156 11       		.uleb128 0x11
 3749 0157 01       		.uleb128 0x1
 3750 0158 12       		.uleb128 0x12
 3751 0159 06       		.uleb128 0x6
 3752 015a 40       		.uleb128 0x40
 3753 015b 18       		.uleb128 0x18
 3754 015c 9742     		.uleb128 0x2117
 3755 015e 19       		.uleb128 0x19
 3756 015f 00       		.byte	0
 3757 0160 00       		.byte	0
 3758 0161 14       		.uleb128 0x14
 3759 0162 2E       		.uleb128 0x2e
 3760 0163 01       		.byte	0x1
 3761 0164 03       		.uleb128 0x3
 3762 0165 0E       		.uleb128 0xe
 3763 0166 3A       		.uleb128 0x3a
 3764 0167 0B       		.uleb128 0xb
 3765 0168 3B       		.uleb128 0x3b
 3766 0169 05       		.uleb128 0x5
 3767 016a 27       		.uleb128 0x27
 3768 016b 19       		.uleb128 0x19
 3769 016c 11       		.uleb128 0x11
 3770 016d 01       		.uleb128 0x1
 3771 016e 12       		.uleb128 0x12
 3772 016f 06       		.uleb128 0x6
 3773 0170 40       		.uleb128 0x40
 3774 0171 18       		.uleb128 0x18
 3775 0172 9642     		.uleb128 0x2116
 3776 0174 19       		.uleb128 0x19
 3777 0175 01       		.uleb128 0x1
 3778 0176 13       		.uleb128 0x13
 3779 0177 00       		.byte	0
 3780 0178 00       		.byte	0
 3781 0179 15       		.uleb128 0x15
 3782 017a 01       		.uleb128 0x1
 3783 017b 01       		.byte	0x1
 3784 017c 49       		.uleb128 0x49
 3785 017d 13       		.uleb128 0x13
 3786 017e 01       		.uleb128 0x1
 3787 017f 13       		.uleb128 0x13
 3788 0180 00       		.byte	0
 3789 0181 00       		.byte	0
 3790 0182 16       		.uleb128 0x16
 3791 0183 21       		.uleb128 0x21
 3792 0184 00       		.byte	0
 3793 0185 49       		.uleb128 0x49
 3794 0186 13       		.uleb128 0x13
 3795 0187 2F       		.uleb128 0x2f
 3796 0188 0B       		.uleb128 0xb
 3797 0189 00       		.byte	0
 3798 018a 00       		.byte	0
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 100


 3799 018b 17       		.uleb128 0x17
 3800 018c 34       		.uleb128 0x34
 3801 018d 00       		.byte	0
 3802 018e 03       		.uleb128 0x3
 3803 018f 0E       		.uleb128 0xe
 3804 0190 3A       		.uleb128 0x3a
 3805 0191 0B       		.uleb128 0xb
 3806 0192 3B       		.uleb128 0x3b
 3807 0193 0B       		.uleb128 0xb
 3808 0194 49       		.uleb128 0x49
 3809 0195 13       		.uleb128 0x13
 3810 0196 3F       		.uleb128 0x3f
 3811 0197 19       		.uleb128 0x19
 3812 0198 02       		.uleb128 0x2
 3813 0199 18       		.uleb128 0x18
 3814 019a 00       		.byte	0
 3815 019b 00       		.byte	0
 3816 019c 00       		.byte	0
 3817              		.section	.debug_aranges,"",%progbits
 3818 0000 E4000000 		.4byte	0xe4
 3819 0004 0200     		.2byte	0x2
 3820 0006 00000000 		.4byte	.Ldebug_info0
 3821 000a 04       		.byte	0x4
 3822 000b 00       		.byte	0
 3823 000c 0000     		.2byte	0
 3824 000e 0000     		.2byte	0
 3825 0010 00000000 		.4byte	.LFB0
 3826 0014 1C010000 		.4byte	.LFE0-.LFB0
 3827 0018 00000000 		.4byte	.LFB1
 3828 001c 58010000 		.4byte	.LFE1-.LFB1
 3829 0020 00000000 		.4byte	.LFB2
 3830 0024 30000000 		.4byte	.LFE2-.LFB2
 3831 0028 00000000 		.4byte	.LFB3
 3832 002c 7C010000 		.4byte	.LFE3-.LFB3
 3833 0030 00000000 		.4byte	.LFB4
 3834 0034 3C000000 		.4byte	.LFE4-.LFB4
 3835 0038 00000000 		.4byte	.LFB5
 3836 003c 38000000 		.4byte	.LFE5-.LFB5
 3837 0040 00000000 		.4byte	.LFB6
 3838 0044 B4000000 		.4byte	.LFE6-.LFB6
 3839 0048 00000000 		.4byte	.LFB7
 3840 004c 3C000000 		.4byte	.LFE7-.LFB7
 3841 0050 00000000 		.4byte	.LFB8
 3842 0054 20000000 		.4byte	.LFE8-.LFB8
 3843 0058 00000000 		.4byte	.LFB9
 3844 005c 20000000 		.4byte	.LFE9-.LFB9
 3845 0060 00000000 		.4byte	.LFB10
 3846 0064 50000000 		.4byte	.LFE10-.LFB10
 3847 0068 00000000 		.4byte	.LFB11
 3848 006c 68000000 		.4byte	.LFE11-.LFB11
 3849 0070 00000000 		.4byte	.LFB12
 3850 0074 7C000000 		.4byte	.LFE12-.LFB12
 3851 0078 00000000 		.4byte	.LFB13
 3852 007c A8000000 		.4byte	.LFE13-.LFB13
 3853 0080 00000000 		.4byte	.LFB14
 3854 0084 1C000000 		.4byte	.LFE14-.LFB14
 3855 0088 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 101


 3856 008c 1C000000 		.4byte	.LFE15-.LFB15
 3857 0090 00000000 		.4byte	.LFB16
 3858 0094 40000000 		.4byte	.LFE16-.LFB16
 3859 0098 00000000 		.4byte	.LFB17
 3860 009c 44000000 		.4byte	.LFE17-.LFB17
 3861 00a0 00000000 		.4byte	.LFB18
 3862 00a4 B8000000 		.4byte	.LFE18-.LFB18
 3863 00a8 00000000 		.4byte	.LFB19
 3864 00ac 64010000 		.4byte	.LFE19-.LFB19
 3865 00b0 00000000 		.4byte	.LFB20
 3866 00b4 90000000 		.4byte	.LFE20-.LFB20
 3867 00b8 00000000 		.4byte	.LFB21
 3868 00bc 6C010000 		.4byte	.LFE21-.LFB21
 3869 00c0 00000000 		.4byte	.LFB22
 3870 00c4 78000000 		.4byte	.LFE22-.LFB22
 3871 00c8 00000000 		.4byte	.LFB23
 3872 00cc 3C000000 		.4byte	.LFE23-.LFB23
 3873 00d0 00000000 		.4byte	.LFB24
 3874 00d4 3C000000 		.4byte	.LFE24-.LFB24
 3875 00d8 00000000 		.4byte	.LFB25
 3876 00dc 38000000 		.4byte	.LFE25-.LFB25
 3877 00e0 00000000 		.4byte	0
 3878 00e4 00000000 		.4byte	0
 3879              		.section	.debug_ranges,"",%progbits
 3880              	.Ldebug_ranges0:
 3881 0000 00000000 		.4byte	.LFB0
 3882 0004 1C010000 		.4byte	.LFE0
 3883 0008 00000000 		.4byte	.LFB1
 3884 000c 58010000 		.4byte	.LFE1
 3885 0010 00000000 		.4byte	.LFB2
 3886 0014 30000000 		.4byte	.LFE2
 3887 0018 00000000 		.4byte	.LFB3
 3888 001c 7C010000 		.4byte	.LFE3
 3889 0020 00000000 		.4byte	.LFB4
 3890 0024 3C000000 		.4byte	.LFE4
 3891 0028 00000000 		.4byte	.LFB5
 3892 002c 38000000 		.4byte	.LFE5
 3893 0030 00000000 		.4byte	.LFB6
 3894 0034 B4000000 		.4byte	.LFE6
 3895 0038 00000000 		.4byte	.LFB7
 3896 003c 3C000000 		.4byte	.LFE7
 3897 0040 00000000 		.4byte	.LFB8
 3898 0044 20000000 		.4byte	.LFE8
 3899 0048 00000000 		.4byte	.LFB9
 3900 004c 20000000 		.4byte	.LFE9
 3901 0050 00000000 		.4byte	.LFB10
 3902 0054 50000000 		.4byte	.LFE10
 3903 0058 00000000 		.4byte	.LFB11
 3904 005c 68000000 		.4byte	.LFE11
 3905 0060 00000000 		.4byte	.LFB12
 3906 0064 7C000000 		.4byte	.LFE12
 3907 0068 00000000 		.4byte	.LFB13
 3908 006c A8000000 		.4byte	.LFE13
 3909 0070 00000000 		.4byte	.LFB14
 3910 0074 1C000000 		.4byte	.LFE14
 3911 0078 00000000 		.4byte	.LFB15
 3912 007c 1C000000 		.4byte	.LFE15
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 102


 3913 0080 00000000 		.4byte	.LFB16
 3914 0084 40000000 		.4byte	.LFE16
 3915 0088 00000000 		.4byte	.LFB17
 3916 008c 44000000 		.4byte	.LFE17
 3917 0090 00000000 		.4byte	.LFB18
 3918 0094 B8000000 		.4byte	.LFE18
 3919 0098 00000000 		.4byte	.LFB19
 3920 009c 64010000 		.4byte	.LFE19
 3921 00a0 00000000 		.4byte	.LFB20
 3922 00a4 90000000 		.4byte	.LFE20
 3923 00a8 00000000 		.4byte	.LFB21
 3924 00ac 6C010000 		.4byte	.LFE21
 3925 00b0 00000000 		.4byte	.LFB22
 3926 00b4 78000000 		.4byte	.LFE22
 3927 00b8 00000000 		.4byte	.LFB23
 3928 00bc 3C000000 		.4byte	.LFE23
 3929 00c0 00000000 		.4byte	.LFB24
 3930 00c4 3C000000 		.4byte	.LFE24
 3931 00c8 00000000 		.4byte	.LFB25
 3932 00cc 38000000 		.4byte	.LFE25
 3933 00d0 00000000 		.4byte	0
 3934 00d4 00000000 		.4byte	0
 3935              		.section	.debug_line,"",%progbits
 3936              	.Ldebug_line0:
 3937 0000 74030000 		.section	.debug_str,"MS",%progbits,1
 3937      02006B00 
 3937      00000201 
 3937      FB0E0D00 
 3937      01010101 
 3938              	.LASF10:
 3939 0000 75696E74 		.ascii	"uint16\000"
 3939      313600
 3940              	.LASF55:
 3941 0007 61646347 		.ascii	"adcGain\000"
 3941      61696E00 
 3942              	.LASF40:
 3943 000f 52657369 		.ascii	"ResistiveTouch_1_ADC_SetGCOR\000"
 3943      73746976 
 3943      65546F75 
 3943      63685F31 
 3943      5F414443 
 3944              	.LASF70:
 3945 002c 696E7075 		.ascii	"inputRange\000"
 3945      7452616E 
 3945      676500
 3946              	.LASF73:
 3947 0037 666C6173 		.ascii	"flash\000"
 3947      6800
 3948              	.LASF81:
 3949 003d 52657369 		.ascii	"ResistiveTouch_1_ADC_gcor\000"
 3949      73746976 
 3949      65546F75 
 3949      63685F31 
 3949      5F414443 
 3950              	.LASF25:
 3951 0057 52657369 		.ascii	"ResistiveTouch_1_ADC_GCOR_STRUCT\000"
 3951      73746976 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 103


 3951      65546F75 
 3951      63685F31 
 3951      5F414443 
 3952              	.LASF23:
 3953 0078 67636F72 		.ascii	"gcor\000"
 3953      00
 3954              	.LASF54:
 3955 007d 52657369 		.ascii	"ResistiveTouch_1_ADC_SetGain\000"
 3955      73746976 
 3955      65546F75 
 3955      63685F31 
 3955      5F414443 
 3956              	.LASF86:
 3957 009a 52657369 		.ascii	"ResistiveTouch_1_ADC_Config\000"
 3957      73746976 
 3957      65546F75 
 3957      63685F31 
 3957      5F414443 
 3958              	.LASF45:
 3959 00b6 52657369 		.ascii	"ResistiveTouch_1_ADC_StopConvert\000"
 3959      73746976 
 3959      65546F75 
 3959      63685F31 
 3959      5F414443 
 3960              	.LASF7:
 3961 00d7 6C6F6E67 		.ascii	"long long unsigned int\000"
 3961      206C6F6E 
 3961      6720756E 
 3961      7369676E 
 3961      65642069 
 3962              	.LASF52:
 3963 00ee 52657369 		.ascii	"ResistiveTouch_1_ADC_SetOffset\000"
 3963      73746976 
 3963      65546F75 
 3963      63685F31 
 3963      5F414443 
 3964              	.LASF6:
 3965 010d 6C6F6E67 		.ascii	"long long int\000"
 3965      206C6F6E 
 3965      6720696E 
 3965      7400
 3966              	.LASF0:
 3967 011b 7369676E 		.ascii	"signed char\000"
 3967      65642063 
 3967      68617200 
 3968              	.LASF31:
 3969 0127 52657369 		.ascii	"ResistiveTouch_1_ADC_Stop\000"
 3969      73746976 
 3969      65546F75 
 3969      63685F31 
 3969      5F414443 
 3970              	.LASF68:
 3971 0141 52657369 		.ascii	"ResistiveTouch_1_ADC_InitConfig\000"
 3971      73746976 
 3971      65546F75 
 3971      63685F31 
 3971      5F414443 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 104


 3972              	.LASF48:
 3973 0161 52657369 		.ascii	"ResistiveTouch_1_ADC_GetResult8\000"
 3973      73746976 
 3973      65546F75 
 3973      63685F31 
 3973      5F414443 
 3974              	.LASF14:
 3975 0181 696E7433 		.ascii	"int32\000"
 3975      3200
 3976              	.LASF72:
 3977 0187 69646561 		.ascii	"idealOddDecGain\000"
 3977      6C4F6464 
 3977      44656347 
 3977      61696E00 
 3978              	.LASF4:
 3979 0197 6C6F6E67 		.ascii	"long int\000"
 3979      20696E74 
 3979      00
 3980              	.LASF51:
 3981 01a0 52657369 		.ascii	"ResistiveTouch_1_ADC_GetResult32\000"
 3981      73746976 
 3981      65546F75 
 3981      63685F31 
 3981      5F414443 
 3982              	.LASF29:
 3983 01c1 52657369 		.ascii	"ResistiveTouch_1_ADC_Start\000"
 3983      73746976 
 3983      65546F75 
 3983      63685F31 
 3983      5F414443 
 3984              	.LASF20:
 3985 01dc 72656731 		.ascii	"reg16\000"
 3985      3600
 3986              	.LASF9:
 3987 01e2 75696E74 		.ascii	"uint8\000"
 3987      3800
 3988              	.LASF17:
 3989 01e8 646F7562 		.ascii	"double\000"
 3989      6C6500
 3990              	.LASF30:
 3991 01ef 52657369 		.ascii	"ResistiveTouch_1_ADC_Enable\000"
 3991      73746976 
 3991      65546F75 
 3991      63685F31 
 3991      5F414443 
 3992              	.LASF61:
 3993 020b 52657369 		.ascii	"ResistiveTouch_1_ADC_CountsTo_uVolts\000"
 3993      73746976 
 3993      65546F75 
 3993      63685F31 
 3993      5F414443 
 3994              	.LASF60:
 3995 0230 566F6C74 		.ascii	"Volts\000"
 3995      7300
 3996              	.LASF11:
 3997 0236 75696E74 		.ascii	"uint32\000"
 3997      333200
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 105


 3998              	.LASF78:
 3999 023d 52657369 		.ascii	"ResistiveTouch_1_ADC_Read8\000"
 3999      73746976 
 3999      65546F75 
 3999      63685F31 
 3999      5F414443 
 4000              	.LASF77:
 4001 0258 76616C75 		.ascii	"value\000"
 4001      6500
 4002              	.LASF47:
 4003 025e 7265744D 		.ascii	"retMode\000"
 4003      6F646500 
 4004              	.LASF41:
 4005 0266 52657369 		.ascii	"ResistiveTouch_1_ADC_ReadGCOR\000"
 4005      73746976 
 4005      65546F75 
 4005      63685F31 
 4005      5F414443 
 4006              	.LASF8:
 4007 0284 756E7369 		.ascii	"unsigned int\000"
 4007      676E6564 
 4007      20696E74 
 4007      00
 4008              	.LASF62:
 4009 0291 75566F6C 		.ascii	"uVolts\000"
 4009      747300
 4010              	.LASF5:
 4011 0298 6C6F6E67 		.ascii	"long unsigned int\000"
 4011      20756E73 
 4011      69676E65 
 4011      6420696E 
 4011      7400
 4012              	.LASF46:
 4013 02aa 52657369 		.ascii	"ResistiveTouch_1_ADC_IsEndConversion\000"
 4013      73746976 
 4013      65546F75 
 4013      63685F31 
 4013      5F414443 
 4014              	.LASF59:
 4015 02cf 52657369 		.ascii	"ResistiveTouch_1_ADC_CountsTo_Volts\000"
 4015      73746976 
 4015      65546F75 
 4015      63685F31 
 4015      5F414443 
 4016              	.LASF91:
 4017 02f3 443A5C57 		.ascii	"D:\\Workspace\\PSoC_Creator\\Active_Load\\Active_Lo"
 4017      6F726B73 
 4017      70616365 
 4017      5C50536F 
 4017      435F4372 
 4018 0322 61645F76 		.ascii	"ad_v9.cydsn\000"
 4018      392E6379 
 4018      64736E00 
 4019              	.LASF88:
 4020 032e 52657369 		.ascii	"ResistiveTouch_1_ADC_CountsPerVolt\000"
 4020      73746976 
 4020      65546F75 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 106


 4020      63685F31 
 4020      5F414443 
 4021              	.LASF12:
 4022 0351 696E7438 		.ascii	"int8\000"
 4022      00
 4023              	.LASF80:
 4024 0356 52657369 		.ascii	"ResistiveTouch_1_ADC_Read32\000"
 4024      73746976 
 4024      65546F75 
 4024      63685F31 
 4024      5F414443 
 4025              	.LASF43:
 4026 0372 67636F72 		.ascii	"gcorValue\000"
 4026      56616C75 
 4026      6500
 4027              	.LASF44:
 4028 037c 52657369 		.ascii	"ResistiveTouch_1_ADC_StartConvert\000"
 4028      73746976 
 4028      65546F75 
 4028      63685F31 
 4028      5F414443 
 4029              	.LASF76:
 4030 039e 52657369 		.ascii	"ResistiveTouch_1_ADC_SetDSMRef0Reg\000"
 4030      73746976 
 4030      65546F75 
 4030      63685F31 
 4030      5F414443 
 4031              	.LASF58:
 4032 03c1 6D566F6C 		.ascii	"mVolts\000"
 4032      747300
 4033              	.LASF90:
 4034 03c8 47656E65 		.ascii	"Generated_Source\\PSoC5\\ResistiveTouch_1_ADC.c\000"
 4034      72617465 
 4034      645F536F 
 4034      75726365 
 4034      5C50536F 
 4035              	.LASF21:
 4036 03f6 72656733 		.ascii	"reg32\000"
 4036      3200
 4037              	.LASF34:
 4038 03fc 52657369 		.ascii	"ResistiveTouch_1_ADC_SetCoherency\000"
 4038      73746976 
 4038      65546F75 
 4038      63685F31 
 4038      5F414443 
 4039              	.LASF15:
 4040 041e 666C6F61 		.ascii	"float32\000"
 4040      74333200 
 4041              	.LASF22:
 4042 0426 73697A65 		.ascii	"sizetype\000"
 4042      74797065 
 4042      00
 4043              	.LASF89:
 4044 042f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4044      4320342E 
 4044      392E3320 
 4044      32303135 
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 107


 4044      30333033 
 4045 0462 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4045      20726576 
 4045      6973696F 
 4045      6E203232 
 4045      31323230 
 4046 0495 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4046      66756E63 
 4046      74696F6E 
 4046      2D736563 
 4046      74696F6E 
 4047              	.LASF84:
 4048 04bd 52657369 		.ascii	"ResistiveTouch_1_ADC_stopConversion\000"
 4048      73746976 
 4048      65546F75 
 4048      63685F31 
 4048      5F414443 
 4049              	.LASF36:
 4050 04e1 636F6865 		.ascii	"coherency\000"
 4050      72656E63 
 4050      7900
 4051              	.LASF35:
 4052 04eb 6761696E 		.ascii	"gain\000"
 4052      00
 4053              	.LASF32:
 4054 04f0 52657369 		.ascii	"ResistiveTouch_1_ADC_SetBufferGain\000"
 4054      73746976 
 4054      65546F75 
 4054      63685F31 
 4054      5F414443 
 4055              	.LASF16:
 4056 0513 666C6F61 		.ascii	"float\000"
 4056      7400
 4057              	.LASF66:
 4058 0519 52657369 		.ascii	"ResistiveTouch_1_ADC_SelectConfiguration\000"
 4058      73746976 
 4058      65546F75 
 4058      63685F31 
 4058      5F414443 
 4059              	.LASF19:
 4060 0542 72656738 		.ascii	"reg8\000"
 4060      00
 4061              	.LASF71:
 4062 0547 69646561 		.ascii	"idealDecGain\000"
 4062      6C446563 
 4062      4761696E 
 4062      00
 4063              	.LASF74:
 4064 0554 6E6F726D 		.ascii	"normalised\000"
 4064      616C6973 
 4064      656400
 4065              	.LASF1:
 4066 055f 756E7369 		.ascii	"unsigned char\000"
 4066      676E6564 
 4066      20636861 
 4066      7200
 4067              	.LASF56:
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 108


 4068 056d 52657369 		.ascii	"ResistiveTouch_1_ADC_CountsTo_mVolts\000"
 4068      73746976 
 4068      65546F75 
 4068      63685F31 
 4068      5F414443 
 4069              	.LASF2:
 4070 0592 73686F72 		.ascii	"short int\000"
 4070      7420696E 
 4070      7400
 4071              	.LASF75:
 4072 059c 67636F72 		.ascii	"gcorTmp\000"
 4072      546D7000 
 4073              	.LASF50:
 4074 05a4 52657369 		.ascii	"ResistiveTouch_1_ADC_GetResult16\000"
 4074      73746976 
 4074      65546F75 
 4074      63685F31 
 4074      5F414443 
 4075              	.LASF69:
 4076 05c5 52657369 		.ascii	"ResistiveTouch_1_ADC_GainCompensation\000"
 4076      73746976 
 4076      65546F75 
 4076      63685F31 
 4076      5F414443 
 4077              	.LASF65:
 4078 05eb 7265736F 		.ascii	"resolution\000"
 4078      6C757469 
 4078      6F6E00
 4079              	.LASF63:
 4080 05f6 636F6566 		.ascii	"coefA\000"
 4080      4100
 4081              	.LASF64:
 4082 05fc 636F6566 		.ascii	"coefB\000"
 4082      4200
 4083              	.LASF18:
 4084 0602 63686172 		.ascii	"char\000"
 4084      00
 4085              	.LASF42:
 4086 0607 6756616C 		.ascii	"gValue\000"
 4086      756500
 4087              	.LASF26:
 4088 060e 636F6E66 		.ascii	"config\000"
 4088      696700
 4089              	.LASF24:
 4090 0615 6776616C 		.ascii	"gval\000"
 4090      00
 4091              	.LASF82:
 4092 061a 52657369 		.ascii	"ResistiveTouch_1_ADC_initVar\000"
 4092      73746976 
 4092      65546F75 
 4092      63685F31 
 4092      5F414443 
 4093              	.LASF67:
 4094 0637 72657374 		.ascii	"restart\000"
 4094      61727400 
 4095              	.LASF39:
 4096 063f 746D7056 		.ascii	"tmpValue\000"
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 109


 4096      616C7565 
 4096      00
 4097              	.LASF53:
 4098 0648 6F666673 		.ascii	"offset\000"
 4098      657400
 4099              	.LASF87:
 4100 064f 52657369 		.ascii	"ResistiveTouch_1_ADC_Offset\000"
 4100      73746976 
 4100      65546F75 
 4100      63685F31 
 4100      5F414443 
 4101              	.LASF3:
 4102 066b 73686F72 		.ascii	"short unsigned int\000"
 4102      7420756E 
 4102      7369676E 
 4102      65642069 
 4102      6E7400
 4103              	.LASF57:
 4104 067e 61646343 		.ascii	"adcCounts\000"
 4104      6F756E74 
 4104      7300
 4105              	.LASF83:
 4106 0688 52657369 		.ascii	"ResistiveTouch_1_ADC_convDone\000"
 4106      73746976 
 4106      65546F75 
 4106      63685F31 
 4106      5F414443 
 4107              	.LASF27:
 4108 06a6 656E6162 		.ascii	"enableInterrupts\000"
 4108      6C65496E 
 4108      74657272 
 4108      75707473 
 4108      00
 4109              	.LASF85:
 4110 06b7 52657369 		.ascii	"ResistiveTouch_1_ADC_started\000"
 4110      73746976 
 4110      65546F75 
 4110      63685F31 
 4110      5F414443 
 4111              	.LASF38:
 4112 06d4 73746174 		.ascii	"status\000"
 4112      757300
 4113              	.LASF37:
 4114 06db 6761696E 		.ascii	"gainAdjust\000"
 4114      41646A75 
 4114      737400
 4115              	.LASF13:
 4116 06e6 696E7431 		.ascii	"int16\000"
 4116      3600
 4117              	.LASF28:
 4118 06ec 52657369 		.ascii	"ResistiveTouch_1_ADC_Init\000"
 4118      73746976 
 4118      65546F75 
 4118      63685F31 
 4118      5F414443 
 4119              	.LASF33:
 4120 0706 746D7052 		.ascii	"tmpReg\000"
ARM GAS  C:\Users\KJA\AppData\Local\Temp\ccSum1Bq.s 			page 110


 4120      656700
 4121              	.LASF49:
 4122 070d 72657375 		.ascii	"result\000"
 4122      6C7400
 4123              	.LASF79:
 4124 0714 52657369 		.ascii	"ResistiveTouch_1_ADC_Read16\000"
 4124      73746976 
 4124      65546F75 
 4124      63685F31 
 4124      5F414443 
 4125              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
